Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    RETURN
    BREAK
    PERIOD

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON programvars programfunction block
Rule 2     programvars -> vars
Rule 3     programvars -> empty
Rule 4     programfunction -> function programfunction
Rule 5     programfunction -> empty
Rule 6     block -> LBRACE blockprima RBRACE
Rule 7     blockprima -> statute blockprima
Rule 8     blockprima -> empty
Rule 9     statute -> assignment
Rule 10    statute -> condition
Rule 11    statute -> write
Rule 12    statute -> read
Rule 13    statute -> cycle
Rule 14    statute -> functioncall
Rule 15    statute -> predefined
Rule 16    condition -> IF LPAREN singularexp2 RPAREN block
Rule 17    condition -> IF LPAREN functioncall RPAREN block
Rule 18    condition -> IF LPAREN singularexp2 RPAREN block ELSE block
Rule 19    condition -> IF LPAREN functioncall RPAREN block ELSE block
Rule 20    condition -> IF LPAREN NOT singularexp2 RPAREN block
Rule 21    condition -> IF LPAREN NOT functioncall RPAREN block
Rule 22    condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block
Rule 23    condition -> IF LPAREN NOT functioncall RPAREN block ELSE block
Rule 24    vars -> VAR ID varsprima COLON type SEMICOLON
Rule 25    varsprima -> COMMA ID varsprima
Rule 26    varsprima -> empty
Rule 27    type -> INTTYPE
Rule 28    type -> FLOATTYPE
Rule 29    type -> STRINGTYPE
Rule 30    type -> BOOLEANTYPE
Rule 31    type -> array
Rule 32    array -> INTTYPE LBRACKET ID RBRACKET
Rule 33    array -> INTTYPE LBRACKET NUMBER RBRACKET
Rule 34    array -> FLOATTYPE LBRACKET NUMBER RBRACKET
Rule 35    array -> FLOATTYPE LBRACKET ID RBRACKET
Rule 36    array -> STRING LBRACKET ID RBRACKET
Rule 37    array -> STRING LBRACKET NUMBER RBRACKET
Rule 38    assignment -> ID ASSIGN singularexp2 SEMICOLON
Rule 39    assignment -> ID ASSIGN functioncall
Rule 40    singularexp2 -> singularexp
Rule 41    singularexp2 -> NOT singularexp
Rule 42    singularexp -> singularexp AND expression
Rule 43    singularexp -> singularexp OR expression
Rule 44    singularexp -> expression
Rule 45    expression -> expression LESSER exp
Rule 46    expression -> expression GREATER exp
Rule 47    expression -> expression EQUAL exp
Rule 48    expression -> expression NOTEQUAL exp
Rule 49    expression -> expression LESSEROREQUAL exp
Rule 50    expression -> expression GREATEROREQUAL exp
Rule 51    expression -> exp
Rule 52    exp -> exp PLUS term
Rule 53    exp -> exp MINUS term
Rule 54    exp -> term
Rule 55    term -> term TIMES factor
Rule 56    term -> term DEVIDE factor
Rule 57    term -> factor
Rule 58    factor -> LPAREN singularexp2 RPAREN
Rule 59    factor -> PLUS varcte
Rule 60    factor -> MINUS varcte
Rule 61    factor -> varcte
Rule 62    varcte -> INT
Rule 63    varcte -> FLOAT
Rule 64    varcte -> STRING
Rule 65    varcte -> ID
Rule 66    varcte -> bool
Rule 67    bool -> TRUE
Rule 68    bool -> FALSE
Rule 69    functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON
Rule 70    functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON
Rule 71    funcparam -> singularexp2 funcparamprima
Rule 72    funcparam -> ID funcparamprima
Rule 73    funcparamprima -> COMMA funcparam
Rule 74    funcparamprima -> empty
Rule 75    function -> FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN block
Rule 76    function -> FUNCTION type FUNCTIONID LPAREN parameter RPAREN block
Rule 77    function -> FUNCTION VOID FUNCTIONID LPAREN RPAREN block
Rule 78    function -> FUNCTION type FUNCTIONID LPAREN RPAREN block
Rule 79    parameter -> type ID parameterprima
Rule 80    parameterprima -> COMMA type ID parameterprima
Rule 81    parameterprima -> empty
Rule 82    write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON
Rule 83    write -> PRINT LPAREN ID RPAREN SEMICOLON
Rule 84    read -> ID ASSIGN INPUT SEMICOLON
Rule 85    cycle -> WHILE LPAREN singularexp2 RPAREN block
Rule 86    color -> BLUE
Rule 87    color -> GREEN
Rule 88    color -> RED
Rule 89    color -> YELLOW
Rule 90    color -> BROWN
Rule 91    color -> BLACK
Rule 92    predefined -> drawline
Rule 93    predefined -> drawsquare
Rule 94    predefined -> drawtriangle
Rule 95    predefined -> drawcircle
Rule 96    predefined -> drawcurve
Rule 97    predefined -> drawpolygon
Rule 98    drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
Rule 99    drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
Rule 100   drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
Rule 101   drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
Rule 102   drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
Rule 103   drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
Rule 104   idssexp -> PARAMID
Rule 105   idssexp -> singularexp2
Rule 106   empty -> <empty>

Terminals, with rules where they appear

AND                  : 42
ASSIGN               : 38 39 84
BLACK                : 91
BLUE                 : 86
BOOLEANTYPE          : 30
BREAK                : 
BROWN                : 90
COLON                : 24
COMMA                : 25 73 80 98 98 98 98 99 99 100 100 101 101 102 102 103 103
DEVIDE               : 56
DRAWCIRCLE           : 101
DRAWCURVE            : 102
DRAWLINE             : 98
DRAWPOLYGON          : 103
DRAWSQUARE           : 99
DRAWTRIANGLE         : 100
ELSE                 : 18 19 22 23
EQUAL                : 47
FALSE                : 68
FLOAT                : 63
FLOATTYPE            : 28 34 35
FUNCTION             : 75 76 77 78
FUNCTIONID           : 69 70 75 76 77 78
GREATER              : 46
GREATEROREQUAL       : 50
GREEN                : 87
ID                   : 1 24 25 32 35 36 38 39 65 72 79 80 83 84
IF                   : 16 17 18 19 20 21 22 23
INPUT                : 84
INT                  : 62
INTTYPE              : 27 32 33
LBRACE               : 6
LBRACKET             : 32 33 34 35 36 37
LESSER               : 45
LESSEROREQUAL        : 49
LPAREN               : 16 17 18 19 20 21 22 23 58 69 70 75 76 77 78 82 83 85 98 99 100 101 102 103
MINUS                : 53 60
NOT                  : 20 21 22 23 41
NOTEQUAL             : 48
NUMBER               : 33 34 37
OR                   : 43
PARAMID              : 104
PERIOD               : 
PLUS                 : 52 59
PRINT                : 82 83
PROGRAM              : 1
RBRACE               : 6
RBRACKET             : 32 33 34 35 36 37
RED                  : 88
RETURN               : 
RPAREN               : 16 17 18 19 20 21 22 23 58 69 70 75 76 77 78 82 83 85 98 99 100 101 102 103
SEMICOLON            : 1 24 38 69 70 82 83 84 98 99 100 101 102 103
STRING               : 36 37 64
STRINGTYPE           : 29
TIMES                : 55
TRUE                 : 67
VAR                  : 24
VOID                 : 75 77
WHILE                : 85
YELLOW               : 89
error                : 

Nonterminals, with rules where they appear

array                : 31
assignment           : 9
block                : 1 16 17 18 18 19 19 20 21 22 22 23 23 75 76 77 78 85
blockprima           : 6 7
bool                 : 66
color                : 98 99 100 101 102 103
condition            : 10
cycle                : 13
drawcircle           : 95
drawcurve            : 96
drawline             : 92
drawpolygon          : 97
drawsquare           : 93
drawtriangle         : 94
empty                : 3 5 8 26 74 81
exp                  : 45 46 47 48 49 50 51 52 53
expression           : 42 43 44 45 46 47 48 49 50
factor               : 55 56 57
funcparam            : 70 73
funcparamprima       : 71 72
function             : 4
functioncall         : 14 17 19 21 23 39
idssexp              : 98 98 98 98 99 99 100 100 101 101 102 102 103 103
parameter            : 75 76
parameterprima       : 79 80
predefined           : 15
program              : 0
programfunction      : 1 4
programvars          : 1
read                 : 12
singularexp          : 40 41 42 43
singularexp2         : 16 18 20 22 38 58 71 82 85 105
statute              : 7
term                 : 52 53 54 55 56
type                 : 24 76 78 79 80
varcte               : 59 60 61
vars                 : 2
varsprima            : 24 25
write                : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON programvars programfunction block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON programvars programfunction block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON programvars programfunction block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . programvars programfunction block
    (2) programvars -> . vars
    (3) programvars -> . empty
    (24) vars -> . VAR ID varsprima COLON type SEMICOLON
    (106) empty -> .

    VAR             shift and go to state 7
    FUNCTION        reduce using rule 106 (empty -> .)
    LBRACE          reduce using rule 106 (empty -> .)

    vars                           shift and go to state 5
    programvars                    shift and go to state 8
    empty                          shift and go to state 6

state 5

    (2) programvars -> vars .

    FUNCTION        reduce using rule 2 (programvars -> vars .)
    LBRACE          reduce using rule 2 (programvars -> vars .)


state 6

    (3) programvars -> empty .

    FUNCTION        reduce using rule 3 (programvars -> empty .)
    LBRACE          reduce using rule 3 (programvars -> empty .)


state 7

    (24) vars -> VAR . ID varsprima COLON type SEMICOLON

    ID              shift and go to state 9


state 8

    (1) program -> PROGRAM ID SEMICOLON programvars . programfunction block
    (4) programfunction -> . function programfunction
    (5) programfunction -> . empty
    (75) function -> . FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN block
    (76) function -> . FUNCTION type FUNCTIONID LPAREN parameter RPAREN block
    (77) function -> . FUNCTION VOID FUNCTIONID LPAREN RPAREN block
    (78) function -> . FUNCTION type FUNCTIONID LPAREN RPAREN block
    (106) empty -> .

    FUNCTION        shift and go to state 11
    LBRACE          reduce using rule 106 (empty -> .)

    function                       shift and go to state 10
    programfunction                shift and go to state 13
    empty                          shift and go to state 12

state 9

    (24) vars -> VAR ID . varsprima COLON type SEMICOLON
    (25) varsprima -> . COMMA ID varsprima
    (26) varsprima -> . empty
    (106) empty -> .

    COMMA           shift and go to state 14
    COLON           reduce using rule 106 (empty -> .)

    varsprima                      shift and go to state 15
    empty                          shift and go to state 16

state 10

    (4) programfunction -> function . programfunction
    (4) programfunction -> . function programfunction
    (5) programfunction -> . empty
    (75) function -> . FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN block
    (76) function -> . FUNCTION type FUNCTIONID LPAREN parameter RPAREN block
    (77) function -> . FUNCTION VOID FUNCTIONID LPAREN RPAREN block
    (78) function -> . FUNCTION type FUNCTIONID LPAREN RPAREN block
    (106) empty -> .

    FUNCTION        shift and go to state 11
    LBRACE          reduce using rule 106 (empty -> .)

    function                       shift and go to state 10
    programfunction                shift and go to state 17
    empty                          shift and go to state 12

state 11

    (75) function -> FUNCTION . VOID FUNCTIONID LPAREN parameter RPAREN block
    (76) function -> FUNCTION . type FUNCTIONID LPAREN parameter RPAREN block
    (77) function -> FUNCTION . VOID FUNCTIONID LPAREN RPAREN block
    (78) function -> FUNCTION . type FUNCTIONID LPAREN RPAREN block
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE LBRACKET ID RBRACKET
    (33) array -> . INTTYPE LBRACKET NUMBER RBRACKET
    (34) array -> . FLOATTYPE LBRACKET NUMBER RBRACKET
    (35) array -> . FLOATTYPE LBRACKET ID RBRACKET
    (36) array -> . STRING LBRACKET ID RBRACKET
    (37) array -> . STRING LBRACKET NUMBER RBRACKET

    VOID            shift and go to state 21
    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 19
    STRINGTYPE      shift and go to state 18
    BOOLEANTYPE     shift and go to state 22
    STRING          shift and go to state 25

    type                           shift and go to state 20
    array                          shift and go to state 24

state 12

    (5) programfunction -> empty .

    LBRACE          reduce using rule 5 (programfunction -> empty .)


state 13

    (1) program -> PROGRAM ID SEMICOLON programvars programfunction . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 27

state 14

    (25) varsprima -> COMMA . ID varsprima

    ID              shift and go to state 28


state 15

    (24) vars -> VAR ID varsprima . COLON type SEMICOLON

    COLON           shift and go to state 29


state 16

    (26) varsprima -> empty .

    COLON           reduce using rule 26 (varsprima -> empty .)


state 17

    (4) programfunction -> function programfunction .

    LBRACE          reduce using rule 4 (programfunction -> function programfunction .)


state 18

    (29) type -> STRINGTYPE .

    FUNCTIONID      reduce using rule 29 (type -> STRINGTYPE .)
    ID              reduce using rule 29 (type -> STRINGTYPE .)
    SEMICOLON       reduce using rule 29 (type -> STRINGTYPE .)


state 19

    (28) type -> FLOATTYPE .
    (34) array -> FLOATTYPE . LBRACKET NUMBER RBRACKET
    (35) array -> FLOATTYPE . LBRACKET ID RBRACKET

    FUNCTIONID      reduce using rule 28 (type -> FLOATTYPE .)
    ID              reduce using rule 28 (type -> FLOATTYPE .)
    SEMICOLON       reduce using rule 28 (type -> FLOATTYPE .)
    LBRACKET        shift and go to state 30


state 20

    (76) function -> FUNCTION type . FUNCTIONID LPAREN parameter RPAREN block
    (78) function -> FUNCTION type . FUNCTIONID LPAREN RPAREN block

    FUNCTIONID      shift and go to state 31


state 21

    (75) function -> FUNCTION VOID . FUNCTIONID LPAREN parameter RPAREN block
    (77) function -> FUNCTION VOID . FUNCTIONID LPAREN RPAREN block

    FUNCTIONID      shift and go to state 32


state 22

    (30) type -> BOOLEANTYPE .

    FUNCTIONID      reduce using rule 30 (type -> BOOLEANTYPE .)
    ID              reduce using rule 30 (type -> BOOLEANTYPE .)
    SEMICOLON       reduce using rule 30 (type -> BOOLEANTYPE .)


state 23

    (27) type -> INTTYPE .
    (32) array -> INTTYPE . LBRACKET ID RBRACKET
    (33) array -> INTTYPE . LBRACKET NUMBER RBRACKET

    FUNCTIONID      reduce using rule 27 (type -> INTTYPE .)
    ID              reduce using rule 27 (type -> INTTYPE .)
    SEMICOLON       reduce using rule 27 (type -> INTTYPE .)
    LBRACKET        shift and go to state 33


state 24

    (31) type -> array .

    FUNCTIONID      reduce using rule 31 (type -> array .)
    ID              reduce using rule 31 (type -> array .)
    SEMICOLON       reduce using rule 31 (type -> array .)


state 25

    (36) array -> STRING . LBRACKET ID RBRACKET
    (37) array -> STRING . LBRACKET NUMBER RBRACKET

    LBRACKET        shift and go to state 34


state 26

    (6) block -> LBRACE . blockprima RBRACE
    (7) blockprima -> . statute blockprima
    (8) blockprima -> . empty
    (9) statute -> . assignment
    (10) statute -> . condition
    (11) statute -> . write
    (12) statute -> . read
    (13) statute -> . cycle
    (14) statute -> . functioncall
    (15) statute -> . predefined
    (106) empty -> .
    (38) assignment -> . ID ASSIGN singularexp2 SEMICOLON
    (39) assignment -> . ID ASSIGN functioncall
    (16) condition -> . IF LPAREN singularexp2 RPAREN block
    (17) condition -> . IF LPAREN functioncall RPAREN block
    (18) condition -> . IF LPAREN singularexp2 RPAREN block ELSE block
    (19) condition -> . IF LPAREN functioncall RPAREN block ELSE block
    (20) condition -> . IF LPAREN NOT singularexp2 RPAREN block
    (21) condition -> . IF LPAREN NOT functioncall RPAREN block
    (22) condition -> . IF LPAREN NOT singularexp2 RPAREN block ELSE block
    (23) condition -> . IF LPAREN NOT functioncall RPAREN block ELSE block
    (82) write -> . PRINT LPAREN singularexp2 RPAREN SEMICOLON
    (83) write -> . PRINT LPAREN ID RPAREN SEMICOLON
    (84) read -> . ID ASSIGN INPUT SEMICOLON
    (85) cycle -> . WHILE LPAREN singularexp2 RPAREN block
    (69) functioncall -> . FUNCTIONID LPAREN RPAREN SEMICOLON
    (70) functioncall -> . FUNCTIONID LPAREN funcparam RPAREN SEMICOLON
    (92) predefined -> . drawline
    (93) predefined -> . drawsquare
    (94) predefined -> . drawtriangle
    (95) predefined -> . drawcircle
    (96) predefined -> . drawcurve
    (97) predefined -> . drawpolygon
    (98) drawline -> . DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (99) drawsquare -> . DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (100) drawtriangle -> . DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (101) drawcircle -> . DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (102) drawcurve -> . DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (103) drawpolygon -> . DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 106 (empty -> .)
    ID              shift and go to state 53
    IF              shift and go to state 55
    PRINT           shift and go to state 38
    WHILE           shift and go to state 37
    FUNCTIONID      shift and go to state 59
    DRAWLINE        shift and go to state 52
    DRAWSQUARE      shift and go to state 44
    DRAWTRIANGLE    shift and go to state 36
    DRAWCIRCLE      shift and go to state 41
    DRAWCURVE       shift and go to state 58
    DRAWPOLYGON     shift and go to state 57

    predefined                     shift and go to state 39
    statute                        shift and go to state 56
    blockprima                     shift and go to state 40
    drawsquare                     shift and go to state 60
    read                           shift and go to state 49
    assignment                     shift and go to state 50
    drawcurve                      shift and go to state 51
    drawpolygon                    shift and go to state 48
    drawtriangle                   shift and go to state 35
    write                          shift and go to state 43
    drawline                       shift and go to state 42
    functioncall                   shift and go to state 61
    empty                          shift and go to state 47
    drawcircle                     shift and go to state 45
    condition                      shift and go to state 54
    cycle                          shift and go to state 46

state 27

    (1) program -> PROGRAM ID SEMICOLON programvars programfunction block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON programvars programfunction block .)


state 28

    (25) varsprima -> COMMA ID . varsprima
    (25) varsprima -> . COMMA ID varsprima
    (26) varsprima -> . empty
    (106) empty -> .

    COMMA           shift and go to state 14
    COLON           reduce using rule 106 (empty -> .)

    varsprima                      shift and go to state 62
    empty                          shift and go to state 16

state 29

    (24) vars -> VAR ID varsprima COLON . type SEMICOLON
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE LBRACKET ID RBRACKET
    (33) array -> . INTTYPE LBRACKET NUMBER RBRACKET
    (34) array -> . FLOATTYPE LBRACKET NUMBER RBRACKET
    (35) array -> . FLOATTYPE LBRACKET ID RBRACKET
    (36) array -> . STRING LBRACKET ID RBRACKET
    (37) array -> . STRING LBRACKET NUMBER RBRACKET

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 19
    STRINGTYPE      shift and go to state 18
    BOOLEANTYPE     shift and go to state 22
    STRING          shift and go to state 25

    type                           shift and go to state 63
    array                          shift and go to state 24

state 30

    (34) array -> FLOATTYPE LBRACKET . NUMBER RBRACKET
    (35) array -> FLOATTYPE LBRACKET . ID RBRACKET

    NUMBER          shift and go to state 64
    ID              shift and go to state 65


state 31

    (76) function -> FUNCTION type FUNCTIONID . LPAREN parameter RPAREN block
    (78) function -> FUNCTION type FUNCTIONID . LPAREN RPAREN block

    LPAREN          shift and go to state 66


state 32

    (75) function -> FUNCTION VOID FUNCTIONID . LPAREN parameter RPAREN block
    (77) function -> FUNCTION VOID FUNCTIONID . LPAREN RPAREN block

    LPAREN          shift and go to state 67


state 33

    (32) array -> INTTYPE LBRACKET . ID RBRACKET
    (33) array -> INTTYPE LBRACKET . NUMBER RBRACKET

    ID              shift and go to state 68
    NUMBER          shift and go to state 69


state 34

    (36) array -> STRING LBRACKET . ID RBRACKET
    (37) array -> STRING LBRACKET . NUMBER RBRACKET

    ID              shift and go to state 71
    NUMBER          shift and go to state 70


state 35

    (94) predefined -> drawtriangle .

    ID              reduce using rule 94 (predefined -> drawtriangle .)
    IF              reduce using rule 94 (predefined -> drawtriangle .)
    PRINT           reduce using rule 94 (predefined -> drawtriangle .)
    WHILE           reduce using rule 94 (predefined -> drawtriangle .)
    FUNCTIONID      reduce using rule 94 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 94 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 94 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 94 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 94 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 94 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 94 (predefined -> drawtriangle .)
    RBRACE          reduce using rule 94 (predefined -> drawtriangle .)


state 36

    (100) drawtriangle -> DRAWTRIANGLE . LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 72


state 37

    (85) cycle -> WHILE . LPAREN singularexp2 RPAREN block

    LPAREN          shift and go to state 73


state 38

    (82) write -> PRINT . LPAREN singularexp2 RPAREN SEMICOLON
    (83) write -> PRINT . LPAREN ID RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 39

    (15) statute -> predefined .

    ID              reduce using rule 15 (statute -> predefined .)
    IF              reduce using rule 15 (statute -> predefined .)
    PRINT           reduce using rule 15 (statute -> predefined .)
    WHILE           reduce using rule 15 (statute -> predefined .)
    FUNCTIONID      reduce using rule 15 (statute -> predefined .)
    DRAWLINE        reduce using rule 15 (statute -> predefined .)
    DRAWSQUARE      reduce using rule 15 (statute -> predefined .)
    DRAWTRIANGLE    reduce using rule 15 (statute -> predefined .)
    DRAWCIRCLE      reduce using rule 15 (statute -> predefined .)
    DRAWCURVE       reduce using rule 15 (statute -> predefined .)
    DRAWPOLYGON     reduce using rule 15 (statute -> predefined .)
    RBRACE          reduce using rule 15 (statute -> predefined .)


state 40

    (6) block -> LBRACE blockprima . RBRACE

    RBRACE          shift and go to state 75


state 41

    (101) drawcircle -> DRAWCIRCLE . LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 76


state 42

    (92) predefined -> drawline .

    ID              reduce using rule 92 (predefined -> drawline .)
    IF              reduce using rule 92 (predefined -> drawline .)
    PRINT           reduce using rule 92 (predefined -> drawline .)
    WHILE           reduce using rule 92 (predefined -> drawline .)
    FUNCTIONID      reduce using rule 92 (predefined -> drawline .)
    DRAWLINE        reduce using rule 92 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 92 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 92 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 92 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 92 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 92 (predefined -> drawline .)
    RBRACE          reduce using rule 92 (predefined -> drawline .)


state 43

    (11) statute -> write .

    ID              reduce using rule 11 (statute -> write .)
    IF              reduce using rule 11 (statute -> write .)
    PRINT           reduce using rule 11 (statute -> write .)
    WHILE           reduce using rule 11 (statute -> write .)
    FUNCTIONID      reduce using rule 11 (statute -> write .)
    DRAWLINE        reduce using rule 11 (statute -> write .)
    DRAWSQUARE      reduce using rule 11 (statute -> write .)
    DRAWTRIANGLE    reduce using rule 11 (statute -> write .)
    DRAWCIRCLE      reduce using rule 11 (statute -> write .)
    DRAWCURVE       reduce using rule 11 (statute -> write .)
    DRAWPOLYGON     reduce using rule 11 (statute -> write .)
    RBRACE          reduce using rule 11 (statute -> write .)


state 44

    (99) drawsquare -> DRAWSQUARE . LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 77


state 45

    (95) predefined -> drawcircle .

    ID              reduce using rule 95 (predefined -> drawcircle .)
    IF              reduce using rule 95 (predefined -> drawcircle .)
    PRINT           reduce using rule 95 (predefined -> drawcircle .)
    WHILE           reduce using rule 95 (predefined -> drawcircle .)
    FUNCTIONID      reduce using rule 95 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 95 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 95 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 95 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 95 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 95 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 95 (predefined -> drawcircle .)
    RBRACE          reduce using rule 95 (predefined -> drawcircle .)


state 46

    (13) statute -> cycle .

    ID              reduce using rule 13 (statute -> cycle .)
    IF              reduce using rule 13 (statute -> cycle .)
    PRINT           reduce using rule 13 (statute -> cycle .)
    WHILE           reduce using rule 13 (statute -> cycle .)
    FUNCTIONID      reduce using rule 13 (statute -> cycle .)
    DRAWLINE        reduce using rule 13 (statute -> cycle .)
    DRAWSQUARE      reduce using rule 13 (statute -> cycle .)
    DRAWTRIANGLE    reduce using rule 13 (statute -> cycle .)
    DRAWCIRCLE      reduce using rule 13 (statute -> cycle .)
    DRAWCURVE       reduce using rule 13 (statute -> cycle .)
    DRAWPOLYGON     reduce using rule 13 (statute -> cycle .)
    RBRACE          reduce using rule 13 (statute -> cycle .)


state 47

    (8) blockprima -> empty .

    RBRACE          reduce using rule 8 (blockprima -> empty .)


state 48

    (97) predefined -> drawpolygon .

    ID              reduce using rule 97 (predefined -> drawpolygon .)
    IF              reduce using rule 97 (predefined -> drawpolygon .)
    PRINT           reduce using rule 97 (predefined -> drawpolygon .)
    WHILE           reduce using rule 97 (predefined -> drawpolygon .)
    FUNCTIONID      reduce using rule 97 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 97 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 97 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 97 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 97 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 97 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 97 (predefined -> drawpolygon .)
    RBRACE          reduce using rule 97 (predefined -> drawpolygon .)


state 49

    (12) statute -> read .

    ID              reduce using rule 12 (statute -> read .)
    IF              reduce using rule 12 (statute -> read .)
    PRINT           reduce using rule 12 (statute -> read .)
    WHILE           reduce using rule 12 (statute -> read .)
    FUNCTIONID      reduce using rule 12 (statute -> read .)
    DRAWLINE        reduce using rule 12 (statute -> read .)
    DRAWSQUARE      reduce using rule 12 (statute -> read .)
    DRAWTRIANGLE    reduce using rule 12 (statute -> read .)
    DRAWCIRCLE      reduce using rule 12 (statute -> read .)
    DRAWCURVE       reduce using rule 12 (statute -> read .)
    DRAWPOLYGON     reduce using rule 12 (statute -> read .)
    RBRACE          reduce using rule 12 (statute -> read .)


state 50

    (9) statute -> assignment .

    ID              reduce using rule 9 (statute -> assignment .)
    IF              reduce using rule 9 (statute -> assignment .)
    PRINT           reduce using rule 9 (statute -> assignment .)
    WHILE           reduce using rule 9 (statute -> assignment .)
    FUNCTIONID      reduce using rule 9 (statute -> assignment .)
    DRAWLINE        reduce using rule 9 (statute -> assignment .)
    DRAWSQUARE      reduce using rule 9 (statute -> assignment .)
    DRAWTRIANGLE    reduce using rule 9 (statute -> assignment .)
    DRAWCIRCLE      reduce using rule 9 (statute -> assignment .)
    DRAWCURVE       reduce using rule 9 (statute -> assignment .)
    DRAWPOLYGON     reduce using rule 9 (statute -> assignment .)
    RBRACE          reduce using rule 9 (statute -> assignment .)


state 51

    (96) predefined -> drawcurve .

    ID              reduce using rule 96 (predefined -> drawcurve .)
    IF              reduce using rule 96 (predefined -> drawcurve .)
    PRINT           reduce using rule 96 (predefined -> drawcurve .)
    WHILE           reduce using rule 96 (predefined -> drawcurve .)
    FUNCTIONID      reduce using rule 96 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 96 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 96 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 96 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 96 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 96 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 96 (predefined -> drawcurve .)
    RBRACE          reduce using rule 96 (predefined -> drawcurve .)


state 52

    (98) drawline -> DRAWLINE . LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 78


state 53

    (38) assignment -> ID . ASSIGN singularexp2 SEMICOLON
    (39) assignment -> ID . ASSIGN functioncall
    (84) read -> ID . ASSIGN INPUT SEMICOLON

    ASSIGN          shift and go to state 79


state 54

    (10) statute -> condition .

    ID              reduce using rule 10 (statute -> condition .)
    IF              reduce using rule 10 (statute -> condition .)
    PRINT           reduce using rule 10 (statute -> condition .)
    WHILE           reduce using rule 10 (statute -> condition .)
    FUNCTIONID      reduce using rule 10 (statute -> condition .)
    DRAWLINE        reduce using rule 10 (statute -> condition .)
    DRAWSQUARE      reduce using rule 10 (statute -> condition .)
    DRAWTRIANGLE    reduce using rule 10 (statute -> condition .)
    DRAWCIRCLE      reduce using rule 10 (statute -> condition .)
    DRAWCURVE       reduce using rule 10 (statute -> condition .)
    DRAWPOLYGON     reduce using rule 10 (statute -> condition .)
    RBRACE          reduce using rule 10 (statute -> condition .)


state 55

    (16) condition -> IF . LPAREN singularexp2 RPAREN block
    (17) condition -> IF . LPAREN functioncall RPAREN block
    (18) condition -> IF . LPAREN singularexp2 RPAREN block ELSE block
    (19) condition -> IF . LPAREN functioncall RPAREN block ELSE block
    (20) condition -> IF . LPAREN NOT singularexp2 RPAREN block
    (21) condition -> IF . LPAREN NOT functioncall RPAREN block
    (22) condition -> IF . LPAREN NOT singularexp2 RPAREN block ELSE block
    (23) condition -> IF . LPAREN NOT functioncall RPAREN block ELSE block

    LPAREN          shift and go to state 80


state 56

    (7) blockprima -> statute . blockprima
    (7) blockprima -> . statute blockprima
    (8) blockprima -> . empty
    (9) statute -> . assignment
    (10) statute -> . condition
    (11) statute -> . write
    (12) statute -> . read
    (13) statute -> . cycle
    (14) statute -> . functioncall
    (15) statute -> . predefined
    (106) empty -> .
    (38) assignment -> . ID ASSIGN singularexp2 SEMICOLON
    (39) assignment -> . ID ASSIGN functioncall
    (16) condition -> . IF LPAREN singularexp2 RPAREN block
    (17) condition -> . IF LPAREN functioncall RPAREN block
    (18) condition -> . IF LPAREN singularexp2 RPAREN block ELSE block
    (19) condition -> . IF LPAREN functioncall RPAREN block ELSE block
    (20) condition -> . IF LPAREN NOT singularexp2 RPAREN block
    (21) condition -> . IF LPAREN NOT functioncall RPAREN block
    (22) condition -> . IF LPAREN NOT singularexp2 RPAREN block ELSE block
    (23) condition -> . IF LPAREN NOT functioncall RPAREN block ELSE block
    (82) write -> . PRINT LPAREN singularexp2 RPAREN SEMICOLON
    (83) write -> . PRINT LPAREN ID RPAREN SEMICOLON
    (84) read -> . ID ASSIGN INPUT SEMICOLON
    (85) cycle -> . WHILE LPAREN singularexp2 RPAREN block
    (69) functioncall -> . FUNCTIONID LPAREN RPAREN SEMICOLON
    (70) functioncall -> . FUNCTIONID LPAREN funcparam RPAREN SEMICOLON
    (92) predefined -> . drawline
    (93) predefined -> . drawsquare
    (94) predefined -> . drawtriangle
    (95) predefined -> . drawcircle
    (96) predefined -> . drawcurve
    (97) predefined -> . drawpolygon
    (98) drawline -> . DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (99) drawsquare -> . DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (100) drawtriangle -> . DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (101) drawcircle -> . DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (102) drawcurve -> . DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (103) drawpolygon -> . DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 106 (empty -> .)
    ID              shift and go to state 53
    IF              shift and go to state 55
    PRINT           shift and go to state 38
    WHILE           shift and go to state 37
    FUNCTIONID      shift and go to state 59
    DRAWLINE        shift and go to state 52
    DRAWSQUARE      shift and go to state 44
    DRAWTRIANGLE    shift and go to state 36
    DRAWCIRCLE      shift and go to state 41
    DRAWCURVE       shift and go to state 58
    DRAWPOLYGON     shift and go to state 57

    predefined                     shift and go to state 39
    statute                        shift and go to state 56
    blockprima                     shift and go to state 81
    drawsquare                     shift and go to state 60
    read                           shift and go to state 49
    assignment                     shift and go to state 50
    drawcurve                      shift and go to state 51
    drawpolygon                    shift and go to state 48
    drawtriangle                   shift and go to state 35
    write                          shift and go to state 43
    drawline                       shift and go to state 42
    functioncall                   shift and go to state 61
    empty                          shift and go to state 47
    drawcircle                     shift and go to state 45
    condition                      shift and go to state 54
    cycle                          shift and go to state 46

state 57

    (103) drawpolygon -> DRAWPOLYGON . LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 82


state 58

    (102) drawcurve -> DRAWCURVE . LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 83


state 59

    (69) functioncall -> FUNCTIONID . LPAREN RPAREN SEMICOLON
    (70) functioncall -> FUNCTIONID . LPAREN funcparam RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 60

    (93) predefined -> drawsquare .

    ID              reduce using rule 93 (predefined -> drawsquare .)
    IF              reduce using rule 93 (predefined -> drawsquare .)
    PRINT           reduce using rule 93 (predefined -> drawsquare .)
    WHILE           reduce using rule 93 (predefined -> drawsquare .)
    FUNCTIONID      reduce using rule 93 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 93 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 93 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 93 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 93 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 93 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 93 (predefined -> drawsquare .)
    RBRACE          reduce using rule 93 (predefined -> drawsquare .)


state 61

    (14) statute -> functioncall .

    ID              reduce using rule 14 (statute -> functioncall .)
    IF              reduce using rule 14 (statute -> functioncall .)
    PRINT           reduce using rule 14 (statute -> functioncall .)
    WHILE           reduce using rule 14 (statute -> functioncall .)
    FUNCTIONID      reduce using rule 14 (statute -> functioncall .)
    DRAWLINE        reduce using rule 14 (statute -> functioncall .)
    DRAWSQUARE      reduce using rule 14 (statute -> functioncall .)
    DRAWTRIANGLE    reduce using rule 14 (statute -> functioncall .)
    DRAWCIRCLE      reduce using rule 14 (statute -> functioncall .)
    DRAWCURVE       reduce using rule 14 (statute -> functioncall .)
    DRAWPOLYGON     reduce using rule 14 (statute -> functioncall .)
    RBRACE          reduce using rule 14 (statute -> functioncall .)


state 62

    (25) varsprima -> COMMA ID varsprima .

    COLON           reduce using rule 25 (varsprima -> COMMA ID varsprima .)


state 63

    (24) vars -> VAR ID varsprima COLON type . SEMICOLON

    SEMICOLON       shift and go to state 85


state 64

    (34) array -> FLOATTYPE LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 86


state 65

    (35) array -> FLOATTYPE LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 87


state 66

    (76) function -> FUNCTION type FUNCTIONID LPAREN . parameter RPAREN block
    (78) function -> FUNCTION type FUNCTIONID LPAREN . RPAREN block
    (79) parameter -> . type ID parameterprima
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE LBRACKET ID RBRACKET
    (33) array -> . INTTYPE LBRACKET NUMBER RBRACKET
    (34) array -> . FLOATTYPE LBRACKET NUMBER RBRACKET
    (35) array -> . FLOATTYPE LBRACKET ID RBRACKET
    (36) array -> . STRING LBRACKET ID RBRACKET
    (37) array -> . STRING LBRACKET NUMBER RBRACKET

    RPAREN          shift and go to state 88
    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 19
    STRINGTYPE      shift and go to state 18
    BOOLEANTYPE     shift and go to state 22
    STRING          shift and go to state 25

    parameter                      shift and go to state 90
    array                          shift and go to state 24
    type                           shift and go to state 89

state 67

    (75) function -> FUNCTION VOID FUNCTIONID LPAREN . parameter RPAREN block
    (77) function -> FUNCTION VOID FUNCTIONID LPAREN . RPAREN block
    (79) parameter -> . type ID parameterprima
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE LBRACKET ID RBRACKET
    (33) array -> . INTTYPE LBRACKET NUMBER RBRACKET
    (34) array -> . FLOATTYPE LBRACKET NUMBER RBRACKET
    (35) array -> . FLOATTYPE LBRACKET ID RBRACKET
    (36) array -> . STRING LBRACKET ID RBRACKET
    (37) array -> . STRING LBRACKET NUMBER RBRACKET

    RPAREN          shift and go to state 91
    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 19
    STRINGTYPE      shift and go to state 18
    BOOLEANTYPE     shift and go to state 22
    STRING          shift and go to state 25

    type                           shift and go to state 89
    array                          shift and go to state 24
    parameter                      shift and go to state 92

state 68

    (32) array -> INTTYPE LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 93


state 69

    (33) array -> INTTYPE LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 94


state 70

    (37) array -> STRING LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 95


state 71

    (36) array -> STRING LBRACKET ID . RBRACKET

    RBRACKET        shift and go to state 96


state 72

    (100) drawtriangle -> DRAWTRIANGLE LPAREN . idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 97
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 73

    (85) cycle -> WHILE LPAREN . singularexp2 RPAREN block
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 117
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 74

    (82) write -> PRINT LPAREN . singularexp2 RPAREN SEMICOLON
    (83) write -> PRINT LPAREN . ID RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    ID              shift and go to state 119
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 118
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 75

    (6) block -> LBRACE blockprima RBRACE .

    ID              reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    IF              reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    PRINT           reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    WHILE           reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    FUNCTIONID      reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWLINE        reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWSQUARE      reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWTRIANGLE    reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWCIRCLE      reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWCURVE       reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWPOLYGON     reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    RBRACE          reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    $end            reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    ELSE            reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    FUNCTION        reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    LBRACE          reduce using rule 6 (block -> LBRACE blockprima RBRACE .)


state 76

    (101) drawcircle -> DRAWCIRCLE LPAREN . idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 120
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 77

    (99) drawsquare -> DRAWSQUARE LPAREN . idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 121
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 78

    (98) drawline -> DRAWLINE LPAREN . idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 122
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 79

    (38) assignment -> ID ASSIGN . singularexp2 SEMICOLON
    (39) assignment -> ID ASSIGN . functioncall
    (84) read -> ID ASSIGN . INPUT SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (69) functioncall -> . FUNCTIONID LPAREN RPAREN SEMICOLON
    (70) functioncall -> . FUNCTIONID LPAREN funcparam RPAREN SEMICOLON
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    INPUT           shift and go to state 124
    NOT             shift and go to state 114
    FUNCTIONID      shift and go to state 59
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 123
    functioncall                   shift and go to state 125
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    bool                           shift and go to state 103
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 80

    (16) condition -> IF LPAREN . singularexp2 RPAREN block
    (17) condition -> IF LPAREN . functioncall RPAREN block
    (18) condition -> IF LPAREN . singularexp2 RPAREN block ELSE block
    (19) condition -> IF LPAREN . functioncall RPAREN block ELSE block
    (20) condition -> IF LPAREN . NOT singularexp2 RPAREN block
    (21) condition -> IF LPAREN . NOT functioncall RPAREN block
    (22) condition -> IF LPAREN . NOT singularexp2 RPAREN block ELSE block
    (23) condition -> IF LPAREN . NOT functioncall RPAREN block ELSE block
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (69) functioncall -> . FUNCTIONID LPAREN RPAREN SEMICOLON
    (70) functioncall -> . FUNCTIONID LPAREN funcparam RPAREN SEMICOLON
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    NOT             shift and go to state 128
    FUNCTIONID      shift and go to state 59
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 126
    functioncall                   shift and go to state 127
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    bool                           shift and go to state 103
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 81

    (7) blockprima -> statute blockprima .

    RBRACE          reduce using rule 7 (blockprima -> statute blockprima .)


state 82

    (103) drawpolygon -> DRAWPOLYGON LPAREN . idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 129
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 83

    (102) drawcurve -> DRAWCURVE LPAREN . idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 130
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 84

    (69) functioncall -> FUNCTIONID LPAREN . RPAREN SEMICOLON
    (70) functioncall -> FUNCTIONID LPAREN . funcparam RPAREN SEMICOLON
    (71) funcparam -> . singularexp2 funcparamprima
    (72) funcparam -> . ID funcparamprima
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    RPAREN          shift and go to state 132
    ID              shift and go to state 134
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    funcparam                      shift and go to state 133
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 131
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    bool                           shift and go to state 103
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 85

    (24) vars -> VAR ID varsprima COLON type SEMICOLON .

    FUNCTION        reduce using rule 24 (vars -> VAR ID varsprima COLON type SEMICOLON .)
    LBRACE          reduce using rule 24 (vars -> VAR ID varsprima COLON type SEMICOLON .)


state 86

    (34) array -> FLOATTYPE LBRACKET NUMBER RBRACKET .

    SEMICOLON       reduce using rule 34 (array -> FLOATTYPE LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 34 (array -> FLOATTYPE LBRACKET NUMBER RBRACKET .)
    FUNCTIONID      reduce using rule 34 (array -> FLOATTYPE LBRACKET NUMBER RBRACKET .)


state 87

    (35) array -> FLOATTYPE LBRACKET ID RBRACKET .

    SEMICOLON       reduce using rule 35 (array -> FLOATTYPE LBRACKET ID RBRACKET .)
    ID              reduce using rule 35 (array -> FLOATTYPE LBRACKET ID RBRACKET .)
    FUNCTIONID      reduce using rule 35 (array -> FLOATTYPE LBRACKET ID RBRACKET .)


state 88

    (78) function -> FUNCTION type FUNCTIONID LPAREN RPAREN . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 135

state 89

    (79) parameter -> type . ID parameterprima

    ID              shift and go to state 136


state 90

    (76) function -> FUNCTION type FUNCTIONID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 137


state 91

    (77) function -> FUNCTION VOID FUNCTIONID LPAREN RPAREN . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 138

state 92

    (75) function -> FUNCTION VOID FUNCTIONID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 139


state 93

    (32) array -> INTTYPE LBRACKET ID RBRACKET .

    SEMICOLON       reduce using rule 32 (array -> INTTYPE LBRACKET ID RBRACKET .)
    ID              reduce using rule 32 (array -> INTTYPE LBRACKET ID RBRACKET .)
    FUNCTIONID      reduce using rule 32 (array -> INTTYPE LBRACKET ID RBRACKET .)


state 94

    (33) array -> INTTYPE LBRACKET NUMBER RBRACKET .

    SEMICOLON       reduce using rule 33 (array -> INTTYPE LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 33 (array -> INTTYPE LBRACKET NUMBER RBRACKET .)
    FUNCTIONID      reduce using rule 33 (array -> INTTYPE LBRACKET NUMBER RBRACKET .)


state 95

    (37) array -> STRING LBRACKET NUMBER RBRACKET .

    SEMICOLON       reduce using rule 37 (array -> STRING LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 37 (array -> STRING LBRACKET NUMBER RBRACKET .)
    FUNCTIONID      reduce using rule 37 (array -> STRING LBRACKET NUMBER RBRACKET .)


state 96

    (36) array -> STRING LBRACKET ID RBRACKET .

    SEMICOLON       reduce using rule 36 (array -> STRING LBRACKET ID RBRACKET .)
    ID              reduce using rule 36 (array -> STRING LBRACKET ID RBRACKET .)
    FUNCTIONID      reduce using rule 36 (array -> STRING LBRACKET ID RBRACKET .)


state 97

    (100) drawtriangle -> DRAWTRIANGLE LPAREN idssexp . COMMA idssexp COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 140


state 98

    (105) idssexp -> singularexp2 .

    COMMA           reduce using rule 105 (idssexp -> singularexp2 .)


state 99

    (40) singularexp2 -> singularexp .
    (42) singularexp -> singularexp . AND expression
    (43) singularexp -> singularexp . OR expression

    COMMA           reduce using rule 40 (singularexp2 -> singularexp .)
    RPAREN          reduce using rule 40 (singularexp2 -> singularexp .)
    SEMICOLON       reduce using rule 40 (singularexp2 -> singularexp .)
    AND             shift and go to state 141
    OR              shift and go to state 142


state 100

    (67) bool -> TRUE .

    TIMES           reduce using rule 67 (bool -> TRUE .)
    DEVIDE          reduce using rule 67 (bool -> TRUE .)
    PLUS            reduce using rule 67 (bool -> TRUE .)
    MINUS           reduce using rule 67 (bool -> TRUE .)
    LESSER          reduce using rule 67 (bool -> TRUE .)
    GREATER         reduce using rule 67 (bool -> TRUE .)
    EQUAL           reduce using rule 67 (bool -> TRUE .)
    NOTEQUAL        reduce using rule 67 (bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 67 (bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 67 (bool -> TRUE .)
    AND             reduce using rule 67 (bool -> TRUE .)
    OR              reduce using rule 67 (bool -> TRUE .)
    COMMA           reduce using rule 67 (bool -> TRUE .)
    RPAREN          reduce using rule 67 (bool -> TRUE .)
    SEMICOLON       reduce using rule 67 (bool -> TRUE .)


state 101

    (60) factor -> MINUS . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    bool                           shift and go to state 103
    varcte                         shift and go to state 143

state 102

    (61) factor -> varcte .

    TIMES           reduce using rule 61 (factor -> varcte .)
    DEVIDE          reduce using rule 61 (factor -> varcte .)
    PLUS            reduce using rule 61 (factor -> varcte .)
    MINUS           reduce using rule 61 (factor -> varcte .)
    LESSER          reduce using rule 61 (factor -> varcte .)
    GREATER         reduce using rule 61 (factor -> varcte .)
    EQUAL           reduce using rule 61 (factor -> varcte .)
    NOTEQUAL        reduce using rule 61 (factor -> varcte .)
    LESSEROREQUAL   reduce using rule 61 (factor -> varcte .)
    GREATEROREQUAL  reduce using rule 61 (factor -> varcte .)
    AND             reduce using rule 61 (factor -> varcte .)
    OR              reduce using rule 61 (factor -> varcte .)
    RPAREN          reduce using rule 61 (factor -> varcte .)
    COMMA           reduce using rule 61 (factor -> varcte .)
    SEMICOLON       reduce using rule 61 (factor -> varcte .)


state 103

    (66) varcte -> bool .

    TIMES           reduce using rule 66 (varcte -> bool .)
    DEVIDE          reduce using rule 66 (varcte -> bool .)
    PLUS            reduce using rule 66 (varcte -> bool .)
    MINUS           reduce using rule 66 (varcte -> bool .)
    LESSER          reduce using rule 66 (varcte -> bool .)
    GREATER         reduce using rule 66 (varcte -> bool .)
    EQUAL           reduce using rule 66 (varcte -> bool .)
    NOTEQUAL        reduce using rule 66 (varcte -> bool .)
    LESSEROREQUAL   reduce using rule 66 (varcte -> bool .)
    GREATEROREQUAL  reduce using rule 66 (varcte -> bool .)
    AND             reduce using rule 66 (varcte -> bool .)
    OR              reduce using rule 66 (varcte -> bool .)
    COMMA           reduce using rule 66 (varcte -> bool .)
    RPAREN          reduce using rule 66 (varcte -> bool .)
    SEMICOLON       reduce using rule 66 (varcte -> bool .)


state 104

    (57) term -> factor .

    TIMES           reduce using rule 57 (term -> factor .)
    DEVIDE          reduce using rule 57 (term -> factor .)
    PLUS            reduce using rule 57 (term -> factor .)
    MINUS           reduce using rule 57 (term -> factor .)
    LESSER          reduce using rule 57 (term -> factor .)
    GREATER         reduce using rule 57 (term -> factor .)
    EQUAL           reduce using rule 57 (term -> factor .)
    NOTEQUAL        reduce using rule 57 (term -> factor .)
    LESSEROREQUAL   reduce using rule 57 (term -> factor .)
    GREATEROREQUAL  reduce using rule 57 (term -> factor .)
    AND             reduce using rule 57 (term -> factor .)
    OR              reduce using rule 57 (term -> factor .)
    COMMA           reduce using rule 57 (term -> factor .)
    RPAREN          reduce using rule 57 (term -> factor .)
    SEMICOLON       reduce using rule 57 (term -> factor .)


state 105

    (59) factor -> PLUS . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    bool                           shift and go to state 103
    varcte                         shift and go to state 144

state 106

    (64) varcte -> STRING .

    TIMES           reduce using rule 64 (varcte -> STRING .)
    DEVIDE          reduce using rule 64 (varcte -> STRING .)
    PLUS            reduce using rule 64 (varcte -> STRING .)
    MINUS           reduce using rule 64 (varcte -> STRING .)
    LESSER          reduce using rule 64 (varcte -> STRING .)
    GREATER         reduce using rule 64 (varcte -> STRING .)
    EQUAL           reduce using rule 64 (varcte -> STRING .)
    NOTEQUAL        reduce using rule 64 (varcte -> STRING .)
    LESSEROREQUAL   reduce using rule 64 (varcte -> STRING .)
    GREATEROREQUAL  reduce using rule 64 (varcte -> STRING .)
    AND             reduce using rule 64 (varcte -> STRING .)
    OR              reduce using rule 64 (varcte -> STRING .)
    COMMA           reduce using rule 64 (varcte -> STRING .)
    RPAREN          reduce using rule 64 (varcte -> STRING .)
    SEMICOLON       reduce using rule 64 (varcte -> STRING .)


state 107

    (58) factor -> LPAREN . singularexp2 RPAREN
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 145
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 108

    (65) varcte -> ID .

    TIMES           reduce using rule 65 (varcte -> ID .)
    DEVIDE          reduce using rule 65 (varcte -> ID .)
    PLUS            reduce using rule 65 (varcte -> ID .)
    MINUS           reduce using rule 65 (varcte -> ID .)
    LESSER          reduce using rule 65 (varcte -> ID .)
    GREATER         reduce using rule 65 (varcte -> ID .)
    EQUAL           reduce using rule 65 (varcte -> ID .)
    NOTEQUAL        reduce using rule 65 (varcte -> ID .)
    LESSEROREQUAL   reduce using rule 65 (varcte -> ID .)
    GREATEROREQUAL  reduce using rule 65 (varcte -> ID .)
    AND             reduce using rule 65 (varcte -> ID .)
    OR              reduce using rule 65 (varcte -> ID .)
    COMMA           reduce using rule 65 (varcte -> ID .)
    RPAREN          reduce using rule 65 (varcte -> ID .)
    SEMICOLON       reduce using rule 65 (varcte -> ID .)


state 109

    (54) exp -> term .
    (55) term -> term . TIMES factor
    (56) term -> term . DEVIDE factor

    PLUS            reduce using rule 54 (exp -> term .)
    MINUS           reduce using rule 54 (exp -> term .)
    LESSER          reduce using rule 54 (exp -> term .)
    GREATER         reduce using rule 54 (exp -> term .)
    EQUAL           reduce using rule 54 (exp -> term .)
    NOTEQUAL        reduce using rule 54 (exp -> term .)
    LESSEROREQUAL   reduce using rule 54 (exp -> term .)
    GREATEROREQUAL  reduce using rule 54 (exp -> term .)
    AND             reduce using rule 54 (exp -> term .)
    OR              reduce using rule 54 (exp -> term .)
    COMMA           reduce using rule 54 (exp -> term .)
    RPAREN          reduce using rule 54 (exp -> term .)
    SEMICOLON       reduce using rule 54 (exp -> term .)
    TIMES           shift and go to state 147
    DEVIDE          shift and go to state 146


state 110

    (68) bool -> FALSE .

    TIMES           reduce using rule 68 (bool -> FALSE .)
    DEVIDE          reduce using rule 68 (bool -> FALSE .)
    PLUS            reduce using rule 68 (bool -> FALSE .)
    MINUS           reduce using rule 68 (bool -> FALSE .)
    LESSER          reduce using rule 68 (bool -> FALSE .)
    GREATER         reduce using rule 68 (bool -> FALSE .)
    EQUAL           reduce using rule 68 (bool -> FALSE .)
    NOTEQUAL        reduce using rule 68 (bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 68 (bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 68 (bool -> FALSE .)
    AND             reduce using rule 68 (bool -> FALSE .)
    OR              reduce using rule 68 (bool -> FALSE .)
    COMMA           reduce using rule 68 (bool -> FALSE .)
    RPAREN          reduce using rule 68 (bool -> FALSE .)
    SEMICOLON       reduce using rule 68 (bool -> FALSE .)


state 111

    (62) varcte -> INT .

    TIMES           reduce using rule 62 (varcte -> INT .)
    DEVIDE          reduce using rule 62 (varcte -> INT .)
    PLUS            reduce using rule 62 (varcte -> INT .)
    MINUS           reduce using rule 62 (varcte -> INT .)
    LESSER          reduce using rule 62 (varcte -> INT .)
    GREATER         reduce using rule 62 (varcte -> INT .)
    EQUAL           reduce using rule 62 (varcte -> INT .)
    NOTEQUAL        reduce using rule 62 (varcte -> INT .)
    LESSEROREQUAL   reduce using rule 62 (varcte -> INT .)
    GREATEROREQUAL  reduce using rule 62 (varcte -> INT .)
    AND             reduce using rule 62 (varcte -> INT .)
    OR              reduce using rule 62 (varcte -> INT .)
    COMMA           reduce using rule 62 (varcte -> INT .)
    RPAREN          reduce using rule 62 (varcte -> INT .)
    SEMICOLON       reduce using rule 62 (varcte -> INT .)


state 112

    (63) varcte -> FLOAT .

    TIMES           reduce using rule 63 (varcte -> FLOAT .)
    DEVIDE          reduce using rule 63 (varcte -> FLOAT .)
    PLUS            reduce using rule 63 (varcte -> FLOAT .)
    MINUS           reduce using rule 63 (varcte -> FLOAT .)
    LESSER          reduce using rule 63 (varcte -> FLOAT .)
    GREATER         reduce using rule 63 (varcte -> FLOAT .)
    EQUAL           reduce using rule 63 (varcte -> FLOAT .)
    NOTEQUAL        reduce using rule 63 (varcte -> FLOAT .)
    LESSEROREQUAL   reduce using rule 63 (varcte -> FLOAT .)
    GREATEROREQUAL  reduce using rule 63 (varcte -> FLOAT .)
    AND             reduce using rule 63 (varcte -> FLOAT .)
    OR              reduce using rule 63 (varcte -> FLOAT .)
    COMMA           reduce using rule 63 (varcte -> FLOAT .)
    RPAREN          reduce using rule 63 (varcte -> FLOAT .)
    SEMICOLON       reduce using rule 63 (varcte -> FLOAT .)


state 113

    (51) expression -> exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 51 (expression -> exp .)
    GREATER         reduce using rule 51 (expression -> exp .)
    EQUAL           reduce using rule 51 (expression -> exp .)
    NOTEQUAL        reduce using rule 51 (expression -> exp .)
    LESSEROREQUAL   reduce using rule 51 (expression -> exp .)
    GREATEROREQUAL  reduce using rule 51 (expression -> exp .)
    AND             reduce using rule 51 (expression -> exp .)
    OR              reduce using rule 51 (expression -> exp .)
    COMMA           reduce using rule 51 (expression -> exp .)
    SEMICOLON       reduce using rule 51 (expression -> exp .)
    RPAREN          reduce using rule 51 (expression -> exp .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149


state 114

    (41) singularexp2 -> NOT . singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 150
    expression                     shift and go to state 116

state 115

    (104) idssexp -> PARAMID .

    COMMA           reduce using rule 104 (idssexp -> PARAMID .)


state 116

    (44) singularexp -> expression .
    (45) expression -> expression . LESSER exp
    (46) expression -> expression . GREATER exp
    (47) expression -> expression . EQUAL exp
    (48) expression -> expression . NOTEQUAL exp
    (49) expression -> expression . LESSEROREQUAL exp
    (50) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 44 (singularexp -> expression .)
    OR              reduce using rule 44 (singularexp -> expression .)
    COMMA           reduce using rule 44 (singularexp -> expression .)
    RPAREN          reduce using rule 44 (singularexp -> expression .)
    SEMICOLON       reduce using rule 44 (singularexp -> expression .)
    LESSER          shift and go to state 155
    GREATER         shift and go to state 152
    EQUAL           shift and go to state 154
    NOTEQUAL        shift and go to state 151
    LESSEROREQUAL   shift and go to state 153
    GREATEROREQUAL  shift and go to state 156


state 117

    (85) cycle -> WHILE LPAREN singularexp2 . RPAREN block

    RPAREN          shift and go to state 157


state 118

    (82) write -> PRINT LPAREN singularexp2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 158


state 119

    (83) write -> PRINT LPAREN ID . RPAREN SEMICOLON
    (65) varcte -> ID .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 159
    TIMES           reduce using rule 65 (varcte -> ID .)
    DEVIDE          reduce using rule 65 (varcte -> ID .)
    PLUS            reduce using rule 65 (varcte -> ID .)
    MINUS           reduce using rule 65 (varcte -> ID .)
    LESSER          reduce using rule 65 (varcte -> ID .)
    GREATER         reduce using rule 65 (varcte -> ID .)
    EQUAL           reduce using rule 65 (varcte -> ID .)
    NOTEQUAL        reduce using rule 65 (varcte -> ID .)
    LESSEROREQUAL   reduce using rule 65 (varcte -> ID .)
    GREATEROREQUAL  reduce using rule 65 (varcte -> ID .)
    AND             reduce using rule 65 (varcte -> ID .)
    OR              reduce using rule 65 (varcte -> ID .)

  ! RPAREN          [ reduce using rule 65 (varcte -> ID .) ]


state 120

    (101) drawcircle -> DRAWCIRCLE LPAREN idssexp . COMMA idssexp COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 160


state 121

    (99) drawsquare -> DRAWSQUARE LPAREN idssexp . COMMA idssexp COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 161


state 122

    (98) drawline -> DRAWLINE LPAREN idssexp . COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 162


state 123

    (38) assignment -> ID ASSIGN singularexp2 . SEMICOLON

    SEMICOLON       shift and go to state 163


state 124

    (84) read -> ID ASSIGN INPUT . SEMICOLON

    SEMICOLON       shift and go to state 164


state 125

    (39) assignment -> ID ASSIGN functioncall .

    ID              reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    IF              reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    PRINT           reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    WHILE           reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    FUNCTIONID      reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    DRAWLINE        reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    DRAWSQUARE      reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    DRAWTRIANGLE    reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    DRAWCIRCLE      reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    DRAWCURVE       reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    DRAWPOLYGON     reduce using rule 39 (assignment -> ID ASSIGN functioncall .)
    RBRACE          reduce using rule 39 (assignment -> ID ASSIGN functioncall .)


state 126

    (16) condition -> IF LPAREN singularexp2 . RPAREN block
    (18) condition -> IF LPAREN singularexp2 . RPAREN block ELSE block

    RPAREN          shift and go to state 165


state 127

    (17) condition -> IF LPAREN functioncall . RPAREN block
    (19) condition -> IF LPAREN functioncall . RPAREN block ELSE block

    RPAREN          shift and go to state 166


state 128

    (20) condition -> IF LPAREN NOT . singularexp2 RPAREN block
    (21) condition -> IF LPAREN NOT . functioncall RPAREN block
    (22) condition -> IF LPAREN NOT . singularexp2 RPAREN block ELSE block
    (23) condition -> IF LPAREN NOT . functioncall RPAREN block ELSE block
    (41) singularexp2 -> NOT . singularexp
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (69) functioncall -> . FUNCTIONID LPAREN RPAREN SEMICOLON
    (70) functioncall -> . FUNCTIONID LPAREN funcparam RPAREN SEMICOLON
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    NOT             shift and go to state 114
    FUNCTIONID      shift and go to state 59
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 167
    functioncall                   shift and go to state 169
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    bool                           shift and go to state 103
    singularexp                    shift and go to state 168
    expression                     shift and go to state 116

state 129

    (103) drawpolygon -> DRAWPOLYGON LPAREN idssexp . COMMA idssexp COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 170


state 130

    (102) drawcurve -> DRAWCURVE LPAREN idssexp . COMMA idssexp COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 171


state 131

    (71) funcparam -> singularexp2 . funcparamprima
    (73) funcparamprima -> . COMMA funcparam
    (74) funcparamprima -> . empty
    (106) empty -> .

    COMMA           shift and go to state 172
    RPAREN          reduce using rule 106 (empty -> .)

    funcparamprima                 shift and go to state 173
    empty                          shift and go to state 174

state 132

    (69) functioncall -> FUNCTIONID LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 175


state 133

    (70) functioncall -> FUNCTIONID LPAREN funcparam . RPAREN SEMICOLON

    RPAREN          shift and go to state 176


state 134

    (72) funcparam -> ID . funcparamprima
    (65) varcte -> ID .
    (73) funcparamprima -> . COMMA funcparam
    (74) funcparamprima -> . empty
    (106) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 65 (varcte -> ID .)
    TIMES           reduce using rule 65 (varcte -> ID .)
    DEVIDE          reduce using rule 65 (varcte -> ID .)
    PLUS            reduce using rule 65 (varcte -> ID .)
    MINUS           reduce using rule 65 (varcte -> ID .)
    LESSER          reduce using rule 65 (varcte -> ID .)
    GREATER         reduce using rule 65 (varcte -> ID .)
    EQUAL           reduce using rule 65 (varcte -> ID .)
    NOTEQUAL        reduce using rule 65 (varcte -> ID .)
    LESSEROREQUAL   reduce using rule 65 (varcte -> ID .)
    GREATEROREQUAL  reduce using rule 65 (varcte -> ID .)
    AND             reduce using rule 65 (varcte -> ID .)
    OR              reduce using rule 65 (varcte -> ID .)
    RPAREN          reduce using rule 65 (varcte -> ID .)
    COMMA           shift and go to state 172

  ! COMMA           [ reduce using rule 65 (varcte -> ID .) ]
  ! RPAREN          [ reduce using rule 106 (empty -> .) ]

    funcparamprima                 shift and go to state 177
    empty                          shift and go to state 174

state 135

    (78) function -> FUNCTION type FUNCTIONID LPAREN RPAREN block .

    FUNCTION        reduce using rule 78 (function -> FUNCTION type FUNCTIONID LPAREN RPAREN block .)
    LBRACE          reduce using rule 78 (function -> FUNCTION type FUNCTIONID LPAREN RPAREN block .)


state 136

    (79) parameter -> type ID . parameterprima
    (80) parameterprima -> . COMMA type ID parameterprima
    (81) parameterprima -> . empty
    (106) empty -> .

    COMMA           shift and go to state 179
    RPAREN          reduce using rule 106 (empty -> .)

    parameterprima                 shift and go to state 178
    empty                          shift and go to state 180

state 137

    (76) function -> FUNCTION type FUNCTIONID LPAREN parameter RPAREN . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 181

state 138

    (77) function -> FUNCTION VOID FUNCTIONID LPAREN RPAREN block .

    FUNCTION        reduce using rule 77 (function -> FUNCTION VOID FUNCTIONID LPAREN RPAREN block .)
    LBRACE          reduce using rule 77 (function -> FUNCTION VOID FUNCTIONID LPAREN RPAREN block .)


state 139

    (75) function -> FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 182

state 140

    (100) drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA . idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 183
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 141

    (42) singularexp -> singularexp AND . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    expression                     shift and go to state 184

state 142

    (43) singularexp -> singularexp OR . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    expression                     shift and go to state 185

state 143

    (60) factor -> MINUS varcte .

    TIMES           reduce using rule 60 (factor -> MINUS varcte .)
    DEVIDE          reduce using rule 60 (factor -> MINUS varcte .)
    PLUS            reduce using rule 60 (factor -> MINUS varcte .)
    MINUS           reduce using rule 60 (factor -> MINUS varcte .)
    LESSER          reduce using rule 60 (factor -> MINUS varcte .)
    GREATER         reduce using rule 60 (factor -> MINUS varcte .)
    EQUAL           reduce using rule 60 (factor -> MINUS varcte .)
    NOTEQUAL        reduce using rule 60 (factor -> MINUS varcte .)
    LESSEROREQUAL   reduce using rule 60 (factor -> MINUS varcte .)
    GREATEROREQUAL  reduce using rule 60 (factor -> MINUS varcte .)
    AND             reduce using rule 60 (factor -> MINUS varcte .)
    OR              reduce using rule 60 (factor -> MINUS varcte .)
    RPAREN          reduce using rule 60 (factor -> MINUS varcte .)
    COMMA           reduce using rule 60 (factor -> MINUS varcte .)
    SEMICOLON       reduce using rule 60 (factor -> MINUS varcte .)


state 144

    (59) factor -> PLUS varcte .

    TIMES           reduce using rule 59 (factor -> PLUS varcte .)
    DEVIDE          reduce using rule 59 (factor -> PLUS varcte .)
    PLUS            reduce using rule 59 (factor -> PLUS varcte .)
    MINUS           reduce using rule 59 (factor -> PLUS varcte .)
    LESSER          reduce using rule 59 (factor -> PLUS varcte .)
    GREATER         reduce using rule 59 (factor -> PLUS varcte .)
    EQUAL           reduce using rule 59 (factor -> PLUS varcte .)
    NOTEQUAL        reduce using rule 59 (factor -> PLUS varcte .)
    LESSEROREQUAL   reduce using rule 59 (factor -> PLUS varcte .)
    GREATEROREQUAL  reduce using rule 59 (factor -> PLUS varcte .)
    AND             reduce using rule 59 (factor -> PLUS varcte .)
    OR              reduce using rule 59 (factor -> PLUS varcte .)
    RPAREN          reduce using rule 59 (factor -> PLUS varcte .)
    COMMA           reduce using rule 59 (factor -> PLUS varcte .)
    SEMICOLON       reduce using rule 59 (factor -> PLUS varcte .)


state 145

    (58) factor -> LPAREN singularexp2 . RPAREN

    RPAREN          shift and go to state 186


state 146

    (56) term -> term DEVIDE . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    bool                           shift and go to state 103
    varcte                         shift and go to state 102
    factor                         shift and go to state 187

state 147

    (55) term -> term TIMES . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    bool                           shift and go to state 103
    varcte                         shift and go to state 102
    factor                         shift and go to state 188

state 148

    (52) exp -> exp PLUS . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 189
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    factor                         shift and go to state 104

state 149

    (53) exp -> exp MINUS . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 190
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    factor                         shift and go to state 104

state 150

    (41) singularexp2 -> NOT singularexp .
    (42) singularexp -> singularexp . AND expression
    (43) singularexp -> singularexp . OR expression

    COMMA           reduce using rule 41 (singularexp2 -> NOT singularexp .)
    RPAREN          reduce using rule 41 (singularexp2 -> NOT singularexp .)
    SEMICOLON       reduce using rule 41 (singularexp2 -> NOT singularexp .)
    AND             shift and go to state 141
    OR              shift and go to state 142


state 151

    (48) expression -> expression NOTEQUAL . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 191
    factor                         shift and go to state 104

state 152

    (46) expression -> expression GREATER . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 192
    factor                         shift and go to state 104

state 153

    (49) expression -> expression LESSEROREQUAL . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 193
    factor                         shift and go to state 104

state 154

    (47) expression -> expression EQUAL . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 194
    factor                         shift and go to state 104

state 155

    (45) expression -> expression LESSER . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 195
    factor                         shift and go to state 104

state 156

    (50) expression -> expression GREATEROREQUAL . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    varcte                         shift and go to state 102
    bool                           shift and go to state 103
    exp                            shift and go to state 196
    factor                         shift and go to state 104

state 157

    (85) cycle -> WHILE LPAREN singularexp2 RPAREN . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 197

state 158

    (82) write -> PRINT LPAREN singularexp2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 198


state 159

    (83) write -> PRINT LPAREN ID RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 199


state 160

    (101) drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA . idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 200
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 161

    (99) drawsquare -> DRAWSQUARE LPAREN idssexp COMMA . idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 201
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 162

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA . idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 202
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 163

    (38) assignment -> ID ASSIGN singularexp2 SEMICOLON .

    ID              reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    IF              reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    PRINT           reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    WHILE           reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    FUNCTIONID      reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    DRAWLINE        reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    DRAWSQUARE      reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    DRAWCIRCLE      reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    DRAWCURVE       reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    DRAWPOLYGON     reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)
    RBRACE          reduce using rule 38 (assignment -> ID ASSIGN singularexp2 SEMICOLON .)


state 164

    (84) read -> ID ASSIGN INPUT SEMICOLON .

    ID              reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    IF              reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    PRINT           reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    WHILE           reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    FUNCTIONID      reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)
    RBRACE          reduce using rule 84 (read -> ID ASSIGN INPUT SEMICOLON .)


state 165

    (16) condition -> IF LPAREN singularexp2 RPAREN . block
    (18) condition -> IF LPAREN singularexp2 RPAREN . block ELSE block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 203

state 166

    (17) condition -> IF LPAREN functioncall RPAREN . block
    (19) condition -> IF LPAREN functioncall RPAREN . block ELSE block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 204

state 167

    (20) condition -> IF LPAREN NOT singularexp2 . RPAREN block
    (22) condition -> IF LPAREN NOT singularexp2 . RPAREN block ELSE block

    RPAREN          shift and go to state 205


state 168

    (41) singularexp2 -> NOT singularexp .
    (40) singularexp2 -> singularexp .
    (42) singularexp -> singularexp . AND expression
    (43) singularexp -> singularexp . OR expression

  ! reduce/reduce conflict for RPAREN resolved using rule 40 (singularexp2 -> singularexp .)
    RPAREN          reduce using rule 40 (singularexp2 -> singularexp .)
    AND             shift and go to state 141
    OR              shift and go to state 142

  ! RPAREN          [ reduce using rule 41 (singularexp2 -> NOT singularexp .) ]


state 169

    (21) condition -> IF LPAREN NOT functioncall . RPAREN block
    (23) condition -> IF LPAREN NOT functioncall . RPAREN block ELSE block

    RPAREN          shift and go to state 206


state 170

    (103) drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA . idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 207
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 171

    (102) drawcurve -> DRAWCURVE LPAREN idssexp COMMA . idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 208
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 172

    (73) funcparamprima -> COMMA . funcparam
    (71) funcparam -> . singularexp2 funcparamprima
    (72) funcparam -> . ID funcparamprima
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    ID              shift and go to state 134
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    term                           shift and go to state 109
    funcparam                      shift and go to state 209
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 131
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    bool                           shift and go to state 103
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 173

    (71) funcparam -> singularexp2 funcparamprima .

    RPAREN          reduce using rule 71 (funcparam -> singularexp2 funcparamprima .)


state 174

    (74) funcparamprima -> empty .

    RPAREN          reduce using rule 74 (funcparamprima -> empty .)


state 175

    (69) functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)
    RPAREN          reduce using rule 69 (functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON .)


state 176

    (70) functioncall -> FUNCTIONID LPAREN funcparam RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 210


state 177

    (72) funcparam -> ID funcparamprima .

    RPAREN          reduce using rule 72 (funcparam -> ID funcparamprima .)


state 178

    (79) parameter -> type ID parameterprima .

    RPAREN          reduce using rule 79 (parameter -> type ID parameterprima .)


state 179

    (80) parameterprima -> COMMA . type ID parameterprima
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE LBRACKET ID RBRACKET
    (33) array -> . INTTYPE LBRACKET NUMBER RBRACKET
    (34) array -> . FLOATTYPE LBRACKET NUMBER RBRACKET
    (35) array -> . FLOATTYPE LBRACKET ID RBRACKET
    (36) array -> . STRING LBRACKET ID RBRACKET
    (37) array -> . STRING LBRACKET NUMBER RBRACKET

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 19
    STRINGTYPE      shift and go to state 18
    BOOLEANTYPE     shift and go to state 22
    STRING          shift and go to state 25

    array                          shift and go to state 24
    type                           shift and go to state 211

state 180

    (81) parameterprima -> empty .

    RPAREN          reduce using rule 81 (parameterprima -> empty .)


state 181

    (76) function -> FUNCTION type FUNCTIONID LPAREN parameter RPAREN block .

    FUNCTION        reduce using rule 76 (function -> FUNCTION type FUNCTIONID LPAREN parameter RPAREN block .)
    LBRACE          reduce using rule 76 (function -> FUNCTION type FUNCTIONID LPAREN parameter RPAREN block .)


state 182

    (75) function -> FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN block .

    FUNCTION        reduce using rule 75 (function -> FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN block .)
    LBRACE          reduce using rule 75 (function -> FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN block .)


state 183

    (100) drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 212


state 184

    (42) singularexp -> singularexp AND expression .
    (45) expression -> expression . LESSER exp
    (46) expression -> expression . GREATER exp
    (47) expression -> expression . EQUAL exp
    (48) expression -> expression . NOTEQUAL exp
    (49) expression -> expression . LESSEROREQUAL exp
    (50) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 42 (singularexp -> singularexp AND expression .)
    OR              reduce using rule 42 (singularexp -> singularexp AND expression .)
    COMMA           reduce using rule 42 (singularexp -> singularexp AND expression .)
    RPAREN          reduce using rule 42 (singularexp -> singularexp AND expression .)
    SEMICOLON       reduce using rule 42 (singularexp -> singularexp AND expression .)
    LESSER          shift and go to state 155
    GREATER         shift and go to state 152
    EQUAL           shift and go to state 154
    NOTEQUAL        shift and go to state 151
    LESSEROREQUAL   shift and go to state 153
    GREATEROREQUAL  shift and go to state 156


state 185

    (43) singularexp -> singularexp OR expression .
    (45) expression -> expression . LESSER exp
    (46) expression -> expression . GREATER exp
    (47) expression -> expression . EQUAL exp
    (48) expression -> expression . NOTEQUAL exp
    (49) expression -> expression . LESSEROREQUAL exp
    (50) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 43 (singularexp -> singularexp OR expression .)
    OR              reduce using rule 43 (singularexp -> singularexp OR expression .)
    COMMA           reduce using rule 43 (singularexp -> singularexp OR expression .)
    RPAREN          reduce using rule 43 (singularexp -> singularexp OR expression .)
    SEMICOLON       reduce using rule 43 (singularexp -> singularexp OR expression .)
    LESSER          shift and go to state 155
    GREATER         shift and go to state 152
    EQUAL           shift and go to state 154
    NOTEQUAL        shift and go to state 151
    LESSEROREQUAL   shift and go to state 153
    GREATEROREQUAL  shift and go to state 156


state 186

    (58) factor -> LPAREN singularexp2 RPAREN .

    TIMES           reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    DEVIDE          reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    PLUS            reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    MINUS           reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    LESSER          reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    GREATER         reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    EQUAL           reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    NOTEQUAL        reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    LESSEROREQUAL   reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    GREATEROREQUAL  reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    AND             reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    OR              reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    RPAREN          reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    COMMA           reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    SEMICOLON       reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)


state 187

    (56) term -> term DEVIDE factor .

    TIMES           reduce using rule 56 (term -> term DEVIDE factor .)
    DEVIDE          reduce using rule 56 (term -> term DEVIDE factor .)
    PLUS            reduce using rule 56 (term -> term DEVIDE factor .)
    MINUS           reduce using rule 56 (term -> term DEVIDE factor .)
    LESSER          reduce using rule 56 (term -> term DEVIDE factor .)
    GREATER         reduce using rule 56 (term -> term DEVIDE factor .)
    EQUAL           reduce using rule 56 (term -> term DEVIDE factor .)
    NOTEQUAL        reduce using rule 56 (term -> term DEVIDE factor .)
    LESSEROREQUAL   reduce using rule 56 (term -> term DEVIDE factor .)
    GREATEROREQUAL  reduce using rule 56 (term -> term DEVIDE factor .)
    AND             reduce using rule 56 (term -> term DEVIDE factor .)
    OR              reduce using rule 56 (term -> term DEVIDE factor .)
    COMMA           reduce using rule 56 (term -> term DEVIDE factor .)
    RPAREN          reduce using rule 56 (term -> term DEVIDE factor .)
    SEMICOLON       reduce using rule 56 (term -> term DEVIDE factor .)


state 188

    (55) term -> term TIMES factor .

    TIMES           reduce using rule 55 (term -> term TIMES factor .)
    DEVIDE          reduce using rule 55 (term -> term TIMES factor .)
    PLUS            reduce using rule 55 (term -> term TIMES factor .)
    MINUS           reduce using rule 55 (term -> term TIMES factor .)
    LESSER          reduce using rule 55 (term -> term TIMES factor .)
    GREATER         reduce using rule 55 (term -> term TIMES factor .)
    EQUAL           reduce using rule 55 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 55 (term -> term TIMES factor .)
    LESSEROREQUAL   reduce using rule 55 (term -> term TIMES factor .)
    GREATEROREQUAL  reduce using rule 55 (term -> term TIMES factor .)
    AND             reduce using rule 55 (term -> term TIMES factor .)
    OR              reduce using rule 55 (term -> term TIMES factor .)
    COMMA           reduce using rule 55 (term -> term TIMES factor .)
    RPAREN          reduce using rule 55 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 55 (term -> term TIMES factor .)


state 189

    (52) exp -> exp PLUS term .
    (55) term -> term . TIMES factor
    (56) term -> term . DEVIDE factor

    PLUS            reduce using rule 52 (exp -> exp PLUS term .)
    MINUS           reduce using rule 52 (exp -> exp PLUS term .)
    LESSER          reduce using rule 52 (exp -> exp PLUS term .)
    GREATER         reduce using rule 52 (exp -> exp PLUS term .)
    EQUAL           reduce using rule 52 (exp -> exp PLUS term .)
    NOTEQUAL        reduce using rule 52 (exp -> exp PLUS term .)
    LESSEROREQUAL   reduce using rule 52 (exp -> exp PLUS term .)
    GREATEROREQUAL  reduce using rule 52 (exp -> exp PLUS term .)
    AND             reduce using rule 52 (exp -> exp PLUS term .)
    OR              reduce using rule 52 (exp -> exp PLUS term .)
    COMMA           reduce using rule 52 (exp -> exp PLUS term .)
    RPAREN          reduce using rule 52 (exp -> exp PLUS term .)
    SEMICOLON       reduce using rule 52 (exp -> exp PLUS term .)
    TIMES           shift and go to state 147
    DEVIDE          shift and go to state 146


state 190

    (53) exp -> exp MINUS term .
    (55) term -> term . TIMES factor
    (56) term -> term . DEVIDE factor

    PLUS            reduce using rule 53 (exp -> exp MINUS term .)
    MINUS           reduce using rule 53 (exp -> exp MINUS term .)
    LESSER          reduce using rule 53 (exp -> exp MINUS term .)
    GREATER         reduce using rule 53 (exp -> exp MINUS term .)
    EQUAL           reduce using rule 53 (exp -> exp MINUS term .)
    NOTEQUAL        reduce using rule 53 (exp -> exp MINUS term .)
    LESSEROREQUAL   reduce using rule 53 (exp -> exp MINUS term .)
    GREATEROREQUAL  reduce using rule 53 (exp -> exp MINUS term .)
    AND             reduce using rule 53 (exp -> exp MINUS term .)
    OR              reduce using rule 53 (exp -> exp MINUS term .)
    COMMA           reduce using rule 53 (exp -> exp MINUS term .)
    RPAREN          reduce using rule 53 (exp -> exp MINUS term .)
    SEMICOLON       reduce using rule 53 (exp -> exp MINUS term .)
    TIMES           shift and go to state 147
    DEVIDE          shift and go to state 146


state 191

    (48) expression -> expression NOTEQUAL exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    GREATER         reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    EQUAL           reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    NOTEQUAL        reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    LESSEROREQUAL   reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    GREATEROREQUAL  reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    AND             reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    OR              reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    COMMA           reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    SEMICOLON       reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    RPAREN          reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149


state 192

    (46) expression -> expression GREATER exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 46 (expression -> expression GREATER exp .)
    GREATER         reduce using rule 46 (expression -> expression GREATER exp .)
    EQUAL           reduce using rule 46 (expression -> expression GREATER exp .)
    NOTEQUAL        reduce using rule 46 (expression -> expression GREATER exp .)
    LESSEROREQUAL   reduce using rule 46 (expression -> expression GREATER exp .)
    GREATEROREQUAL  reduce using rule 46 (expression -> expression GREATER exp .)
    AND             reduce using rule 46 (expression -> expression GREATER exp .)
    OR              reduce using rule 46 (expression -> expression GREATER exp .)
    COMMA           reduce using rule 46 (expression -> expression GREATER exp .)
    SEMICOLON       reduce using rule 46 (expression -> expression GREATER exp .)
    RPAREN          reduce using rule 46 (expression -> expression GREATER exp .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149


state 193

    (49) expression -> expression LESSEROREQUAL exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    GREATER         reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    EQUAL           reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    NOTEQUAL        reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    LESSEROREQUAL   reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    GREATEROREQUAL  reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    AND             reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    OR              reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    COMMA           reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    SEMICOLON       reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    RPAREN          reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149


state 194

    (47) expression -> expression EQUAL exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 47 (expression -> expression EQUAL exp .)
    GREATER         reduce using rule 47 (expression -> expression EQUAL exp .)
    EQUAL           reduce using rule 47 (expression -> expression EQUAL exp .)
    NOTEQUAL        reduce using rule 47 (expression -> expression EQUAL exp .)
    LESSEROREQUAL   reduce using rule 47 (expression -> expression EQUAL exp .)
    GREATEROREQUAL  reduce using rule 47 (expression -> expression EQUAL exp .)
    AND             reduce using rule 47 (expression -> expression EQUAL exp .)
    OR              reduce using rule 47 (expression -> expression EQUAL exp .)
    COMMA           reduce using rule 47 (expression -> expression EQUAL exp .)
    SEMICOLON       reduce using rule 47 (expression -> expression EQUAL exp .)
    RPAREN          reduce using rule 47 (expression -> expression EQUAL exp .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149


state 195

    (45) expression -> expression LESSER exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 45 (expression -> expression LESSER exp .)
    GREATER         reduce using rule 45 (expression -> expression LESSER exp .)
    EQUAL           reduce using rule 45 (expression -> expression LESSER exp .)
    NOTEQUAL        reduce using rule 45 (expression -> expression LESSER exp .)
    LESSEROREQUAL   reduce using rule 45 (expression -> expression LESSER exp .)
    GREATEROREQUAL  reduce using rule 45 (expression -> expression LESSER exp .)
    AND             reduce using rule 45 (expression -> expression LESSER exp .)
    OR              reduce using rule 45 (expression -> expression LESSER exp .)
    COMMA           reduce using rule 45 (expression -> expression LESSER exp .)
    SEMICOLON       reduce using rule 45 (expression -> expression LESSER exp .)
    RPAREN          reduce using rule 45 (expression -> expression LESSER exp .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149


state 196

    (50) expression -> expression GREATEROREQUAL exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    GREATER         reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    EQUAL           reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    NOTEQUAL        reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    LESSEROREQUAL   reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    GREATEROREQUAL  reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    AND             reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    OR              reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    COMMA           reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    SEMICOLON       reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    RPAREN          reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    PLUS            shift and go to state 148
    MINUS           shift and go to state 149


state 197

    (85) cycle -> WHILE LPAREN singularexp2 RPAREN block .

    ID              reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    IF              reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    PRINT           reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    WHILE           reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    FUNCTIONID      reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWLINE        reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWSQUARE      reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWTRIANGLE    reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWCIRCLE      reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWCURVE       reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWPOLYGON     reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    RBRACE          reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)


state 198

    (82) write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .

    ID              reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    IF              reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    PRINT           reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 82 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)


state 199

    (83) write -> PRINT LPAREN ID RPAREN SEMICOLON .

    ID              reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    IF              reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    PRINT           reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)
    RBRACE          reduce using rule 83 (write -> PRINT LPAREN ID RPAREN SEMICOLON .)


state 200

    (101) drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 213


state 201

    (99) drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 214


state 202

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp . COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 215


state 203

    (16) condition -> IF LPAREN singularexp2 RPAREN block .
    (18) condition -> IF LPAREN singularexp2 RPAREN block . ELSE block

    ID              reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    IF              reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    PRINT           reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    WHILE           reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    FUNCTIONID      reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    DRAWLINE        reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    DRAWSQUARE      reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    DRAWTRIANGLE    reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    DRAWCIRCLE      reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    DRAWCURVE       reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    DRAWPOLYGON     reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    RBRACE          reduce using rule 16 (condition -> IF LPAREN singularexp2 RPAREN block .)
    ELSE            shift and go to state 216


state 204

    (17) condition -> IF LPAREN functioncall RPAREN block .
    (19) condition -> IF LPAREN functioncall RPAREN block . ELSE block

    ID              reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    IF              reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    PRINT           reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    WHILE           reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    FUNCTIONID      reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    DRAWLINE        reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    DRAWSQUARE      reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    DRAWTRIANGLE    reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    DRAWCIRCLE      reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    DRAWCURVE       reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    DRAWPOLYGON     reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    RBRACE          reduce using rule 17 (condition -> IF LPAREN functioncall RPAREN block .)
    ELSE            shift and go to state 217


state 205

    (20) condition -> IF LPAREN NOT singularexp2 RPAREN . block
    (22) condition -> IF LPAREN NOT singularexp2 RPAREN . block ELSE block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 218

state 206

    (21) condition -> IF LPAREN NOT functioncall RPAREN . block
    (23) condition -> IF LPAREN NOT functioncall RPAREN . block ELSE block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 219

state 207

    (103) drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 220


state 208

    (102) drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 221


state 209

    (73) funcparamprima -> COMMA funcparam .

    RPAREN          reduce using rule 73 (funcparamprima -> COMMA funcparam .)


state 210

    (70) functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .

    ID              reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    IF              reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    PRINT           reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)
    RPAREN          reduce using rule 70 (functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON .)


state 211

    (80) parameterprima -> COMMA type . ID parameterprima

    ID              shift and go to state 222


state 212

    (100) drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 223
    GREEN           shift and go to state 227
    RED             shift and go to state 229
    YELLOW          shift and go to state 226
    BROWN           shift and go to state 224
    BLACK           shift and go to state 228

    color                          shift and go to state 225

state 213

    (101) drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 223
    GREEN           shift and go to state 227
    RED             shift and go to state 229
    YELLOW          shift and go to state 226
    BROWN           shift and go to state 224
    BLACK           shift and go to state 228

    color                          shift and go to state 230

state 214

    (99) drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 223
    GREEN           shift and go to state 227
    RED             shift and go to state 229
    YELLOW          shift and go to state 226
    BROWN           shift and go to state 224
    BLACK           shift and go to state 228

    color                          shift and go to state 231

state 215

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA . idssexp COMMA idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 232
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 216

    (18) condition -> IF LPAREN singularexp2 RPAREN block ELSE . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 233

state 217

    (19) condition -> IF LPAREN functioncall RPAREN block ELSE . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 234

state 218

    (20) condition -> IF LPAREN NOT singularexp2 RPAREN block .
    (22) condition -> IF LPAREN NOT singularexp2 RPAREN block . ELSE block

    ID              reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    IF              reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    PRINT           reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    WHILE           reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    FUNCTIONID      reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    DRAWLINE        reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    DRAWSQUARE      reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    DRAWTRIANGLE    reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    DRAWCIRCLE      reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    DRAWCURVE       reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    DRAWPOLYGON     reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    RBRACE          reduce using rule 20 (condition -> IF LPAREN NOT singularexp2 RPAREN block .)
    ELSE            shift and go to state 235


state 219

    (21) condition -> IF LPAREN NOT functioncall RPAREN block .
    (23) condition -> IF LPAREN NOT functioncall RPAREN block . ELSE block

    ID              reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    IF              reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    PRINT           reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    WHILE           reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    FUNCTIONID      reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    DRAWLINE        reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    DRAWSQUARE      reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    DRAWTRIANGLE    reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    DRAWCIRCLE      reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    DRAWCURVE       reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    DRAWPOLYGON     reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    RBRACE          reduce using rule 21 (condition -> IF LPAREN NOT functioncall RPAREN block .)
    ELSE            shift and go to state 236


state 220

    (103) drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 223
    GREEN           shift and go to state 227
    RED             shift and go to state 229
    YELLOW          shift and go to state 226
    BROWN           shift and go to state 224
    BLACK           shift and go to state 228

    color                          shift and go to state 237

state 221

    (102) drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 223
    GREEN           shift and go to state 227
    RED             shift and go to state 229
    YELLOW          shift and go to state 226
    BROWN           shift and go to state 224
    BLACK           shift and go to state 228

    color                          shift and go to state 238

state 222

    (80) parameterprima -> COMMA type ID . parameterprima
    (80) parameterprima -> . COMMA type ID parameterprima
    (81) parameterprima -> . empty
    (106) empty -> .

    COMMA           shift and go to state 179
    RPAREN          reduce using rule 106 (empty -> .)

    parameterprima                 shift and go to state 239
    empty                          shift and go to state 180

state 223

    (86) color -> BLUE .

    RPAREN          reduce using rule 86 (color -> BLUE .)


state 224

    (90) color -> BROWN .

    RPAREN          reduce using rule 90 (color -> BROWN .)


state 225

    (100) drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 240


state 226

    (89) color -> YELLOW .

    RPAREN          reduce using rule 89 (color -> YELLOW .)


state 227

    (87) color -> GREEN .

    RPAREN          reduce using rule 87 (color -> GREEN .)


state 228

    (91) color -> BLACK .

    RPAREN          reduce using rule 91 (color -> BLACK .)


state 229

    (88) color -> RED .

    RPAREN          reduce using rule 88 (color -> RED .)


state 230

    (101) drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 241


state 231

    (99) drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 242


state 232

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp . COMMA idssexp COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 243


state 233

    (18) condition -> IF LPAREN singularexp2 RPAREN block ELSE block .

    ID              reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    IF              reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    PRINT           reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    WHILE           reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    FUNCTIONID      reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    DRAWLINE        reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    DRAWSQUARE      reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    DRAWTRIANGLE    reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    DRAWCIRCLE      reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    DRAWCURVE       reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    DRAWPOLYGON     reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)
    RBRACE          reduce using rule 18 (condition -> IF LPAREN singularexp2 RPAREN block ELSE block .)


state 234

    (19) condition -> IF LPAREN functioncall RPAREN block ELSE block .

    ID              reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    IF              reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    PRINT           reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    WHILE           reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    FUNCTIONID      reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    DRAWLINE        reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    DRAWSQUARE      reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    DRAWTRIANGLE    reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    DRAWCIRCLE      reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    DRAWCURVE       reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    DRAWPOLYGON     reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)
    RBRACE          reduce using rule 19 (condition -> IF LPAREN functioncall RPAREN block ELSE block .)


state 235

    (22) condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 244

state 236

    (23) condition -> IF LPAREN NOT functioncall RPAREN block ELSE . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 245

state 237

    (103) drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 246


state 238

    (102) drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 247


state 239

    (80) parameterprima -> COMMA type ID parameterprima .

    RPAREN          reduce using rule 80 (parameterprima -> COMMA type ID parameterprima .)


state 240

    (100) drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 248


state 241

    (101) drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 249


state 242

    (99) drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 250


state 243

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA . idssexp COMMA color RPAREN SEMICOLON
    (104) idssexp -> . PARAMID
    (105) idssexp -> . singularexp2
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS varcte
    (60) factor -> . MINUS varcte
    (61) factor -> . varcte
    (62) varcte -> . INT
    (63) varcte -> . FLOAT
    (64) varcte -> . STRING
    (65) varcte -> . ID
    (66) varcte -> . bool
    (67) bool -> . TRUE
    (68) bool -> . FALSE

    PARAMID         shift and go to state 115
    NOT             shift and go to state 114
    LPAREN          shift and go to state 107
    PLUS            shift and go to state 105
    MINUS           shift and go to state 101
    INT             shift and go to state 111
    FLOAT           shift and go to state 112
    STRING          shift and go to state 106
    ID              shift and go to state 108
    TRUE            shift and go to state 100
    FALSE           shift and go to state 110

    idssexp                        shift and go to state 251
    term                           shift and go to state 109
    varcte                         shift and go to state 102
    singularexp2                   shift and go to state 98
    bool                           shift and go to state 103
    exp                            shift and go to state 113
    factor                         shift and go to state 104
    singularexp                    shift and go to state 99
    expression                     shift and go to state 116

state 244

    (22) condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .

    ID              reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    IF              reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    PRINT           reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    WHILE           reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    FUNCTIONID      reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    DRAWLINE        reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    DRAWSQUARE      reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    DRAWTRIANGLE    reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    DRAWCIRCLE      reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    DRAWCURVE       reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    DRAWPOLYGON     reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)
    RBRACE          reduce using rule 22 (condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block .)


state 245

    (23) condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .

    ID              reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    IF              reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    PRINT           reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    WHILE           reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    FUNCTIONID      reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    DRAWLINE        reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    DRAWSQUARE      reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    DRAWTRIANGLE    reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    DRAWCIRCLE      reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    DRAWCURVE       reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    DRAWPOLYGON     reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)
    RBRACE          reduce using rule 23 (condition -> IF LPAREN NOT functioncall RPAREN block ELSE block .)


state 246

    (103) drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 252


state 247

    (102) drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 253


state 248

    (100) drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)


state 249

    (101) drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)


state 250

    (99) drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)


state 251

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 254


state 252

    (103) drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)


state 253

    (102) drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)


state 254

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 223
    GREEN           shift and go to state 227
    RED             shift and go to state 229
    YELLOW          shift and go to state 226
    BROWN           shift and go to state 224
    BLACK           shift and go to state 228

    color                          shift and go to state 255

state 255

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 256


state 256

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 257


state 257

    (98) drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    FUNCTIONID      reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 98 (drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RPAREN in state 119 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 134 resolved as shift
WARNING: reduce/reduce conflict in state 134 resolved using rule (varcte -> ID)
WARNING: rejected rule (empty -> <empty>) in state 134
WARNING: reduce/reduce conflict in state 168 resolved using rule (singularexp2 -> singularexp)
WARNING: rejected rule (singularexp2 -> NOT singularexp) in state 168
