Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    BREAK

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram
Rule 2     endProgram -> <empty>
Rule 3     add_global_function -> <empty>
Rule 4     main -> INTTYPE MAIN change_to_global LPAREN RPAREN add_jump_to_main block
Rule 5     change_to_global -> <empty>
Rule 6     goto_main -> <empty>
Rule 7     add_jump_to_main -> <empty>
Rule 8     block -> LBRACE blockprima RBRACE
Rule 9     blockprima -> statute blockprima
Rule 10    blockprima -> empty
Rule 11    statute -> assignment
Rule 12    statute -> condition
Rule 13    statute -> write
Rule 14    statute -> read
Rule 15    statute -> cycle
Rule 16    statute -> functioncall SEMICOLON
Rule 17    statute -> predefined
Rule 18    statute -> return
Rule 19    condition -> IF LPAREN sexpression RPAREN do_condition_operation block else
Rule 20    do_condition_operation -> <empty>
Rule 21    else -> ELSE do_else_operation block
Rule 22    else -> empty
Rule 23    do_else_operation -> <empty>
Rule 24    vars -> VAR type ID array_declaration store_variable SEMICOLON vars
Rule 25    vars -> empty
Rule 26    store_variable -> <empty>
Rule 27    array_declaration -> LBRACKET dimen_variable sexpression calculate_dimen RBRACKET
Rule 28    array_declaration -> empty
Rule 29    dimen_variable -> <empty>
Rule 30    calculate_dimen -> <empty>
Rule 31    type -> INTTYPE
Rule 32    type -> FLOATTYPE
Rule 33    type -> STRINGTYPE
Rule 34    type -> BOOLTYPE
Rule 35    assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON
Rule 36    push_id_operand -> <empty>
Rule 37    push_operator -> <empty>
Rule 38    array_structure -> LBRACKET sexpression RBRACKET
Rule 39    array_structure -> empty
Rule 40    sexpression -> negation expression do_not_operation
Rule 41    negation -> NOT push_operator
Rule 42    negation -> empty
Rule 43    do_not_operation -> <empty>
Rule 44    expression -> expression relationaloperators push_operator exp do_relational_operation
Rule 45    expression -> exp
Rule 46    relationaloperators -> LESSER
Rule 47    relationaloperators -> GREATER
Rule 48    relationaloperators -> EQUAL
Rule 49    relationaloperators -> NOTEQUAL
Rule 50    relationaloperators -> LESSEROREQUAL
Rule 51    relationaloperators -> GREATEROREQUAL
Rule 52    relationaloperators -> AND
Rule 53    relationaloperators -> OR
Rule 54    do_relational_operation -> <empty>
Rule 55    exp -> exp mathoperators1 push_operator term do_math_operation1
Rule 56    exp -> term
Rule 57    mathoperators1 -> PLUS
Rule 58    mathoperators1 -> MINUS
Rule 59    do_math_operation1 -> <empty>
Rule 60    term -> term mathoperators2 push_operator factor do_math_operation2
Rule 61    term -> factor
Rule 62    mathoperators2 -> TIMES
Rule 63    mathoperators2 -> DEVIDE
Rule 64    do_math_operation2 -> <empty>
Rule 65    factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
Rule 66    factor -> varConst
Rule 67    push_false_bottom -> <empty>
Rule 68    pop_false_bottom -> <empty>
Rule 69    varConst -> ID push_id_operand array
Rule 70    varConst -> FLOAT push_float_operand
Rule 71    varConst -> INT push_int_operand
Rule 72    varConst -> bool push_bool_operand
Rule 73    varConst -> STRING push_string_operand
Rule 74    varConst -> predefined
Rule 75    varConst -> functioncall
Rule 76    array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET
Rule 77    array -> empty
Rule 78    validate_index -> <empty>
Rule 79    access_dimen_var -> <empty>
Rule 80    bool -> TRUE
Rule 81    bool -> FALSE
Rule 82    push_float_operand -> <empty>
Rule 83    push_int_operand -> <empty>
Rule 84    push_bool_operand -> <empty>
Rule 85    push_string_operand -> <empty>
Rule 86    functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
Rule 87    check_function_existance -> <empty>
Rule 88    generate_era -> <empty>
Rule 89    validate_arguments -> <empty>
Rule 90    funcargum -> sexpression store_argument funcargumprima
Rule 91    funcargum -> empty
Rule 92    funcargumprima -> COMMA sexpression store_argument funcargumprima
Rule 93    funcargumprima -> empty
Rule 94    store_argument -> <empty>
Rule 95    function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process function
Rule 96    function -> empty
Rule 97    functiontype -> VOID
Rule 98    functiontype -> type
Rule 99    add_func_quad_start -> <empty>
Rule 100   store_function -> <empty>
Rule 101   end_process -> <empty>
Rule 102   return -> RETURN sexpression SEMICOLON
Rule 103   parameter -> type ID store_parameter array parameterprima
Rule 104   parameter -> empty
Rule 105   parameterprima -> COMMA type ID store_parameter parameterprima
Rule 106   parameterprima -> empty
Rule 107   store_parameter -> <empty>
Rule 108   write -> PRINT LPAREN sexpression RPAREN SEMICOLON
Rule 109   read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON
Rule 110   cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
Rule 111   push_cycle_jump -> <empty>
Rule 112   do_while_operation -> <empty>
Rule 113   color -> BLUE
Rule 114   color -> GREEN
Rule 115   color -> RED
Rule 116   color -> YELLOW
Rule 117   color -> BROWN
Rule 118   color -> BLACK
Rule 119   predefined -> drawline
Rule 120   predefined -> drawsquare
Rule 121   predefined -> drawtriangle
Rule 122   predefined -> drawcircle
Rule 123   predefined -> drawcurve
Rule 124   predefined -> drawpolygon
Rule 125   drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
Rule 126   drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
Rule 127   drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
Rule 128   drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
Rule 129   drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
Rule 130   drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
Rule 131   store_predefined_argument -> <empty>
Rule 132   store_color -> <empty>
Rule 133   empty -> <empty>

Terminals, with rules where they appear

AND                  : 52
ASSIGN               : 35 109
BLACK                : 118
BLUE                 : 113
BOOLTYPE             : 34
BREAK                : 
BROWN                : 117
COLON                : 
COMMA                : 92 105 125 125 125 125 126 126 127 127 128 128 129 129 130 130
DEVIDE               : 63
DRAWCIRCLE           : 128
DRAWCURVE            : 129
DRAWLINE             : 125
DRAWPOLYGON          : 130
DRAWSQUARE           : 126
DRAWTRIANGLE         : 127
ELSE                 : 21
EQUAL                : 48
FALSE                : 81
FLOAT                : 70
FLOATTYPE            : 32
FUNCTION             : 95
GREATER              : 47
GREATEROREQUAL       : 51
GREEN                : 114
ID                   : 1 24 35 69 86 95 103 105 109
IF                   : 19
INPUT                : 109
INT                  : 71
INTTYPE              : 4 31
LBRACE               : 8
LBRACKET             : 27 38 76
LESSER               : 46
LESSEROREQUAL        : 50
LPAREN               : 4 19 65 86 95 108 110 125 126 127 128 129 130
MAIN                 : 4
MINUS                : 58
NOT                  : 41
NOTEQUAL             : 49
OR                   : 53
PLUS                 : 57
PRINT                : 108
PROGRAM              : 1
RBRACE               : 8
RBRACKET             : 27 38 76
RED                  : 115
RETURN               : 102
RPAREN               : 4 19 65 86 95 108 110 125 126 127 128 129 130
SEMICOLON            : 1 16 24 35 102 108 109 125 126 127 128 129 130
STRING               : 73
STRINGTYPE           : 33
TIMES                : 62
TRUE                 : 80
VAR                  : 24
VOID                 : 97
WHILE                : 110
YELLOW               : 116
error                : 

Nonterminals, with rules where they appear

access_dimen_var     : 76
add_func_quad_start  : 95
add_global_function  : 1
add_jump_to_main     : 4
array                : 35 69 103 109
array_declaration    : 24
array_structure      : 
assignment           : 11
block                : 4 19 21 95 110
blockprima           : 8 9
bool                 : 72
calculate_dimen      : 27
change_to_global     : 4
check_function_existance : 86
color                : 125 126 127 128 129 130
condition            : 12
cycle                : 15
dimen_variable       : 27
do_condition_operation : 19
do_else_operation    : 21
do_math_operation1   : 55
do_math_operation2   : 60
do_not_operation     : 40
do_relational_operation : 44
do_while_operation   : 110
drawcircle           : 122
drawcurve            : 123
drawline             : 119
drawpolygon          : 124
drawsquare           : 120
drawtriangle         : 121
else                 : 19
empty                : 10 22 25 28 39 42 77 91 93 96 104 106
endProgram           : 1
end_process          : 95
exp                  : 44 45 55
expression           : 40 44
factor               : 60 61
funcargum            : 86
funcargumprima       : 90 92
function             : 1 95
functioncall         : 16 75
functiontype         : 95
generate_era         : 86
goto_main            : 1
main                 : 1
mathoperators1       : 55
mathoperators2       : 60
negation             : 40
parameter            : 95
parameterprima       : 103 105
pop_false_bottom     : 65
predefined           : 17 74
program              : 0
push_bool_operand    : 72
push_cycle_jump      : 110
push_false_bottom    : 65
push_float_operand   : 70
push_id_operand      : 35 69 109
push_int_operand     : 71
push_operator        : 35 41 44 55 60 109
push_string_operand  : 73
read                 : 14
relationaloperators  : 44
return               : 18
sexpression          : 19 27 35 38 65 76 90 92 102 108 110 125 125 125 125 126 126 127 127 128 128 129 129 130 130
statute              : 9
store_argument       : 90 92
store_color          : 125 126 127 128 129 130
store_function       : 95
store_parameter      : 103 105
store_predefined_argument : 125 125 125 125 126 126 127 127 128 128 129 129 130 130
store_variable       : 24
term                 : 55 56 60
type                 : 24 98 103 105
validate_arguments   : 86
validate_index       : 76
varConst             : 66
vars                 : 1 24 95
write                : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID add_global_function SEMICOLON goto_main vars function main endProgram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . add_global_function SEMICOLON goto_main vars function main endProgram
    (3) add_global_function -> .

    SEMICOLON       reduce using rule 3 (add_global_function -> .)

    add_global_function            shift and go to state 4

state 4

    (1) program -> PROGRAM ID add_global_function . SEMICOLON goto_main vars function main endProgram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID add_global_function SEMICOLON . goto_main vars function main endProgram
    (6) goto_main -> .

    VAR             reduce using rule 6 (goto_main -> .)
    FUNCTION        reduce using rule 6 (goto_main -> .)
    INTTYPE         reduce using rule 6 (goto_main -> .)

    goto_main                      shift and go to state 6

state 6

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main . vars function main endProgram
    (24) vars -> . VAR type ID array_declaration store_variable SEMICOLON vars
    (25) vars -> . empty
    (133) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 133 (empty -> .)
    INTTYPE         reduce using rule 133 (empty -> .)

    vars                           shift and go to state 7
    empty                          shift and go to state 9

state 7

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars . function main endProgram
    (95) function -> . FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process function
    (96) function -> . empty
    (133) empty -> .

    FUNCTION        shift and go to state 11
    INTTYPE         reduce using rule 133 (empty -> .)

    function                       shift and go to state 10
    empty                          shift and go to state 12

state 8

    (24) vars -> VAR . type ID array_declaration store_variable SEMICOLON vars
    (31) type -> . INTTYPE
    (32) type -> . FLOATTYPE
    (33) type -> . STRINGTYPE
    (34) type -> . BOOLTYPE

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    type                           shift and go to state 17

state 9

    (25) vars -> empty .

    LBRACE          reduce using rule 25 (vars -> empty .)
    FUNCTION        reduce using rule 25 (vars -> empty .)
    INTTYPE         reduce using rule 25 (vars -> empty .)


state 10

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function . main endProgram
    (4) main -> . INTTYPE MAIN change_to_global LPAREN RPAREN add_jump_to_main block

    INTTYPE         shift and go to state 18

    main                           shift and go to state 19

state 11

    (95) function -> FUNCTION . functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process function
    (97) functiontype -> . VOID
    (98) functiontype -> . type
    (31) type -> . INTTYPE
    (32) type -> . FLOATTYPE
    (33) type -> . STRINGTYPE
    (34) type -> . BOOLTYPE

    VOID            shift and go to state 21
    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    functiontype                   shift and go to state 20
    type                           shift and go to state 22

state 12

    (96) function -> empty .

    INTTYPE         reduce using rule 96 (function -> empty .)


state 13

    (34) type -> BOOLTYPE .

    ID              reduce using rule 34 (type -> BOOLTYPE .)


state 14

    (33) type -> STRINGTYPE .

    ID              reduce using rule 33 (type -> STRINGTYPE .)


state 15

    (32) type -> FLOATTYPE .

    ID              reduce using rule 32 (type -> FLOATTYPE .)


state 16

    (31) type -> INTTYPE .

    ID              reduce using rule 31 (type -> INTTYPE .)


state 17

    (24) vars -> VAR type . ID array_declaration store_variable SEMICOLON vars

    ID              shift and go to state 23


state 18

    (4) main -> INTTYPE . MAIN change_to_global LPAREN RPAREN add_jump_to_main block

    MAIN            shift and go to state 24


state 19

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main . endProgram
    (2) endProgram -> .

    $end            reduce using rule 2 (endProgram -> .)

    endProgram                     shift and go to state 25

state 20

    (95) function -> FUNCTION functiontype . ID store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process function

    ID              shift and go to state 26


state 21

    (97) functiontype -> VOID .

    ID              reduce using rule 97 (functiontype -> VOID .)


state 22

    (98) functiontype -> type .

    ID              reduce using rule 98 (functiontype -> type .)


state 23

    (24) vars -> VAR type ID . array_declaration store_variable SEMICOLON vars
    (27) array_declaration -> . LBRACKET dimen_variable sexpression calculate_dimen RBRACKET
    (28) array_declaration -> . empty
    (133) empty -> .

    LBRACKET        shift and go to state 27
    SEMICOLON       reduce using rule 133 (empty -> .)

    array_declaration              shift and go to state 28
    empty                          shift and go to state 29

state 24

    (4) main -> INTTYPE MAIN . change_to_global LPAREN RPAREN add_jump_to_main block
    (5) change_to_global -> .

    LPAREN          reduce using rule 5 (change_to_global -> .)

    change_to_global               shift and go to state 30

state 25

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram .

    $end            reduce using rule 1 (program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram .)


state 26

    (95) function -> FUNCTION functiontype ID . store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process function
    (100) store_function -> .

    LPAREN          reduce using rule 100 (store_function -> .)

    store_function                 shift and go to state 31

state 27

    (27) array_declaration -> LBRACKET . dimen_variable sexpression calculate_dimen RBRACKET
    (29) dimen_variable -> .

    NOT             reduce using rule 29 (dimen_variable -> .)
    LPAREN          reduce using rule 29 (dimen_variable -> .)
    ID              reduce using rule 29 (dimen_variable -> .)
    FLOAT           reduce using rule 29 (dimen_variable -> .)
    INT             reduce using rule 29 (dimen_variable -> .)
    STRING          reduce using rule 29 (dimen_variable -> .)
    TRUE            reduce using rule 29 (dimen_variable -> .)
    FALSE           reduce using rule 29 (dimen_variable -> .)
    DRAWLINE        reduce using rule 29 (dimen_variable -> .)
    DRAWSQUARE      reduce using rule 29 (dimen_variable -> .)
    DRAWTRIANGLE    reduce using rule 29 (dimen_variable -> .)
    DRAWCIRCLE      reduce using rule 29 (dimen_variable -> .)
    DRAWCURVE       reduce using rule 29 (dimen_variable -> .)
    DRAWPOLYGON     reduce using rule 29 (dimen_variable -> .)

    dimen_variable                 shift and go to state 32

state 28

    (24) vars -> VAR type ID array_declaration . store_variable SEMICOLON vars
    (26) store_variable -> .

    SEMICOLON       reduce using rule 26 (store_variable -> .)

    store_variable                 shift and go to state 33

state 29

    (28) array_declaration -> empty .

    SEMICOLON       reduce using rule 28 (array_declaration -> empty .)


state 30

    (4) main -> INTTYPE MAIN change_to_global . LPAREN RPAREN add_jump_to_main block

    LPAREN          shift and go to state 34


state 31

    (95) function -> FUNCTION functiontype ID store_function . LPAREN parameter RPAREN vars add_func_quad_start block end_process function

    LPAREN          shift and go to state 35


state 32

    (27) array_declaration -> LBRACKET dimen_variable . sexpression calculate_dimen RBRACKET
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 37
    empty                          shift and go to state 39

state 33

    (24) vars -> VAR type ID array_declaration store_variable . SEMICOLON vars

    SEMICOLON       shift and go to state 40


state 34

    (4) main -> INTTYPE MAIN change_to_global LPAREN . RPAREN add_jump_to_main block

    RPAREN          shift and go to state 41


state 35

    (95) function -> FUNCTION functiontype ID store_function LPAREN . parameter RPAREN vars add_func_quad_start block end_process function
    (103) parameter -> . type ID store_parameter array parameterprima
    (104) parameter -> . empty
    (31) type -> . INTTYPE
    (32) type -> . FLOATTYPE
    (33) type -> . STRINGTYPE
    (34) type -> . BOOLTYPE
    (133) empty -> .

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13
    RPAREN          reduce using rule 133 (empty -> .)

    empty                          shift and go to state 42
    type                           shift and go to state 43
    parameter                      shift and go to state 44

state 36

    (40) sexpression -> negation . expression do_not_operation
    (44) expression -> . expression relationaloperators push_operator exp do_relational_operation
    (45) expression -> . exp
    (55) exp -> . exp mathoperators1 push_operator term do_math_operation1
    (56) exp -> . term
    (60) term -> . term mathoperators2 push_operator factor do_math_operation2
    (61) term -> . factor
    (65) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (66) factor -> . varConst
    (69) varConst -> . ID push_id_operand array
    (70) varConst -> . FLOAT push_float_operand
    (71) varConst -> . INT push_int_operand
    (72) varConst -> . bool push_bool_operand
    (73) varConst -> . STRING push_string_operand
    (74) varConst -> . predefined
    (75) varConst -> . functioncall
    (80) bool -> . TRUE
    (81) bool -> . FALSE
    (119) predefined -> . drawline
    (120) predefined -> . drawsquare
    (121) predefined -> . drawtriangle
    (122) predefined -> . drawcircle
    (123) predefined -> . drawcurve
    (124) predefined -> . drawpolygon
    (86) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (125) drawline -> . DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (126) drawsquare -> . DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (127) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (128) drawcircle -> . DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (129) drawcurve -> . DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (130) drawpolygon -> . DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 63
    ID              shift and go to state 64
    FLOAT           shift and go to state 68
    INT             shift and go to state 67
    STRING          shift and go to state 51
    TRUE            shift and go to state 49
    FALSE           shift and go to state 55
    DRAWLINE        shift and go to state 50
    DRAWSQUARE      shift and go to state 62
    DRAWTRIANGLE    shift and go to state 56
    DRAWCIRCLE      shift and go to state 53
    DRAWCURVE       shift and go to state 69
    DRAWPOLYGON     shift and go to state 66

    drawtriangle                   shift and go to state 45
    varConst                       shift and go to state 46
    drawcurve                      shift and go to state 47
    predefined                     shift and go to state 52
    drawline                       shift and go to state 54
    bool                           shift and go to state 57
    factor                         shift and go to state 58
    drawcircle                     shift and go to state 59
    exp                            shift and go to state 60
    drawpolygon                    shift and go to state 61
    term                           shift and go to state 65
    drawsquare                     shift and go to state 48
    functioncall                   shift and go to state 70
    expression                     shift and go to state 71

state 37

    (27) array_declaration -> LBRACKET dimen_variable sexpression . calculate_dimen RBRACKET
    (30) calculate_dimen -> .

    RBRACKET        reduce using rule 30 (calculate_dimen -> .)

    calculate_dimen                shift and go to state 72

state 38

    (41) negation -> NOT . push_operator
    (37) push_operator -> .

    LPAREN          reduce using rule 37 (push_operator -> .)
    ID              reduce using rule 37 (push_operator -> .)
    FLOAT           reduce using rule 37 (push_operator -> .)
    INT             reduce using rule 37 (push_operator -> .)
    STRING          reduce using rule 37 (push_operator -> .)
    TRUE            reduce using rule 37 (push_operator -> .)
    FALSE           reduce using rule 37 (push_operator -> .)
    DRAWLINE        reduce using rule 37 (push_operator -> .)
    DRAWSQUARE      reduce using rule 37 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 37 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 37 (push_operator -> .)
    DRAWCURVE       reduce using rule 37 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 37 (push_operator -> .)

    push_operator                  shift and go to state 73

state 39

    (42) negation -> empty .

    LPAREN          reduce using rule 42 (negation -> empty .)
    ID              reduce using rule 42 (negation -> empty .)
    FLOAT           reduce using rule 42 (negation -> empty .)
    INT             reduce using rule 42 (negation -> empty .)
    STRING          reduce using rule 42 (negation -> empty .)
    TRUE            reduce using rule 42 (negation -> empty .)
    FALSE           reduce using rule 42 (negation -> empty .)
    DRAWLINE        reduce using rule 42 (negation -> empty .)
    DRAWSQUARE      reduce using rule 42 (negation -> empty .)
    DRAWTRIANGLE    reduce using rule 42 (negation -> empty .)
    DRAWCIRCLE      reduce using rule 42 (negation -> empty .)
    DRAWCURVE       reduce using rule 42 (negation -> empty .)
    DRAWPOLYGON     reduce using rule 42 (negation -> empty .)


state 40

    (24) vars -> VAR type ID array_declaration store_variable SEMICOLON . vars
    (24) vars -> . VAR type ID array_declaration store_variable SEMICOLON vars
    (25) vars -> . empty
    (133) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 133 (empty -> .)
    INTTYPE         reduce using rule 133 (empty -> .)
    LBRACE          reduce using rule 133 (empty -> .)

    empty                          shift and go to state 9
    vars                           shift and go to state 74

state 41

    (4) main -> INTTYPE MAIN change_to_global LPAREN RPAREN . add_jump_to_main block
    (7) add_jump_to_main -> .

    LBRACE          reduce using rule 7 (add_jump_to_main -> .)

    add_jump_to_main               shift and go to state 75

state 42

    (104) parameter -> empty .

    RPAREN          reduce using rule 104 (parameter -> empty .)


state 43

    (103) parameter -> type . ID store_parameter array parameterprima

    ID              shift and go to state 76


state 44

    (95) function -> FUNCTION functiontype ID store_function LPAREN parameter . RPAREN vars add_func_quad_start block end_process function

    RPAREN          shift and go to state 77


state 45

    (121) predefined -> drawtriangle .

    ID              reduce using rule 121 (predefined -> drawtriangle .)
    IF              reduce using rule 121 (predefined -> drawtriangle .)
    PRINT           reduce using rule 121 (predefined -> drawtriangle .)
    WHILE           reduce using rule 121 (predefined -> drawtriangle .)
    RETURN          reduce using rule 121 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 121 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 121 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 121 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 121 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 121 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 121 (predefined -> drawtriangle .)
    RBRACE          reduce using rule 121 (predefined -> drawtriangle .)
    TIMES           reduce using rule 121 (predefined -> drawtriangle .)
    DEVIDE          reduce using rule 121 (predefined -> drawtriangle .)
    PLUS            reduce using rule 121 (predefined -> drawtriangle .)
    MINUS           reduce using rule 121 (predefined -> drawtriangle .)
    LESSER          reduce using rule 121 (predefined -> drawtriangle .)
    GREATER         reduce using rule 121 (predefined -> drawtriangle .)
    EQUAL           reduce using rule 121 (predefined -> drawtriangle .)
    NOTEQUAL        reduce using rule 121 (predefined -> drawtriangle .)
    LESSEROREQUAL   reduce using rule 121 (predefined -> drawtriangle .)
    GREATEROREQUAL  reduce using rule 121 (predefined -> drawtriangle .)
    AND             reduce using rule 121 (predefined -> drawtriangle .)
    OR              reduce using rule 121 (predefined -> drawtriangle .)
    RBRACKET        reduce using rule 121 (predefined -> drawtriangle .)
    COMMA           reduce using rule 121 (predefined -> drawtriangle .)
    RPAREN          reduce using rule 121 (predefined -> drawtriangle .)
    SEMICOLON       reduce using rule 121 (predefined -> drawtriangle .)


state 46

    (66) factor -> varConst .

    TIMES           reduce using rule 66 (factor -> varConst .)
    DEVIDE          reduce using rule 66 (factor -> varConst .)
    PLUS            reduce using rule 66 (factor -> varConst .)
    MINUS           reduce using rule 66 (factor -> varConst .)
    LESSER          reduce using rule 66 (factor -> varConst .)
    GREATER         reduce using rule 66 (factor -> varConst .)
    EQUAL           reduce using rule 66 (factor -> varConst .)
    NOTEQUAL        reduce using rule 66 (factor -> varConst .)
    LESSEROREQUAL   reduce using rule 66 (factor -> varConst .)
    GREATEROREQUAL  reduce using rule 66 (factor -> varConst .)
    AND             reduce using rule 66 (factor -> varConst .)
    OR              reduce using rule 66 (factor -> varConst .)
    RBRACKET        reduce using rule 66 (factor -> varConst .)
    COMMA           reduce using rule 66 (factor -> varConst .)
    RPAREN          reduce using rule 66 (factor -> varConst .)
    SEMICOLON       reduce using rule 66 (factor -> varConst .)


state 47

    (123) predefined -> drawcurve .

    ID              reduce using rule 123 (predefined -> drawcurve .)
    IF              reduce using rule 123 (predefined -> drawcurve .)
    PRINT           reduce using rule 123 (predefined -> drawcurve .)
    WHILE           reduce using rule 123 (predefined -> drawcurve .)
    RETURN          reduce using rule 123 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 123 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 123 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 123 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 123 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 123 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 123 (predefined -> drawcurve .)
    RBRACE          reduce using rule 123 (predefined -> drawcurve .)
    TIMES           reduce using rule 123 (predefined -> drawcurve .)
    DEVIDE          reduce using rule 123 (predefined -> drawcurve .)
    PLUS            reduce using rule 123 (predefined -> drawcurve .)
    MINUS           reduce using rule 123 (predefined -> drawcurve .)
    LESSER          reduce using rule 123 (predefined -> drawcurve .)
    GREATER         reduce using rule 123 (predefined -> drawcurve .)
    EQUAL           reduce using rule 123 (predefined -> drawcurve .)
    NOTEQUAL        reduce using rule 123 (predefined -> drawcurve .)
    LESSEROREQUAL   reduce using rule 123 (predefined -> drawcurve .)
    GREATEROREQUAL  reduce using rule 123 (predefined -> drawcurve .)
    AND             reduce using rule 123 (predefined -> drawcurve .)
    OR              reduce using rule 123 (predefined -> drawcurve .)
    RBRACKET        reduce using rule 123 (predefined -> drawcurve .)
    COMMA           reduce using rule 123 (predefined -> drawcurve .)
    RPAREN          reduce using rule 123 (predefined -> drawcurve .)
    SEMICOLON       reduce using rule 123 (predefined -> drawcurve .)


state 48

    (120) predefined -> drawsquare .

    ID              reduce using rule 120 (predefined -> drawsquare .)
    IF              reduce using rule 120 (predefined -> drawsquare .)
    PRINT           reduce using rule 120 (predefined -> drawsquare .)
    WHILE           reduce using rule 120 (predefined -> drawsquare .)
    RETURN          reduce using rule 120 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 120 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 120 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 120 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 120 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 120 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 120 (predefined -> drawsquare .)
    RBRACE          reduce using rule 120 (predefined -> drawsquare .)
    TIMES           reduce using rule 120 (predefined -> drawsquare .)
    DEVIDE          reduce using rule 120 (predefined -> drawsquare .)
    PLUS            reduce using rule 120 (predefined -> drawsquare .)
    MINUS           reduce using rule 120 (predefined -> drawsquare .)
    LESSER          reduce using rule 120 (predefined -> drawsquare .)
    GREATER         reduce using rule 120 (predefined -> drawsquare .)
    EQUAL           reduce using rule 120 (predefined -> drawsquare .)
    NOTEQUAL        reduce using rule 120 (predefined -> drawsquare .)
    LESSEROREQUAL   reduce using rule 120 (predefined -> drawsquare .)
    GREATEROREQUAL  reduce using rule 120 (predefined -> drawsquare .)
    AND             reduce using rule 120 (predefined -> drawsquare .)
    OR              reduce using rule 120 (predefined -> drawsquare .)
    RBRACKET        reduce using rule 120 (predefined -> drawsquare .)
    COMMA           reduce using rule 120 (predefined -> drawsquare .)
    RPAREN          reduce using rule 120 (predefined -> drawsquare .)
    SEMICOLON       reduce using rule 120 (predefined -> drawsquare .)


state 49

    (80) bool -> TRUE .

    TIMES           reduce using rule 80 (bool -> TRUE .)
    DEVIDE          reduce using rule 80 (bool -> TRUE .)
    PLUS            reduce using rule 80 (bool -> TRUE .)
    MINUS           reduce using rule 80 (bool -> TRUE .)
    LESSER          reduce using rule 80 (bool -> TRUE .)
    GREATER         reduce using rule 80 (bool -> TRUE .)
    EQUAL           reduce using rule 80 (bool -> TRUE .)
    NOTEQUAL        reduce using rule 80 (bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 80 (bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 80 (bool -> TRUE .)
    AND             reduce using rule 80 (bool -> TRUE .)
    OR              reduce using rule 80 (bool -> TRUE .)
    RBRACKET        reduce using rule 80 (bool -> TRUE .)
    COMMA           reduce using rule 80 (bool -> TRUE .)
    RPAREN          reduce using rule 80 (bool -> TRUE .)
    SEMICOLON       reduce using rule 80 (bool -> TRUE .)


state 50

    (125) drawline -> DRAWLINE . LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 78


state 51

    (73) varConst -> STRING . push_string_operand
    (85) push_string_operand -> .

    TIMES           reduce using rule 85 (push_string_operand -> .)
    DEVIDE          reduce using rule 85 (push_string_operand -> .)
    PLUS            reduce using rule 85 (push_string_operand -> .)
    MINUS           reduce using rule 85 (push_string_operand -> .)
    LESSER          reduce using rule 85 (push_string_operand -> .)
    GREATER         reduce using rule 85 (push_string_operand -> .)
    EQUAL           reduce using rule 85 (push_string_operand -> .)
    NOTEQUAL        reduce using rule 85 (push_string_operand -> .)
    LESSEROREQUAL   reduce using rule 85 (push_string_operand -> .)
    GREATEROREQUAL  reduce using rule 85 (push_string_operand -> .)
    AND             reduce using rule 85 (push_string_operand -> .)
    OR              reduce using rule 85 (push_string_operand -> .)
    RBRACKET        reduce using rule 85 (push_string_operand -> .)
    COMMA           reduce using rule 85 (push_string_operand -> .)
    RPAREN          reduce using rule 85 (push_string_operand -> .)
    SEMICOLON       reduce using rule 85 (push_string_operand -> .)

    push_string_operand            shift and go to state 79

state 52

    (74) varConst -> predefined .

    TIMES           reduce using rule 74 (varConst -> predefined .)
    DEVIDE          reduce using rule 74 (varConst -> predefined .)
    PLUS            reduce using rule 74 (varConst -> predefined .)
    MINUS           reduce using rule 74 (varConst -> predefined .)
    LESSER          reduce using rule 74 (varConst -> predefined .)
    GREATER         reduce using rule 74 (varConst -> predefined .)
    EQUAL           reduce using rule 74 (varConst -> predefined .)
    NOTEQUAL        reduce using rule 74 (varConst -> predefined .)
    LESSEROREQUAL   reduce using rule 74 (varConst -> predefined .)
    GREATEROREQUAL  reduce using rule 74 (varConst -> predefined .)
    AND             reduce using rule 74 (varConst -> predefined .)
    OR              reduce using rule 74 (varConst -> predefined .)
    RBRACKET        reduce using rule 74 (varConst -> predefined .)
    COMMA           reduce using rule 74 (varConst -> predefined .)
    RPAREN          reduce using rule 74 (varConst -> predefined .)
    SEMICOLON       reduce using rule 74 (varConst -> predefined .)


state 53

    (128) drawcircle -> DRAWCIRCLE . LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 80


state 54

    (119) predefined -> drawline .

    ID              reduce using rule 119 (predefined -> drawline .)
    IF              reduce using rule 119 (predefined -> drawline .)
    PRINT           reduce using rule 119 (predefined -> drawline .)
    WHILE           reduce using rule 119 (predefined -> drawline .)
    RETURN          reduce using rule 119 (predefined -> drawline .)
    DRAWLINE        reduce using rule 119 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 119 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 119 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 119 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 119 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 119 (predefined -> drawline .)
    RBRACE          reduce using rule 119 (predefined -> drawline .)
    TIMES           reduce using rule 119 (predefined -> drawline .)
    DEVIDE          reduce using rule 119 (predefined -> drawline .)
    PLUS            reduce using rule 119 (predefined -> drawline .)
    MINUS           reduce using rule 119 (predefined -> drawline .)
    LESSER          reduce using rule 119 (predefined -> drawline .)
    GREATER         reduce using rule 119 (predefined -> drawline .)
    EQUAL           reduce using rule 119 (predefined -> drawline .)
    NOTEQUAL        reduce using rule 119 (predefined -> drawline .)
    LESSEROREQUAL   reduce using rule 119 (predefined -> drawline .)
    GREATEROREQUAL  reduce using rule 119 (predefined -> drawline .)
    AND             reduce using rule 119 (predefined -> drawline .)
    OR              reduce using rule 119 (predefined -> drawline .)
    RBRACKET        reduce using rule 119 (predefined -> drawline .)
    COMMA           reduce using rule 119 (predefined -> drawline .)
    RPAREN          reduce using rule 119 (predefined -> drawline .)
    SEMICOLON       reduce using rule 119 (predefined -> drawline .)


state 55

    (81) bool -> FALSE .

    TIMES           reduce using rule 81 (bool -> FALSE .)
    DEVIDE          reduce using rule 81 (bool -> FALSE .)
    PLUS            reduce using rule 81 (bool -> FALSE .)
    MINUS           reduce using rule 81 (bool -> FALSE .)
    LESSER          reduce using rule 81 (bool -> FALSE .)
    GREATER         reduce using rule 81 (bool -> FALSE .)
    EQUAL           reduce using rule 81 (bool -> FALSE .)
    NOTEQUAL        reduce using rule 81 (bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 81 (bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 81 (bool -> FALSE .)
    AND             reduce using rule 81 (bool -> FALSE .)
    OR              reduce using rule 81 (bool -> FALSE .)
    RBRACKET        reduce using rule 81 (bool -> FALSE .)
    COMMA           reduce using rule 81 (bool -> FALSE .)
    RPAREN          reduce using rule 81 (bool -> FALSE .)
    SEMICOLON       reduce using rule 81 (bool -> FALSE .)


state 56

    (127) drawtriangle -> DRAWTRIANGLE . LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 81


state 57

    (72) varConst -> bool . push_bool_operand
    (84) push_bool_operand -> .

    TIMES           reduce using rule 84 (push_bool_operand -> .)
    DEVIDE          reduce using rule 84 (push_bool_operand -> .)
    PLUS            reduce using rule 84 (push_bool_operand -> .)
    MINUS           reduce using rule 84 (push_bool_operand -> .)
    LESSER          reduce using rule 84 (push_bool_operand -> .)
    GREATER         reduce using rule 84 (push_bool_operand -> .)
    EQUAL           reduce using rule 84 (push_bool_operand -> .)
    NOTEQUAL        reduce using rule 84 (push_bool_operand -> .)
    LESSEROREQUAL   reduce using rule 84 (push_bool_operand -> .)
    GREATEROREQUAL  reduce using rule 84 (push_bool_operand -> .)
    AND             reduce using rule 84 (push_bool_operand -> .)
    OR              reduce using rule 84 (push_bool_operand -> .)
    RBRACKET        reduce using rule 84 (push_bool_operand -> .)
    COMMA           reduce using rule 84 (push_bool_operand -> .)
    RPAREN          reduce using rule 84 (push_bool_operand -> .)
    SEMICOLON       reduce using rule 84 (push_bool_operand -> .)

    push_bool_operand              shift and go to state 82

state 58

    (61) term -> factor .

    TIMES           reduce using rule 61 (term -> factor .)
    DEVIDE          reduce using rule 61 (term -> factor .)
    PLUS            reduce using rule 61 (term -> factor .)
    MINUS           reduce using rule 61 (term -> factor .)
    LESSER          reduce using rule 61 (term -> factor .)
    GREATER         reduce using rule 61 (term -> factor .)
    EQUAL           reduce using rule 61 (term -> factor .)
    NOTEQUAL        reduce using rule 61 (term -> factor .)
    LESSEROREQUAL   reduce using rule 61 (term -> factor .)
    GREATEROREQUAL  reduce using rule 61 (term -> factor .)
    AND             reduce using rule 61 (term -> factor .)
    OR              reduce using rule 61 (term -> factor .)
    RBRACKET        reduce using rule 61 (term -> factor .)
    COMMA           reduce using rule 61 (term -> factor .)
    RPAREN          reduce using rule 61 (term -> factor .)
    SEMICOLON       reduce using rule 61 (term -> factor .)


state 59

    (122) predefined -> drawcircle .

    ID              reduce using rule 122 (predefined -> drawcircle .)
    IF              reduce using rule 122 (predefined -> drawcircle .)
    PRINT           reduce using rule 122 (predefined -> drawcircle .)
    WHILE           reduce using rule 122 (predefined -> drawcircle .)
    RETURN          reduce using rule 122 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 122 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 122 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 122 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 122 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 122 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 122 (predefined -> drawcircle .)
    RBRACE          reduce using rule 122 (predefined -> drawcircle .)
    TIMES           reduce using rule 122 (predefined -> drawcircle .)
    DEVIDE          reduce using rule 122 (predefined -> drawcircle .)
    PLUS            reduce using rule 122 (predefined -> drawcircle .)
    MINUS           reduce using rule 122 (predefined -> drawcircle .)
    LESSER          reduce using rule 122 (predefined -> drawcircle .)
    GREATER         reduce using rule 122 (predefined -> drawcircle .)
    EQUAL           reduce using rule 122 (predefined -> drawcircle .)
    NOTEQUAL        reduce using rule 122 (predefined -> drawcircle .)
    LESSEROREQUAL   reduce using rule 122 (predefined -> drawcircle .)
    GREATEROREQUAL  reduce using rule 122 (predefined -> drawcircle .)
    AND             reduce using rule 122 (predefined -> drawcircle .)
    OR              reduce using rule 122 (predefined -> drawcircle .)
    RBRACKET        reduce using rule 122 (predefined -> drawcircle .)
    COMMA           reduce using rule 122 (predefined -> drawcircle .)
    RPAREN          reduce using rule 122 (predefined -> drawcircle .)
    SEMICOLON       reduce using rule 122 (predefined -> drawcircle .)


state 60

    (45) expression -> exp .
    (55) exp -> exp . mathoperators1 push_operator term do_math_operation1
    (57) mathoperators1 -> . PLUS
    (58) mathoperators1 -> . MINUS

    LESSER          reduce using rule 45 (expression -> exp .)
    GREATER         reduce using rule 45 (expression -> exp .)
    EQUAL           reduce using rule 45 (expression -> exp .)
    NOTEQUAL        reduce using rule 45 (expression -> exp .)
    LESSEROREQUAL   reduce using rule 45 (expression -> exp .)
    GREATEROREQUAL  reduce using rule 45 (expression -> exp .)
    AND             reduce using rule 45 (expression -> exp .)
    OR              reduce using rule 45 (expression -> exp .)
    RBRACKET        reduce using rule 45 (expression -> exp .)
    COMMA           reduce using rule 45 (expression -> exp .)
    RPAREN          reduce using rule 45 (expression -> exp .)
    SEMICOLON       reduce using rule 45 (expression -> exp .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85

    mathoperators1                 shift and go to state 84

state 61

    (124) predefined -> drawpolygon .

    ID              reduce using rule 124 (predefined -> drawpolygon .)
    IF              reduce using rule 124 (predefined -> drawpolygon .)
    PRINT           reduce using rule 124 (predefined -> drawpolygon .)
    WHILE           reduce using rule 124 (predefined -> drawpolygon .)
    RETURN          reduce using rule 124 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 124 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 124 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 124 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 124 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 124 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 124 (predefined -> drawpolygon .)
    RBRACE          reduce using rule 124 (predefined -> drawpolygon .)
    TIMES           reduce using rule 124 (predefined -> drawpolygon .)
    DEVIDE          reduce using rule 124 (predefined -> drawpolygon .)
    PLUS            reduce using rule 124 (predefined -> drawpolygon .)
    MINUS           reduce using rule 124 (predefined -> drawpolygon .)
    LESSER          reduce using rule 124 (predefined -> drawpolygon .)
    GREATER         reduce using rule 124 (predefined -> drawpolygon .)
    EQUAL           reduce using rule 124 (predefined -> drawpolygon .)
    NOTEQUAL        reduce using rule 124 (predefined -> drawpolygon .)
    LESSEROREQUAL   reduce using rule 124 (predefined -> drawpolygon .)
    GREATEROREQUAL  reduce using rule 124 (predefined -> drawpolygon .)
    AND             reduce using rule 124 (predefined -> drawpolygon .)
    OR              reduce using rule 124 (predefined -> drawpolygon .)
    RBRACKET        reduce using rule 124 (predefined -> drawpolygon .)
    COMMA           reduce using rule 124 (predefined -> drawpolygon .)
    RPAREN          reduce using rule 124 (predefined -> drawpolygon .)
    SEMICOLON       reduce using rule 124 (predefined -> drawpolygon .)


state 62

    (126) drawsquare -> DRAWSQUARE . LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 63

    (65) factor -> LPAREN . push_false_bottom sexpression RPAREN pop_false_bottom
    (67) push_false_bottom -> .

    NOT             reduce using rule 67 (push_false_bottom -> .)
    LPAREN          reduce using rule 67 (push_false_bottom -> .)
    ID              reduce using rule 67 (push_false_bottom -> .)
    FLOAT           reduce using rule 67 (push_false_bottom -> .)
    INT             reduce using rule 67 (push_false_bottom -> .)
    STRING          reduce using rule 67 (push_false_bottom -> .)
    TRUE            reduce using rule 67 (push_false_bottom -> .)
    FALSE           reduce using rule 67 (push_false_bottom -> .)
    DRAWLINE        reduce using rule 67 (push_false_bottom -> .)
    DRAWSQUARE      reduce using rule 67 (push_false_bottom -> .)
    DRAWTRIANGLE    reduce using rule 67 (push_false_bottom -> .)
    DRAWCIRCLE      reduce using rule 67 (push_false_bottom -> .)
    DRAWCURVE       reduce using rule 67 (push_false_bottom -> .)
    DRAWPOLYGON     reduce using rule 67 (push_false_bottom -> .)

    push_false_bottom              shift and go to state 87

state 64

    (69) varConst -> ID . push_id_operand array
    (86) functioncall -> ID . check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (36) push_id_operand -> .
    (87) check_function_existance -> .

    LBRACKET        reduce using rule 36 (push_id_operand -> .)
    TIMES           reduce using rule 36 (push_id_operand -> .)
    DEVIDE          reduce using rule 36 (push_id_operand -> .)
    PLUS            reduce using rule 36 (push_id_operand -> .)
    MINUS           reduce using rule 36 (push_id_operand -> .)
    LESSER          reduce using rule 36 (push_id_operand -> .)
    GREATER         reduce using rule 36 (push_id_operand -> .)
    EQUAL           reduce using rule 36 (push_id_operand -> .)
    NOTEQUAL        reduce using rule 36 (push_id_operand -> .)
    LESSEROREQUAL   reduce using rule 36 (push_id_operand -> .)
    GREATEROREQUAL  reduce using rule 36 (push_id_operand -> .)
    AND             reduce using rule 36 (push_id_operand -> .)
    OR              reduce using rule 36 (push_id_operand -> .)
    RBRACKET        reduce using rule 36 (push_id_operand -> .)
    COMMA           reduce using rule 36 (push_id_operand -> .)
    RPAREN          reduce using rule 36 (push_id_operand -> .)
    SEMICOLON       reduce using rule 36 (push_id_operand -> .)
    LPAREN          reduce using rule 87 (check_function_existance -> .)

    check_function_existance       shift and go to state 88
    push_id_operand                shift and go to state 89

state 65

    (56) exp -> term .
    (60) term -> term . mathoperators2 push_operator factor do_math_operation2
    (62) mathoperators2 -> . TIMES
    (63) mathoperators2 -> . DEVIDE

    PLUS            reduce using rule 56 (exp -> term .)
    MINUS           reduce using rule 56 (exp -> term .)
    LESSER          reduce using rule 56 (exp -> term .)
    GREATER         reduce using rule 56 (exp -> term .)
    EQUAL           reduce using rule 56 (exp -> term .)
    NOTEQUAL        reduce using rule 56 (exp -> term .)
    LESSEROREQUAL   reduce using rule 56 (exp -> term .)
    GREATEROREQUAL  reduce using rule 56 (exp -> term .)
    AND             reduce using rule 56 (exp -> term .)
    OR              reduce using rule 56 (exp -> term .)
    RBRACKET        reduce using rule 56 (exp -> term .)
    COMMA           reduce using rule 56 (exp -> term .)
    RPAREN          reduce using rule 56 (exp -> term .)
    SEMICOLON       reduce using rule 56 (exp -> term .)
    TIMES           shift and go to state 91
    DEVIDE          shift and go to state 90

    mathoperators2                 shift and go to state 92

state 66

    (130) drawpolygon -> DRAWPOLYGON . LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 93


state 67

    (71) varConst -> INT . push_int_operand
    (83) push_int_operand -> .

    TIMES           reduce using rule 83 (push_int_operand -> .)
    DEVIDE          reduce using rule 83 (push_int_operand -> .)
    PLUS            reduce using rule 83 (push_int_operand -> .)
    MINUS           reduce using rule 83 (push_int_operand -> .)
    LESSER          reduce using rule 83 (push_int_operand -> .)
    GREATER         reduce using rule 83 (push_int_operand -> .)
    EQUAL           reduce using rule 83 (push_int_operand -> .)
    NOTEQUAL        reduce using rule 83 (push_int_operand -> .)
    LESSEROREQUAL   reduce using rule 83 (push_int_operand -> .)
    GREATEROREQUAL  reduce using rule 83 (push_int_operand -> .)
    AND             reduce using rule 83 (push_int_operand -> .)
    OR              reduce using rule 83 (push_int_operand -> .)
    RBRACKET        reduce using rule 83 (push_int_operand -> .)
    COMMA           reduce using rule 83 (push_int_operand -> .)
    RPAREN          reduce using rule 83 (push_int_operand -> .)
    SEMICOLON       reduce using rule 83 (push_int_operand -> .)

    push_int_operand               shift and go to state 94

state 68

    (70) varConst -> FLOAT . push_float_operand
    (82) push_float_operand -> .

    TIMES           reduce using rule 82 (push_float_operand -> .)
    DEVIDE          reduce using rule 82 (push_float_operand -> .)
    PLUS            reduce using rule 82 (push_float_operand -> .)
    MINUS           reduce using rule 82 (push_float_operand -> .)
    LESSER          reduce using rule 82 (push_float_operand -> .)
    GREATER         reduce using rule 82 (push_float_operand -> .)
    EQUAL           reduce using rule 82 (push_float_operand -> .)
    NOTEQUAL        reduce using rule 82 (push_float_operand -> .)
    LESSEROREQUAL   reduce using rule 82 (push_float_operand -> .)
    GREATEROREQUAL  reduce using rule 82 (push_float_operand -> .)
    AND             reduce using rule 82 (push_float_operand -> .)
    OR              reduce using rule 82 (push_float_operand -> .)
    RBRACKET        reduce using rule 82 (push_float_operand -> .)
    COMMA           reduce using rule 82 (push_float_operand -> .)
    RPAREN          reduce using rule 82 (push_float_operand -> .)
    SEMICOLON       reduce using rule 82 (push_float_operand -> .)

    push_float_operand             shift and go to state 95

state 69

    (129) drawcurve -> DRAWCURVE . LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 96


state 70

    (75) varConst -> functioncall .

    TIMES           reduce using rule 75 (varConst -> functioncall .)
    DEVIDE          reduce using rule 75 (varConst -> functioncall .)
    PLUS            reduce using rule 75 (varConst -> functioncall .)
    MINUS           reduce using rule 75 (varConst -> functioncall .)
    LESSER          reduce using rule 75 (varConst -> functioncall .)
    GREATER         reduce using rule 75 (varConst -> functioncall .)
    EQUAL           reduce using rule 75 (varConst -> functioncall .)
    NOTEQUAL        reduce using rule 75 (varConst -> functioncall .)
    LESSEROREQUAL   reduce using rule 75 (varConst -> functioncall .)
    GREATEROREQUAL  reduce using rule 75 (varConst -> functioncall .)
    AND             reduce using rule 75 (varConst -> functioncall .)
    OR              reduce using rule 75 (varConst -> functioncall .)
    RBRACKET        reduce using rule 75 (varConst -> functioncall .)
    COMMA           reduce using rule 75 (varConst -> functioncall .)
    RPAREN          reduce using rule 75 (varConst -> functioncall .)
    SEMICOLON       reduce using rule 75 (varConst -> functioncall .)


state 71

    (40) sexpression -> negation expression . do_not_operation
    (44) expression -> expression . relationaloperators push_operator exp do_relational_operation
    (43) do_not_operation -> .
    (46) relationaloperators -> . LESSER
    (47) relationaloperators -> . GREATER
    (48) relationaloperators -> . EQUAL
    (49) relationaloperators -> . NOTEQUAL
    (50) relationaloperators -> . LESSEROREQUAL
    (51) relationaloperators -> . GREATEROREQUAL
    (52) relationaloperators -> . AND
    (53) relationaloperators -> . OR

    RBRACKET        reduce using rule 43 (do_not_operation -> .)
    COMMA           reduce using rule 43 (do_not_operation -> .)
    RPAREN          reduce using rule 43 (do_not_operation -> .)
    SEMICOLON       reduce using rule 43 (do_not_operation -> .)
    LESSER          shift and go to state 104
    GREATER         shift and go to state 100
    EQUAL           shift and go to state 103
    NOTEQUAL        shift and go to state 101
    LESSEROREQUAL   shift and go to state 102
    GREATEROREQUAL  shift and go to state 105
    AND             shift and go to state 97
    OR              shift and go to state 106

    relationaloperators            shift and go to state 98
    do_not_operation               shift and go to state 99

state 72

    (27) array_declaration -> LBRACKET dimen_variable sexpression calculate_dimen . RBRACKET

    RBRACKET        shift and go to state 107


state 73

    (41) negation -> NOT push_operator .

    LPAREN          reduce using rule 41 (negation -> NOT push_operator .)
    ID              reduce using rule 41 (negation -> NOT push_operator .)
    FLOAT           reduce using rule 41 (negation -> NOT push_operator .)
    INT             reduce using rule 41 (negation -> NOT push_operator .)
    STRING          reduce using rule 41 (negation -> NOT push_operator .)
    TRUE            reduce using rule 41 (negation -> NOT push_operator .)
    FALSE           reduce using rule 41 (negation -> NOT push_operator .)
    DRAWLINE        reduce using rule 41 (negation -> NOT push_operator .)
    DRAWSQUARE      reduce using rule 41 (negation -> NOT push_operator .)
    DRAWTRIANGLE    reduce using rule 41 (negation -> NOT push_operator .)
    DRAWCIRCLE      reduce using rule 41 (negation -> NOT push_operator .)
    DRAWCURVE       reduce using rule 41 (negation -> NOT push_operator .)
    DRAWPOLYGON     reduce using rule 41 (negation -> NOT push_operator .)


state 74

    (24) vars -> VAR type ID array_declaration store_variable SEMICOLON vars .

    LBRACE          reduce using rule 24 (vars -> VAR type ID array_declaration store_variable SEMICOLON vars .)
    FUNCTION        reduce using rule 24 (vars -> VAR type ID array_declaration store_variable SEMICOLON vars .)
    INTTYPE         reduce using rule 24 (vars -> VAR type ID array_declaration store_variable SEMICOLON vars .)


state 75

    (4) main -> INTTYPE MAIN change_to_global LPAREN RPAREN add_jump_to_main . block
    (8) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 108

    block                          shift and go to state 109

state 76

    (103) parameter -> type ID . store_parameter array parameterprima
    (107) store_parameter -> .

    LBRACKET        reduce using rule 107 (store_parameter -> .)
    COMMA           reduce using rule 107 (store_parameter -> .)
    RPAREN          reduce using rule 107 (store_parameter -> .)

    store_parameter                shift and go to state 110

state 77

    (95) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN . vars add_func_quad_start block end_process function
    (24) vars -> . VAR type ID array_declaration store_variable SEMICOLON vars
    (25) vars -> . empty
    (133) empty -> .

    VAR             shift and go to state 8
    LBRACE          reduce using rule 133 (empty -> .)

    vars                           shift and go to state 111
    empty                          shift and go to state 9

state 78

    (125) drawline -> DRAWLINE LPAREN . sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 112
    empty                          shift and go to state 39

state 79

    (73) varConst -> STRING push_string_operand .

    TIMES           reduce using rule 73 (varConst -> STRING push_string_operand .)
    DEVIDE          reduce using rule 73 (varConst -> STRING push_string_operand .)
    PLUS            reduce using rule 73 (varConst -> STRING push_string_operand .)
    MINUS           reduce using rule 73 (varConst -> STRING push_string_operand .)
    LESSER          reduce using rule 73 (varConst -> STRING push_string_operand .)
    GREATER         reduce using rule 73 (varConst -> STRING push_string_operand .)
    EQUAL           reduce using rule 73 (varConst -> STRING push_string_operand .)
    NOTEQUAL        reduce using rule 73 (varConst -> STRING push_string_operand .)
    LESSEROREQUAL   reduce using rule 73 (varConst -> STRING push_string_operand .)
    GREATEROREQUAL  reduce using rule 73 (varConst -> STRING push_string_operand .)
    AND             reduce using rule 73 (varConst -> STRING push_string_operand .)
    OR              reduce using rule 73 (varConst -> STRING push_string_operand .)
    RBRACKET        reduce using rule 73 (varConst -> STRING push_string_operand .)
    COMMA           reduce using rule 73 (varConst -> STRING push_string_operand .)
    RPAREN          reduce using rule 73 (varConst -> STRING push_string_operand .)
    SEMICOLON       reduce using rule 73 (varConst -> STRING push_string_operand .)


state 80

    (128) drawcircle -> DRAWCIRCLE LPAREN . sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 113
    empty                          shift and go to state 39

state 81

    (127) drawtriangle -> DRAWTRIANGLE LPAREN . sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 114
    empty                          shift and go to state 39

state 82

    (72) varConst -> bool push_bool_operand .

    TIMES           reduce using rule 72 (varConst -> bool push_bool_operand .)
    DEVIDE          reduce using rule 72 (varConst -> bool push_bool_operand .)
    PLUS            reduce using rule 72 (varConst -> bool push_bool_operand .)
    MINUS           reduce using rule 72 (varConst -> bool push_bool_operand .)
    LESSER          reduce using rule 72 (varConst -> bool push_bool_operand .)
    GREATER         reduce using rule 72 (varConst -> bool push_bool_operand .)
    EQUAL           reduce using rule 72 (varConst -> bool push_bool_operand .)
    NOTEQUAL        reduce using rule 72 (varConst -> bool push_bool_operand .)
    LESSEROREQUAL   reduce using rule 72 (varConst -> bool push_bool_operand .)
    GREATEROREQUAL  reduce using rule 72 (varConst -> bool push_bool_operand .)
    AND             reduce using rule 72 (varConst -> bool push_bool_operand .)
    OR              reduce using rule 72 (varConst -> bool push_bool_operand .)
    RBRACKET        reduce using rule 72 (varConst -> bool push_bool_operand .)
    COMMA           reduce using rule 72 (varConst -> bool push_bool_operand .)
    RPAREN          reduce using rule 72 (varConst -> bool push_bool_operand .)
    SEMICOLON       reduce using rule 72 (varConst -> bool push_bool_operand .)


state 83

    (57) mathoperators1 -> PLUS .

    LPAREN          reduce using rule 57 (mathoperators1 -> PLUS .)
    ID              reduce using rule 57 (mathoperators1 -> PLUS .)
    FLOAT           reduce using rule 57 (mathoperators1 -> PLUS .)
    INT             reduce using rule 57 (mathoperators1 -> PLUS .)
    STRING          reduce using rule 57 (mathoperators1 -> PLUS .)
    TRUE            reduce using rule 57 (mathoperators1 -> PLUS .)
    FALSE           reduce using rule 57 (mathoperators1 -> PLUS .)
    DRAWLINE        reduce using rule 57 (mathoperators1 -> PLUS .)
    DRAWSQUARE      reduce using rule 57 (mathoperators1 -> PLUS .)
    DRAWTRIANGLE    reduce using rule 57 (mathoperators1 -> PLUS .)
    DRAWCIRCLE      reduce using rule 57 (mathoperators1 -> PLUS .)
    DRAWCURVE       reduce using rule 57 (mathoperators1 -> PLUS .)
    DRAWPOLYGON     reduce using rule 57 (mathoperators1 -> PLUS .)


state 84

    (55) exp -> exp mathoperators1 . push_operator term do_math_operation1
    (37) push_operator -> .

    LPAREN          reduce using rule 37 (push_operator -> .)
    ID              reduce using rule 37 (push_operator -> .)
    FLOAT           reduce using rule 37 (push_operator -> .)
    INT             reduce using rule 37 (push_operator -> .)
    STRING          reduce using rule 37 (push_operator -> .)
    TRUE            reduce using rule 37 (push_operator -> .)
    FALSE           reduce using rule 37 (push_operator -> .)
    DRAWLINE        reduce using rule 37 (push_operator -> .)
    DRAWSQUARE      reduce using rule 37 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 37 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 37 (push_operator -> .)
    DRAWCURVE       reduce using rule 37 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 37 (push_operator -> .)

    push_operator                  shift and go to state 115

state 85

    (58) mathoperators1 -> MINUS .

    LPAREN          reduce using rule 58 (mathoperators1 -> MINUS .)
    ID              reduce using rule 58 (mathoperators1 -> MINUS .)
    FLOAT           reduce using rule 58 (mathoperators1 -> MINUS .)
    INT             reduce using rule 58 (mathoperators1 -> MINUS .)
    STRING          reduce using rule 58 (mathoperators1 -> MINUS .)
    TRUE            reduce using rule 58 (mathoperators1 -> MINUS .)
    FALSE           reduce using rule 58 (mathoperators1 -> MINUS .)
    DRAWLINE        reduce using rule 58 (mathoperators1 -> MINUS .)
    DRAWSQUARE      reduce using rule 58 (mathoperators1 -> MINUS .)
    DRAWTRIANGLE    reduce using rule 58 (mathoperators1 -> MINUS .)
    DRAWCIRCLE      reduce using rule 58 (mathoperators1 -> MINUS .)
    DRAWCURVE       reduce using rule 58 (mathoperators1 -> MINUS .)
    DRAWPOLYGON     reduce using rule 58 (mathoperators1 -> MINUS .)


state 86

    (126) drawsquare -> DRAWSQUARE LPAREN . sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 116
    empty                          shift and go to state 39

state 87

    (65) factor -> LPAREN push_false_bottom . sexpression RPAREN pop_false_bottom
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    sexpression                    shift and go to state 117
    negation                       shift and go to state 36
    empty                          shift and go to state 39

state 88

    (86) functioncall -> ID check_function_existance . LPAREN generate_era funcargum RPAREN validate_arguments

    LPAREN          shift and go to state 118


state 89

    (69) varConst -> ID push_id_operand . array
    (76) array -> . LBRACKET access_dimen_var sexpression validate_index RBRACKET
    (77) array -> . empty
    (133) empty -> .

    LBRACKET        shift and go to state 119
    TIMES           reduce using rule 133 (empty -> .)
    DEVIDE          reduce using rule 133 (empty -> .)
    PLUS            reduce using rule 133 (empty -> .)
    MINUS           reduce using rule 133 (empty -> .)
    LESSER          reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    EQUAL           reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    LESSEROREQUAL   reduce using rule 133 (empty -> .)
    GREATEROREQUAL  reduce using rule 133 (empty -> .)
    AND             reduce using rule 133 (empty -> .)
    OR              reduce using rule 133 (empty -> .)
    RBRACKET        reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)
    RPAREN          reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)

    array                          shift and go to state 120
    empty                          shift and go to state 121

state 90

    (63) mathoperators2 -> DEVIDE .

    LPAREN          reduce using rule 63 (mathoperators2 -> DEVIDE .)
    ID              reduce using rule 63 (mathoperators2 -> DEVIDE .)
    FLOAT           reduce using rule 63 (mathoperators2 -> DEVIDE .)
    INT             reduce using rule 63 (mathoperators2 -> DEVIDE .)
    STRING          reduce using rule 63 (mathoperators2 -> DEVIDE .)
    TRUE            reduce using rule 63 (mathoperators2 -> DEVIDE .)
    FALSE           reduce using rule 63 (mathoperators2 -> DEVIDE .)
    DRAWLINE        reduce using rule 63 (mathoperators2 -> DEVIDE .)
    DRAWSQUARE      reduce using rule 63 (mathoperators2 -> DEVIDE .)
    DRAWTRIANGLE    reduce using rule 63 (mathoperators2 -> DEVIDE .)
    DRAWCIRCLE      reduce using rule 63 (mathoperators2 -> DEVIDE .)
    DRAWCURVE       reduce using rule 63 (mathoperators2 -> DEVIDE .)
    DRAWPOLYGON     reduce using rule 63 (mathoperators2 -> DEVIDE .)


state 91

    (62) mathoperators2 -> TIMES .

    LPAREN          reduce using rule 62 (mathoperators2 -> TIMES .)
    ID              reduce using rule 62 (mathoperators2 -> TIMES .)
    FLOAT           reduce using rule 62 (mathoperators2 -> TIMES .)
    INT             reduce using rule 62 (mathoperators2 -> TIMES .)
    STRING          reduce using rule 62 (mathoperators2 -> TIMES .)
    TRUE            reduce using rule 62 (mathoperators2 -> TIMES .)
    FALSE           reduce using rule 62 (mathoperators2 -> TIMES .)
    DRAWLINE        reduce using rule 62 (mathoperators2 -> TIMES .)
    DRAWSQUARE      reduce using rule 62 (mathoperators2 -> TIMES .)
    DRAWTRIANGLE    reduce using rule 62 (mathoperators2 -> TIMES .)
    DRAWCIRCLE      reduce using rule 62 (mathoperators2 -> TIMES .)
    DRAWCURVE       reduce using rule 62 (mathoperators2 -> TIMES .)
    DRAWPOLYGON     reduce using rule 62 (mathoperators2 -> TIMES .)


state 92

    (60) term -> term mathoperators2 . push_operator factor do_math_operation2
    (37) push_operator -> .

    LPAREN          reduce using rule 37 (push_operator -> .)
    ID              reduce using rule 37 (push_operator -> .)
    FLOAT           reduce using rule 37 (push_operator -> .)
    INT             reduce using rule 37 (push_operator -> .)
    STRING          reduce using rule 37 (push_operator -> .)
    TRUE            reduce using rule 37 (push_operator -> .)
    FALSE           reduce using rule 37 (push_operator -> .)
    DRAWLINE        reduce using rule 37 (push_operator -> .)
    DRAWSQUARE      reduce using rule 37 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 37 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 37 (push_operator -> .)
    DRAWCURVE       reduce using rule 37 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 37 (push_operator -> .)

    push_operator                  shift and go to state 122

state 93

    (130) drawpolygon -> DRAWPOLYGON LPAREN . sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 123
    empty                          shift and go to state 39

state 94

    (71) varConst -> INT push_int_operand .

    TIMES           reduce using rule 71 (varConst -> INT push_int_operand .)
    DEVIDE          reduce using rule 71 (varConst -> INT push_int_operand .)
    PLUS            reduce using rule 71 (varConst -> INT push_int_operand .)
    MINUS           reduce using rule 71 (varConst -> INT push_int_operand .)
    LESSER          reduce using rule 71 (varConst -> INT push_int_operand .)
    GREATER         reduce using rule 71 (varConst -> INT push_int_operand .)
    EQUAL           reduce using rule 71 (varConst -> INT push_int_operand .)
    NOTEQUAL        reduce using rule 71 (varConst -> INT push_int_operand .)
    LESSEROREQUAL   reduce using rule 71 (varConst -> INT push_int_operand .)
    GREATEROREQUAL  reduce using rule 71 (varConst -> INT push_int_operand .)
    AND             reduce using rule 71 (varConst -> INT push_int_operand .)
    OR              reduce using rule 71 (varConst -> INT push_int_operand .)
    RBRACKET        reduce using rule 71 (varConst -> INT push_int_operand .)
    COMMA           reduce using rule 71 (varConst -> INT push_int_operand .)
    RPAREN          reduce using rule 71 (varConst -> INT push_int_operand .)
    SEMICOLON       reduce using rule 71 (varConst -> INT push_int_operand .)


state 95

    (70) varConst -> FLOAT push_float_operand .

    TIMES           reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    DEVIDE          reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    PLUS            reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    MINUS           reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    LESSER          reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    GREATER         reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    EQUAL           reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    NOTEQUAL        reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    LESSEROREQUAL   reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    GREATEROREQUAL  reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    AND             reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    OR              reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    RBRACKET        reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    COMMA           reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    RPAREN          reduce using rule 70 (varConst -> FLOAT push_float_operand .)
    SEMICOLON       reduce using rule 70 (varConst -> FLOAT push_float_operand .)


state 96

    (129) drawcurve -> DRAWCURVE LPAREN . sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 124
    empty                          shift and go to state 39

state 97

    (52) relationaloperators -> AND .

    LPAREN          reduce using rule 52 (relationaloperators -> AND .)
    ID              reduce using rule 52 (relationaloperators -> AND .)
    FLOAT           reduce using rule 52 (relationaloperators -> AND .)
    INT             reduce using rule 52 (relationaloperators -> AND .)
    STRING          reduce using rule 52 (relationaloperators -> AND .)
    TRUE            reduce using rule 52 (relationaloperators -> AND .)
    FALSE           reduce using rule 52 (relationaloperators -> AND .)
    DRAWLINE        reduce using rule 52 (relationaloperators -> AND .)
    DRAWSQUARE      reduce using rule 52 (relationaloperators -> AND .)
    DRAWTRIANGLE    reduce using rule 52 (relationaloperators -> AND .)
    DRAWCIRCLE      reduce using rule 52 (relationaloperators -> AND .)
    DRAWCURVE       reduce using rule 52 (relationaloperators -> AND .)
    DRAWPOLYGON     reduce using rule 52 (relationaloperators -> AND .)


state 98

    (44) expression -> expression relationaloperators . push_operator exp do_relational_operation
    (37) push_operator -> .

    LPAREN          reduce using rule 37 (push_operator -> .)
    ID              reduce using rule 37 (push_operator -> .)
    FLOAT           reduce using rule 37 (push_operator -> .)
    INT             reduce using rule 37 (push_operator -> .)
    STRING          reduce using rule 37 (push_operator -> .)
    TRUE            reduce using rule 37 (push_operator -> .)
    FALSE           reduce using rule 37 (push_operator -> .)
    DRAWLINE        reduce using rule 37 (push_operator -> .)
    DRAWSQUARE      reduce using rule 37 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 37 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 37 (push_operator -> .)
    DRAWCURVE       reduce using rule 37 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 37 (push_operator -> .)

    push_operator                  shift and go to state 125

state 99

    (40) sexpression -> negation expression do_not_operation .

    COMMA           reduce using rule 40 (sexpression -> negation expression do_not_operation .)
    RBRACKET        reduce using rule 40 (sexpression -> negation expression do_not_operation .)
    RPAREN          reduce using rule 40 (sexpression -> negation expression do_not_operation .)
    SEMICOLON       reduce using rule 40 (sexpression -> negation expression do_not_operation .)


state 100

    (47) relationaloperators -> GREATER .

    LPAREN          reduce using rule 47 (relationaloperators -> GREATER .)
    ID              reduce using rule 47 (relationaloperators -> GREATER .)
    FLOAT           reduce using rule 47 (relationaloperators -> GREATER .)
    INT             reduce using rule 47 (relationaloperators -> GREATER .)
    STRING          reduce using rule 47 (relationaloperators -> GREATER .)
    TRUE            reduce using rule 47 (relationaloperators -> GREATER .)
    FALSE           reduce using rule 47 (relationaloperators -> GREATER .)
    DRAWLINE        reduce using rule 47 (relationaloperators -> GREATER .)
    DRAWSQUARE      reduce using rule 47 (relationaloperators -> GREATER .)
    DRAWTRIANGLE    reduce using rule 47 (relationaloperators -> GREATER .)
    DRAWCIRCLE      reduce using rule 47 (relationaloperators -> GREATER .)
    DRAWCURVE       reduce using rule 47 (relationaloperators -> GREATER .)
    DRAWPOLYGON     reduce using rule 47 (relationaloperators -> GREATER .)


state 101

    (49) relationaloperators -> NOTEQUAL .

    LPAREN          reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    ID              reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    FLOAT           reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    INT             reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    STRING          reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    TRUE            reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    FALSE           reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    DRAWLINE        reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    DRAWSQUARE      reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    DRAWTRIANGLE    reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    DRAWCIRCLE      reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    DRAWCURVE       reduce using rule 49 (relationaloperators -> NOTEQUAL .)
    DRAWPOLYGON     reduce using rule 49 (relationaloperators -> NOTEQUAL .)


state 102

    (50) relationaloperators -> LESSEROREQUAL .

    LPAREN          reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    ID              reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    FLOAT           reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    INT             reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    STRING          reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    TRUE            reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    FALSE           reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    DRAWLINE        reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    DRAWSQUARE      reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    DRAWTRIANGLE    reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    DRAWCIRCLE      reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    DRAWCURVE       reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)
    DRAWPOLYGON     reduce using rule 50 (relationaloperators -> LESSEROREQUAL .)


state 103

    (48) relationaloperators -> EQUAL .

    LPAREN          reduce using rule 48 (relationaloperators -> EQUAL .)
    ID              reduce using rule 48 (relationaloperators -> EQUAL .)
    FLOAT           reduce using rule 48 (relationaloperators -> EQUAL .)
    INT             reduce using rule 48 (relationaloperators -> EQUAL .)
    STRING          reduce using rule 48 (relationaloperators -> EQUAL .)
    TRUE            reduce using rule 48 (relationaloperators -> EQUAL .)
    FALSE           reduce using rule 48 (relationaloperators -> EQUAL .)
    DRAWLINE        reduce using rule 48 (relationaloperators -> EQUAL .)
    DRAWSQUARE      reduce using rule 48 (relationaloperators -> EQUAL .)
    DRAWTRIANGLE    reduce using rule 48 (relationaloperators -> EQUAL .)
    DRAWCIRCLE      reduce using rule 48 (relationaloperators -> EQUAL .)
    DRAWCURVE       reduce using rule 48 (relationaloperators -> EQUAL .)
    DRAWPOLYGON     reduce using rule 48 (relationaloperators -> EQUAL .)


state 104

    (46) relationaloperators -> LESSER .

    LPAREN          reduce using rule 46 (relationaloperators -> LESSER .)
    ID              reduce using rule 46 (relationaloperators -> LESSER .)
    FLOAT           reduce using rule 46 (relationaloperators -> LESSER .)
    INT             reduce using rule 46 (relationaloperators -> LESSER .)
    STRING          reduce using rule 46 (relationaloperators -> LESSER .)
    TRUE            reduce using rule 46 (relationaloperators -> LESSER .)
    FALSE           reduce using rule 46 (relationaloperators -> LESSER .)
    DRAWLINE        reduce using rule 46 (relationaloperators -> LESSER .)
    DRAWSQUARE      reduce using rule 46 (relationaloperators -> LESSER .)
    DRAWTRIANGLE    reduce using rule 46 (relationaloperators -> LESSER .)
    DRAWCIRCLE      reduce using rule 46 (relationaloperators -> LESSER .)
    DRAWCURVE       reduce using rule 46 (relationaloperators -> LESSER .)
    DRAWPOLYGON     reduce using rule 46 (relationaloperators -> LESSER .)


state 105

    (51) relationaloperators -> GREATEROREQUAL .

    LPAREN          reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    ID              reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    FLOAT           reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    INT             reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    STRING          reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    TRUE            reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    FALSE           reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    DRAWLINE        reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    DRAWSQUARE      reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    DRAWTRIANGLE    reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    DRAWCIRCLE      reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    DRAWCURVE       reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)
    DRAWPOLYGON     reduce using rule 51 (relationaloperators -> GREATEROREQUAL .)


state 106

    (53) relationaloperators -> OR .

    LPAREN          reduce using rule 53 (relationaloperators -> OR .)
    ID              reduce using rule 53 (relationaloperators -> OR .)
    FLOAT           reduce using rule 53 (relationaloperators -> OR .)
    INT             reduce using rule 53 (relationaloperators -> OR .)
    STRING          reduce using rule 53 (relationaloperators -> OR .)
    TRUE            reduce using rule 53 (relationaloperators -> OR .)
    FALSE           reduce using rule 53 (relationaloperators -> OR .)
    DRAWLINE        reduce using rule 53 (relationaloperators -> OR .)
    DRAWSQUARE      reduce using rule 53 (relationaloperators -> OR .)
    DRAWTRIANGLE    reduce using rule 53 (relationaloperators -> OR .)
    DRAWCIRCLE      reduce using rule 53 (relationaloperators -> OR .)
    DRAWCURVE       reduce using rule 53 (relationaloperators -> OR .)
    DRAWPOLYGON     reduce using rule 53 (relationaloperators -> OR .)


state 107

    (27) array_declaration -> LBRACKET dimen_variable sexpression calculate_dimen RBRACKET .

    SEMICOLON       reduce using rule 27 (array_declaration -> LBRACKET dimen_variable sexpression calculate_dimen RBRACKET .)


state 108

    (8) block -> LBRACE . blockprima RBRACE
    (9) blockprima -> . statute blockprima
    (10) blockprima -> . empty
    (11) statute -> . assignment
    (12) statute -> . condition
    (13) statute -> . write
    (14) statute -> . read
    (15) statute -> . cycle
    (16) statute -> . functioncall SEMICOLON
    (17) statute -> . predefined
    (18) statute -> . return
    (133) empty -> .
    (35) assignment -> . ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON
    (19) condition -> . IF LPAREN sexpression RPAREN do_condition_operation block else
    (108) write -> . PRINT LPAREN sexpression RPAREN SEMICOLON
    (109) read -> . ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON
    (110) cycle -> . WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (86) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (119) predefined -> . drawline
    (120) predefined -> . drawsquare
    (121) predefined -> . drawtriangle
    (122) predefined -> . drawcircle
    (123) predefined -> . drawcurve
    (124) predefined -> . drawpolygon
    (102) return -> . RETURN sexpression SEMICOLON
    (125) drawline -> . DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (126) drawsquare -> . DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (127) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (128) drawcircle -> . DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (129) drawcurve -> . DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (130) drawpolygon -> . DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    RBRACE          reduce using rule 133 (empty -> .)
    ID              shift and go to state 137
    IF              shift and go to state 139
    PRINT           shift and go to state 128
    WHILE           shift and go to state 127
    RETURN          shift and go to state 126
    DRAWLINE        shift and go to state 50
    DRAWSQUARE      shift and go to state 62
    DRAWTRIANGLE    shift and go to state 56
    DRAWCIRCLE      shift and go to state 53
    DRAWCURVE       shift and go to state 69
    DRAWPOLYGON     shift and go to state 66

    drawtriangle                   shift and go to state 45
    drawcurve                      shift and go to state 47
    predefined                     shift and go to state 129
    blockprima                     shift and go to state 130
    drawline                       shift and go to state 54
    write                          shift and go to state 131
    empty                          shift and go to state 133
    return                         shift and go to state 134
    drawpolygon                    shift and go to state 61
    read                           shift and go to state 135
    assignment                     shift and go to state 136
    condition                      shift and go to state 138
    cycle                          shift and go to state 132
    statute                        shift and go to state 140
    drawcircle                     shift and go to state 59
    drawsquare                     shift and go to state 48
    functioncall                   shift and go to state 141

state 109

    (4) main -> INTTYPE MAIN change_to_global LPAREN RPAREN add_jump_to_main block .

    $end            reduce using rule 4 (main -> INTTYPE MAIN change_to_global LPAREN RPAREN add_jump_to_main block .)


state 110

    (103) parameter -> type ID store_parameter . array parameterprima
    (76) array -> . LBRACKET access_dimen_var sexpression validate_index RBRACKET
    (77) array -> . empty
    (133) empty -> .

    LBRACKET        shift and go to state 119
    COMMA           reduce using rule 133 (empty -> .)
    RPAREN          reduce using rule 133 (empty -> .)

    array                          shift and go to state 142
    empty                          shift and go to state 121

state 111

    (95) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars . add_func_quad_start block end_process function
    (99) add_func_quad_start -> .

    LBRACE          reduce using rule 99 (add_func_quad_start -> .)

    add_func_quad_start            shift and go to state 143

state 112

    (125) drawline -> DRAWLINE LPAREN sexpression . store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 144

state 113

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression . store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 145

state 114

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression . store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 146

state 115

    (55) exp -> exp mathoperators1 push_operator . term do_math_operation1
    (60) term -> . term mathoperators2 push_operator factor do_math_operation2
    (61) term -> . factor
    (65) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (66) factor -> . varConst
    (69) varConst -> . ID push_id_operand array
    (70) varConst -> . FLOAT push_float_operand
    (71) varConst -> . INT push_int_operand
    (72) varConst -> . bool push_bool_operand
    (73) varConst -> . STRING push_string_operand
    (74) varConst -> . predefined
    (75) varConst -> . functioncall
    (80) bool -> . TRUE
    (81) bool -> . FALSE
    (119) predefined -> . drawline
    (120) predefined -> . drawsquare
    (121) predefined -> . drawtriangle
    (122) predefined -> . drawcircle
    (123) predefined -> . drawcurve
    (124) predefined -> . drawpolygon
    (86) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (125) drawline -> . DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (126) drawsquare -> . DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (127) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (128) drawcircle -> . DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (129) drawcurve -> . DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (130) drawpolygon -> . DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 63
    ID              shift and go to state 64
    FLOAT           shift and go to state 68
    INT             shift and go to state 67
    STRING          shift and go to state 51
    TRUE            shift and go to state 49
    FALSE           shift and go to state 55
    DRAWLINE        shift and go to state 50
    DRAWSQUARE      shift and go to state 62
    DRAWTRIANGLE    shift and go to state 56
    DRAWCIRCLE      shift and go to state 53
    DRAWCURVE       shift and go to state 69
    DRAWPOLYGON     shift and go to state 66

    drawtriangle                   shift and go to state 45
    varConst                       shift and go to state 46
    drawcurve                      shift and go to state 47
    predefined                     shift and go to state 52
    drawline                       shift and go to state 54
    bool                           shift and go to state 57
    factor                         shift and go to state 58
    drawcircle                     shift and go to state 59
    drawpolygon                    shift and go to state 61
    term                           shift and go to state 147
    drawsquare                     shift and go to state 48
    functioncall                   shift and go to state 70

state 116

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression . store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 148

state 117

    (65) factor -> LPAREN push_false_bottom sexpression . RPAREN pop_false_bottom

    RPAREN          shift and go to state 149


state 118

    (86) functioncall -> ID check_function_existance LPAREN . generate_era funcargum RPAREN validate_arguments
    (88) generate_era -> .

    NOT             reduce using rule 88 (generate_era -> .)
    RPAREN          reduce using rule 88 (generate_era -> .)
    LPAREN          reduce using rule 88 (generate_era -> .)
    ID              reduce using rule 88 (generate_era -> .)
    FLOAT           reduce using rule 88 (generate_era -> .)
    INT             reduce using rule 88 (generate_era -> .)
    STRING          reduce using rule 88 (generate_era -> .)
    TRUE            reduce using rule 88 (generate_era -> .)
    FALSE           reduce using rule 88 (generate_era -> .)
    DRAWLINE        reduce using rule 88 (generate_era -> .)
    DRAWSQUARE      reduce using rule 88 (generate_era -> .)
    DRAWTRIANGLE    reduce using rule 88 (generate_era -> .)
    DRAWCIRCLE      reduce using rule 88 (generate_era -> .)
    DRAWCURVE       reduce using rule 88 (generate_era -> .)
    DRAWPOLYGON     reduce using rule 88 (generate_era -> .)

    generate_era                   shift and go to state 150

state 119

    (76) array -> LBRACKET . access_dimen_var sexpression validate_index RBRACKET
    (79) access_dimen_var -> .

    NOT             reduce using rule 79 (access_dimen_var -> .)
    LPAREN          reduce using rule 79 (access_dimen_var -> .)
    ID              reduce using rule 79 (access_dimen_var -> .)
    FLOAT           reduce using rule 79 (access_dimen_var -> .)
    INT             reduce using rule 79 (access_dimen_var -> .)
    STRING          reduce using rule 79 (access_dimen_var -> .)
    TRUE            reduce using rule 79 (access_dimen_var -> .)
    FALSE           reduce using rule 79 (access_dimen_var -> .)
    DRAWLINE        reduce using rule 79 (access_dimen_var -> .)
    DRAWSQUARE      reduce using rule 79 (access_dimen_var -> .)
    DRAWTRIANGLE    reduce using rule 79 (access_dimen_var -> .)
    DRAWCIRCLE      reduce using rule 79 (access_dimen_var -> .)
    DRAWCURVE       reduce using rule 79 (access_dimen_var -> .)
    DRAWPOLYGON     reduce using rule 79 (access_dimen_var -> .)

    access_dimen_var               shift and go to state 151

state 120

    (69) varConst -> ID push_id_operand array .

    TIMES           reduce using rule 69 (varConst -> ID push_id_operand array .)
    DEVIDE          reduce using rule 69 (varConst -> ID push_id_operand array .)
    PLUS            reduce using rule 69 (varConst -> ID push_id_operand array .)
    MINUS           reduce using rule 69 (varConst -> ID push_id_operand array .)
    LESSER          reduce using rule 69 (varConst -> ID push_id_operand array .)
    GREATER         reduce using rule 69 (varConst -> ID push_id_operand array .)
    EQUAL           reduce using rule 69 (varConst -> ID push_id_operand array .)
    NOTEQUAL        reduce using rule 69 (varConst -> ID push_id_operand array .)
    LESSEROREQUAL   reduce using rule 69 (varConst -> ID push_id_operand array .)
    GREATEROREQUAL  reduce using rule 69 (varConst -> ID push_id_operand array .)
    AND             reduce using rule 69 (varConst -> ID push_id_operand array .)
    OR              reduce using rule 69 (varConst -> ID push_id_operand array .)
    RBRACKET        reduce using rule 69 (varConst -> ID push_id_operand array .)
    COMMA           reduce using rule 69 (varConst -> ID push_id_operand array .)
    RPAREN          reduce using rule 69 (varConst -> ID push_id_operand array .)
    SEMICOLON       reduce using rule 69 (varConst -> ID push_id_operand array .)


state 121

    (77) array -> empty .

    TIMES           reduce using rule 77 (array -> empty .)
    DEVIDE          reduce using rule 77 (array -> empty .)
    PLUS            reduce using rule 77 (array -> empty .)
    MINUS           reduce using rule 77 (array -> empty .)
    LESSER          reduce using rule 77 (array -> empty .)
    GREATER         reduce using rule 77 (array -> empty .)
    EQUAL           reduce using rule 77 (array -> empty .)
    NOTEQUAL        reduce using rule 77 (array -> empty .)
    LESSEROREQUAL   reduce using rule 77 (array -> empty .)
    GREATEROREQUAL  reduce using rule 77 (array -> empty .)
    AND             reduce using rule 77 (array -> empty .)
    OR              reduce using rule 77 (array -> empty .)
    RBRACKET        reduce using rule 77 (array -> empty .)
    COMMA           reduce using rule 77 (array -> empty .)
    RPAREN          reduce using rule 77 (array -> empty .)
    SEMICOLON       reduce using rule 77 (array -> empty .)
    ASSIGN          reduce using rule 77 (array -> empty .)


state 122

    (60) term -> term mathoperators2 push_operator . factor do_math_operation2
    (65) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (66) factor -> . varConst
    (69) varConst -> . ID push_id_operand array
    (70) varConst -> . FLOAT push_float_operand
    (71) varConst -> . INT push_int_operand
    (72) varConst -> . bool push_bool_operand
    (73) varConst -> . STRING push_string_operand
    (74) varConst -> . predefined
    (75) varConst -> . functioncall
    (80) bool -> . TRUE
    (81) bool -> . FALSE
    (119) predefined -> . drawline
    (120) predefined -> . drawsquare
    (121) predefined -> . drawtriangle
    (122) predefined -> . drawcircle
    (123) predefined -> . drawcurve
    (124) predefined -> . drawpolygon
    (86) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (125) drawline -> . DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (126) drawsquare -> . DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (127) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (128) drawcircle -> . DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (129) drawcurve -> . DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (130) drawpolygon -> . DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 63
    ID              shift and go to state 64
    FLOAT           shift and go to state 68
    INT             shift and go to state 67
    STRING          shift and go to state 51
    TRUE            shift and go to state 49
    FALSE           shift and go to state 55
    DRAWLINE        shift and go to state 50
    DRAWSQUARE      shift and go to state 62
    DRAWTRIANGLE    shift and go to state 56
    DRAWCIRCLE      shift and go to state 53
    DRAWCURVE       shift and go to state 69
    DRAWPOLYGON     shift and go to state 66

    drawtriangle                   shift and go to state 45
    varConst                       shift and go to state 46
    drawcurve                      shift and go to state 47
    predefined                     shift and go to state 52
    drawline                       shift and go to state 54
    bool                           shift and go to state 57
    factor                         shift and go to state 152
    functioncall                   shift and go to state 70
    drawpolygon                    shift and go to state 61
    drawsquare                     shift and go to state 48
    drawcircle                     shift and go to state 59

state 123

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression . store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 153

state 124

    (129) drawcurve -> DRAWCURVE LPAREN sexpression . store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 154

state 125

    (44) expression -> expression relationaloperators push_operator . exp do_relational_operation
    (55) exp -> . exp mathoperators1 push_operator term do_math_operation1
    (56) exp -> . term
    (60) term -> . term mathoperators2 push_operator factor do_math_operation2
    (61) term -> . factor
    (65) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (66) factor -> . varConst
    (69) varConst -> . ID push_id_operand array
    (70) varConst -> . FLOAT push_float_operand
    (71) varConst -> . INT push_int_operand
    (72) varConst -> . bool push_bool_operand
    (73) varConst -> . STRING push_string_operand
    (74) varConst -> . predefined
    (75) varConst -> . functioncall
    (80) bool -> . TRUE
    (81) bool -> . FALSE
    (119) predefined -> . drawline
    (120) predefined -> . drawsquare
    (121) predefined -> . drawtriangle
    (122) predefined -> . drawcircle
    (123) predefined -> . drawcurve
    (124) predefined -> . drawpolygon
    (86) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (125) drawline -> . DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (126) drawsquare -> . DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (127) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (128) drawcircle -> . DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (129) drawcurve -> . DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (130) drawpolygon -> . DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    LPAREN          shift and go to state 63
    ID              shift and go to state 64
    FLOAT           shift and go to state 68
    INT             shift and go to state 67
    STRING          shift and go to state 51
    TRUE            shift and go to state 49
    FALSE           shift and go to state 55
    DRAWLINE        shift and go to state 50
    DRAWSQUARE      shift and go to state 62
    DRAWTRIANGLE    shift and go to state 56
    DRAWCIRCLE      shift and go to state 53
    DRAWCURVE       shift and go to state 69
    DRAWPOLYGON     shift and go to state 66

    drawtriangle                   shift and go to state 45
    varConst                       shift and go to state 46
    drawcurve                      shift and go to state 47
    predefined                     shift and go to state 52
    drawline                       shift and go to state 54
    bool                           shift and go to state 57
    factor                         shift and go to state 58
    drawcircle                     shift and go to state 59
    exp                            shift and go to state 155
    drawpolygon                    shift and go to state 61
    term                           shift and go to state 65
    drawsquare                     shift and go to state 48
    functioncall                   shift and go to state 70

state 126

    (102) return -> RETURN . sexpression SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 156
    empty                          shift and go to state 39

state 127

    (110) cycle -> WHILE . push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (111) push_cycle_jump -> .

    LPAREN          reduce using rule 111 (push_cycle_jump -> .)

    push_cycle_jump                shift and go to state 157

state 128

    (108) write -> PRINT . LPAREN sexpression RPAREN SEMICOLON

    LPAREN          shift and go to state 158


state 129

    (17) statute -> predefined .

    ID              reduce using rule 17 (statute -> predefined .)
    IF              reduce using rule 17 (statute -> predefined .)
    PRINT           reduce using rule 17 (statute -> predefined .)
    WHILE           reduce using rule 17 (statute -> predefined .)
    RETURN          reduce using rule 17 (statute -> predefined .)
    DRAWLINE        reduce using rule 17 (statute -> predefined .)
    DRAWSQUARE      reduce using rule 17 (statute -> predefined .)
    DRAWTRIANGLE    reduce using rule 17 (statute -> predefined .)
    DRAWCIRCLE      reduce using rule 17 (statute -> predefined .)
    DRAWCURVE       reduce using rule 17 (statute -> predefined .)
    DRAWPOLYGON     reduce using rule 17 (statute -> predefined .)
    RBRACE          reduce using rule 17 (statute -> predefined .)


state 130

    (8) block -> LBRACE blockprima . RBRACE

    RBRACE          shift and go to state 159


state 131

    (13) statute -> write .

    ID              reduce using rule 13 (statute -> write .)
    IF              reduce using rule 13 (statute -> write .)
    PRINT           reduce using rule 13 (statute -> write .)
    WHILE           reduce using rule 13 (statute -> write .)
    RETURN          reduce using rule 13 (statute -> write .)
    DRAWLINE        reduce using rule 13 (statute -> write .)
    DRAWSQUARE      reduce using rule 13 (statute -> write .)
    DRAWTRIANGLE    reduce using rule 13 (statute -> write .)
    DRAWCIRCLE      reduce using rule 13 (statute -> write .)
    DRAWCURVE       reduce using rule 13 (statute -> write .)
    DRAWPOLYGON     reduce using rule 13 (statute -> write .)
    RBRACE          reduce using rule 13 (statute -> write .)


state 132

    (15) statute -> cycle .

    ID              reduce using rule 15 (statute -> cycle .)
    IF              reduce using rule 15 (statute -> cycle .)
    PRINT           reduce using rule 15 (statute -> cycle .)
    WHILE           reduce using rule 15 (statute -> cycle .)
    RETURN          reduce using rule 15 (statute -> cycle .)
    DRAWLINE        reduce using rule 15 (statute -> cycle .)
    DRAWSQUARE      reduce using rule 15 (statute -> cycle .)
    DRAWTRIANGLE    reduce using rule 15 (statute -> cycle .)
    DRAWCIRCLE      reduce using rule 15 (statute -> cycle .)
    DRAWCURVE       reduce using rule 15 (statute -> cycle .)
    DRAWPOLYGON     reduce using rule 15 (statute -> cycle .)
    RBRACE          reduce using rule 15 (statute -> cycle .)


state 133

    (10) blockprima -> empty .

    RBRACE          reduce using rule 10 (blockprima -> empty .)


state 134

    (18) statute -> return .

    ID              reduce using rule 18 (statute -> return .)
    IF              reduce using rule 18 (statute -> return .)
    PRINT           reduce using rule 18 (statute -> return .)
    WHILE           reduce using rule 18 (statute -> return .)
    RETURN          reduce using rule 18 (statute -> return .)
    DRAWLINE        reduce using rule 18 (statute -> return .)
    DRAWSQUARE      reduce using rule 18 (statute -> return .)
    DRAWTRIANGLE    reduce using rule 18 (statute -> return .)
    DRAWCIRCLE      reduce using rule 18 (statute -> return .)
    DRAWCURVE       reduce using rule 18 (statute -> return .)
    DRAWPOLYGON     reduce using rule 18 (statute -> return .)
    RBRACE          reduce using rule 18 (statute -> return .)


state 135

    (14) statute -> read .

    ID              reduce using rule 14 (statute -> read .)
    IF              reduce using rule 14 (statute -> read .)
    PRINT           reduce using rule 14 (statute -> read .)
    WHILE           reduce using rule 14 (statute -> read .)
    RETURN          reduce using rule 14 (statute -> read .)
    DRAWLINE        reduce using rule 14 (statute -> read .)
    DRAWSQUARE      reduce using rule 14 (statute -> read .)
    DRAWTRIANGLE    reduce using rule 14 (statute -> read .)
    DRAWCIRCLE      reduce using rule 14 (statute -> read .)
    DRAWCURVE       reduce using rule 14 (statute -> read .)
    DRAWPOLYGON     reduce using rule 14 (statute -> read .)
    RBRACE          reduce using rule 14 (statute -> read .)


state 136

    (11) statute -> assignment .

    ID              reduce using rule 11 (statute -> assignment .)
    IF              reduce using rule 11 (statute -> assignment .)
    PRINT           reduce using rule 11 (statute -> assignment .)
    WHILE           reduce using rule 11 (statute -> assignment .)
    RETURN          reduce using rule 11 (statute -> assignment .)
    DRAWLINE        reduce using rule 11 (statute -> assignment .)
    DRAWSQUARE      reduce using rule 11 (statute -> assignment .)
    DRAWTRIANGLE    reduce using rule 11 (statute -> assignment .)
    DRAWCIRCLE      reduce using rule 11 (statute -> assignment .)
    DRAWCURVE       reduce using rule 11 (statute -> assignment .)
    DRAWPOLYGON     reduce using rule 11 (statute -> assignment .)
    RBRACE          reduce using rule 11 (statute -> assignment .)


state 137

    (35) assignment -> ID . push_id_operand array ASSIGN push_operator sexpression SEMICOLON
    (109) read -> ID . push_id_operand array ASSIGN push_operator INPUT SEMICOLON
    (86) functioncall -> ID . check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (36) push_id_operand -> .
    (87) check_function_existance -> .

    LBRACKET        reduce using rule 36 (push_id_operand -> .)
    ASSIGN          reduce using rule 36 (push_id_operand -> .)
    LPAREN          reduce using rule 87 (check_function_existance -> .)

    check_function_existance       shift and go to state 88
    push_id_operand                shift and go to state 160

state 138

    (12) statute -> condition .

    ID              reduce using rule 12 (statute -> condition .)
    IF              reduce using rule 12 (statute -> condition .)
    PRINT           reduce using rule 12 (statute -> condition .)
    WHILE           reduce using rule 12 (statute -> condition .)
    RETURN          reduce using rule 12 (statute -> condition .)
    DRAWLINE        reduce using rule 12 (statute -> condition .)
    DRAWSQUARE      reduce using rule 12 (statute -> condition .)
    DRAWTRIANGLE    reduce using rule 12 (statute -> condition .)
    DRAWCIRCLE      reduce using rule 12 (statute -> condition .)
    DRAWCURVE       reduce using rule 12 (statute -> condition .)
    DRAWPOLYGON     reduce using rule 12 (statute -> condition .)
    RBRACE          reduce using rule 12 (statute -> condition .)


state 139

    (19) condition -> IF . LPAREN sexpression RPAREN do_condition_operation block else

    LPAREN          shift and go to state 161


state 140

    (9) blockprima -> statute . blockprima
    (9) blockprima -> . statute blockprima
    (10) blockprima -> . empty
    (11) statute -> . assignment
    (12) statute -> . condition
    (13) statute -> . write
    (14) statute -> . read
    (15) statute -> . cycle
    (16) statute -> . functioncall SEMICOLON
    (17) statute -> . predefined
    (18) statute -> . return
    (133) empty -> .
    (35) assignment -> . ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON
    (19) condition -> . IF LPAREN sexpression RPAREN do_condition_operation block else
    (108) write -> . PRINT LPAREN sexpression RPAREN SEMICOLON
    (109) read -> . ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON
    (110) cycle -> . WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (86) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (119) predefined -> . drawline
    (120) predefined -> . drawsquare
    (121) predefined -> . drawtriangle
    (122) predefined -> . drawcircle
    (123) predefined -> . drawcurve
    (124) predefined -> . drawpolygon
    (102) return -> . RETURN sexpression SEMICOLON
    (125) drawline -> . DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (126) drawsquare -> . DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (127) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (128) drawcircle -> . DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (129) drawcurve -> . DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (130) drawpolygon -> . DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    RBRACE          reduce using rule 133 (empty -> .)
    ID              shift and go to state 137
    IF              shift and go to state 139
    PRINT           shift and go to state 128
    WHILE           shift and go to state 127
    RETURN          shift and go to state 126
    DRAWLINE        shift and go to state 50
    DRAWSQUARE      shift and go to state 62
    DRAWTRIANGLE    shift and go to state 56
    DRAWCIRCLE      shift and go to state 53
    DRAWCURVE       shift and go to state 69
    DRAWPOLYGON     shift and go to state 66

    drawtriangle                   shift and go to state 45
    drawcurve                      shift and go to state 47
    predefined                     shift and go to state 129
    blockprima                     shift and go to state 162
    drawline                       shift and go to state 54
    write                          shift and go to state 131
    empty                          shift and go to state 133
    return                         shift and go to state 134
    drawpolygon                    shift and go to state 61
    read                           shift and go to state 135
    assignment                     shift and go to state 136
    condition                      shift and go to state 138
    cycle                          shift and go to state 132
    statute                        shift and go to state 140
    drawcircle                     shift and go to state 59
    drawsquare                     shift and go to state 48
    functioncall                   shift and go to state 141

state 141

    (16) statute -> functioncall . SEMICOLON

    SEMICOLON       shift and go to state 163


state 142

    (103) parameter -> type ID store_parameter array . parameterprima
    (105) parameterprima -> . COMMA type ID store_parameter parameterprima
    (106) parameterprima -> . empty
    (133) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 133 (empty -> .)

    parameterprima                 shift and go to state 165
    empty                          shift and go to state 166

state 143

    (95) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start . block end_process function
    (8) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 108

    block                          shift and go to state 167

state 144

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument . COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 168


state 145

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument . COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 169


state 146

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument . COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 170


state 147

    (55) exp -> exp mathoperators1 push_operator term . do_math_operation1
    (60) term -> term . mathoperators2 push_operator factor do_math_operation2
    (59) do_math_operation1 -> .
    (62) mathoperators2 -> . TIMES
    (63) mathoperators2 -> . DEVIDE

    PLUS            reduce using rule 59 (do_math_operation1 -> .)
    MINUS           reduce using rule 59 (do_math_operation1 -> .)
    LESSER          reduce using rule 59 (do_math_operation1 -> .)
    GREATER         reduce using rule 59 (do_math_operation1 -> .)
    EQUAL           reduce using rule 59 (do_math_operation1 -> .)
    NOTEQUAL        reduce using rule 59 (do_math_operation1 -> .)
    LESSEROREQUAL   reduce using rule 59 (do_math_operation1 -> .)
    GREATEROREQUAL  reduce using rule 59 (do_math_operation1 -> .)
    AND             reduce using rule 59 (do_math_operation1 -> .)
    OR              reduce using rule 59 (do_math_operation1 -> .)
    RBRACKET        reduce using rule 59 (do_math_operation1 -> .)
    COMMA           reduce using rule 59 (do_math_operation1 -> .)
    RPAREN          reduce using rule 59 (do_math_operation1 -> .)
    SEMICOLON       reduce using rule 59 (do_math_operation1 -> .)
    TIMES           shift and go to state 91
    DEVIDE          shift and go to state 90

    do_math_operation1             shift and go to state 171
    mathoperators2                 shift and go to state 92

state 148

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument . COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 172


state 149

    (65) factor -> LPAREN push_false_bottom sexpression RPAREN . pop_false_bottom
    (68) pop_false_bottom -> .

    TIMES           reduce using rule 68 (pop_false_bottom -> .)
    DEVIDE          reduce using rule 68 (pop_false_bottom -> .)
    PLUS            reduce using rule 68 (pop_false_bottom -> .)
    MINUS           reduce using rule 68 (pop_false_bottom -> .)
    LESSER          reduce using rule 68 (pop_false_bottom -> .)
    GREATER         reduce using rule 68 (pop_false_bottom -> .)
    EQUAL           reduce using rule 68 (pop_false_bottom -> .)
    NOTEQUAL        reduce using rule 68 (pop_false_bottom -> .)
    LESSEROREQUAL   reduce using rule 68 (pop_false_bottom -> .)
    GREATEROREQUAL  reduce using rule 68 (pop_false_bottom -> .)
    AND             reduce using rule 68 (pop_false_bottom -> .)
    OR              reduce using rule 68 (pop_false_bottom -> .)
    RBRACKET        reduce using rule 68 (pop_false_bottom -> .)
    COMMA           reduce using rule 68 (pop_false_bottom -> .)
    RPAREN          reduce using rule 68 (pop_false_bottom -> .)
    SEMICOLON       reduce using rule 68 (pop_false_bottom -> .)

    pop_false_bottom               shift and go to state 173

state 150

    (86) functioncall -> ID check_function_existance LPAREN generate_era . funcargum RPAREN validate_arguments
    (90) funcargum -> . sexpression store_argument funcargumprima
    (91) funcargum -> . empty
    (40) sexpression -> . negation expression do_not_operation
    (133) empty -> .
    (41) negation -> . NOT push_operator
    (42) negation -> . empty

    RPAREN          reduce using rule 133 (empty -> .)
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)
    NOT             shift and go to state 38

    negation                       shift and go to state 36
    sexpression                    shift and go to state 174
    funcargum                      shift and go to state 175
    empty                          shift and go to state 176

state 151

    (76) array -> LBRACKET access_dimen_var . sexpression validate_index RBRACKET
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 177
    empty                          shift and go to state 39

state 152

    (60) term -> term mathoperators2 push_operator factor . do_math_operation2
    (64) do_math_operation2 -> .

    TIMES           reduce using rule 64 (do_math_operation2 -> .)
    DEVIDE          reduce using rule 64 (do_math_operation2 -> .)
    PLUS            reduce using rule 64 (do_math_operation2 -> .)
    MINUS           reduce using rule 64 (do_math_operation2 -> .)
    LESSER          reduce using rule 64 (do_math_operation2 -> .)
    GREATER         reduce using rule 64 (do_math_operation2 -> .)
    EQUAL           reduce using rule 64 (do_math_operation2 -> .)
    NOTEQUAL        reduce using rule 64 (do_math_operation2 -> .)
    LESSEROREQUAL   reduce using rule 64 (do_math_operation2 -> .)
    GREATEROREQUAL  reduce using rule 64 (do_math_operation2 -> .)
    AND             reduce using rule 64 (do_math_operation2 -> .)
    OR              reduce using rule 64 (do_math_operation2 -> .)
    RBRACKET        reduce using rule 64 (do_math_operation2 -> .)
    COMMA           reduce using rule 64 (do_math_operation2 -> .)
    RPAREN          reduce using rule 64 (do_math_operation2 -> .)
    SEMICOLON       reduce using rule 64 (do_math_operation2 -> .)

    do_math_operation2             shift and go to state 178

state 153

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument . COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 179


state 154

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument . COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 180


state 155

    (44) expression -> expression relationaloperators push_operator exp . do_relational_operation
    (55) exp -> exp . mathoperators1 push_operator term do_math_operation1
    (54) do_relational_operation -> .
    (57) mathoperators1 -> . PLUS
    (58) mathoperators1 -> . MINUS

    LESSER          reduce using rule 54 (do_relational_operation -> .)
    GREATER         reduce using rule 54 (do_relational_operation -> .)
    EQUAL           reduce using rule 54 (do_relational_operation -> .)
    NOTEQUAL        reduce using rule 54 (do_relational_operation -> .)
    LESSEROREQUAL   reduce using rule 54 (do_relational_operation -> .)
    GREATEROREQUAL  reduce using rule 54 (do_relational_operation -> .)
    AND             reduce using rule 54 (do_relational_operation -> .)
    OR              reduce using rule 54 (do_relational_operation -> .)
    RBRACKET        reduce using rule 54 (do_relational_operation -> .)
    COMMA           reduce using rule 54 (do_relational_operation -> .)
    RPAREN          reduce using rule 54 (do_relational_operation -> .)
    SEMICOLON       reduce using rule 54 (do_relational_operation -> .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 85

    do_relational_operation        shift and go to state 181
    mathoperators1                 shift and go to state 84

state 156

    (102) return -> RETURN sexpression . SEMICOLON

    SEMICOLON       shift and go to state 182


state 157

    (110) cycle -> WHILE push_cycle_jump . LPAREN sexpression RPAREN do_while_operation block

    LPAREN          shift and go to state 183


state 158

    (108) write -> PRINT LPAREN . sexpression RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 184
    empty                          shift and go to state 39

state 159

    (8) block -> LBRACE blockprima RBRACE .

    ELSE            reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    ID              reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    IF              reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    PRINT           reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    WHILE           reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    RETURN          reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    DRAWLINE        reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    DRAWSQUARE      reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    DRAWTRIANGLE    reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    DRAWCIRCLE      reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    DRAWCURVE       reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    DRAWPOLYGON     reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    RBRACE          reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    $end            reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    FUNCTION        reduce using rule 8 (block -> LBRACE blockprima RBRACE .)
    INTTYPE         reduce using rule 8 (block -> LBRACE blockprima RBRACE .)


state 160

    (35) assignment -> ID push_id_operand . array ASSIGN push_operator sexpression SEMICOLON
    (109) read -> ID push_id_operand . array ASSIGN push_operator INPUT SEMICOLON
    (76) array -> . LBRACKET access_dimen_var sexpression validate_index RBRACKET
    (77) array -> . empty
    (133) empty -> .

    LBRACKET        shift and go to state 119
    ASSIGN          reduce using rule 133 (empty -> .)

    array                          shift and go to state 185
    empty                          shift and go to state 121

state 161

    (19) condition -> IF LPAREN . sexpression RPAREN do_condition_operation block else
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 186
    empty                          shift and go to state 39

state 162

    (9) blockprima -> statute blockprima .

    RBRACE          reduce using rule 9 (blockprima -> statute blockprima .)


state 163

    (16) statute -> functioncall SEMICOLON .

    ID              reduce using rule 16 (statute -> functioncall SEMICOLON .)
    IF              reduce using rule 16 (statute -> functioncall SEMICOLON .)
    PRINT           reduce using rule 16 (statute -> functioncall SEMICOLON .)
    WHILE           reduce using rule 16 (statute -> functioncall SEMICOLON .)
    RETURN          reduce using rule 16 (statute -> functioncall SEMICOLON .)
    DRAWLINE        reduce using rule 16 (statute -> functioncall SEMICOLON .)
    DRAWSQUARE      reduce using rule 16 (statute -> functioncall SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 16 (statute -> functioncall SEMICOLON .)
    DRAWCIRCLE      reduce using rule 16 (statute -> functioncall SEMICOLON .)
    DRAWCURVE       reduce using rule 16 (statute -> functioncall SEMICOLON .)
    DRAWPOLYGON     reduce using rule 16 (statute -> functioncall SEMICOLON .)
    RBRACE          reduce using rule 16 (statute -> functioncall SEMICOLON .)


state 164

    (105) parameterprima -> COMMA . type ID store_parameter parameterprima
    (31) type -> . INTTYPE
    (32) type -> . FLOATTYPE
    (33) type -> . STRINGTYPE
    (34) type -> . BOOLTYPE

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    type                           shift and go to state 187

state 165

    (103) parameter -> type ID store_parameter array parameterprima .

    RPAREN          reduce using rule 103 (parameter -> type ID store_parameter array parameterprima .)


state 166

    (106) parameterprima -> empty .

    RPAREN          reduce using rule 106 (parameterprima -> empty .)


state 167

    (95) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start block . end_process function
    (101) end_process -> .

    FUNCTION        reduce using rule 101 (end_process -> .)
    INTTYPE         reduce using rule 101 (end_process -> .)

    end_process                    shift and go to state 188

state 168

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA . sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 189
    empty                          shift and go to state 39

state 169

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA . sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 190
    empty                          shift and go to state 39

state 170

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA . sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 191
    empty                          shift and go to state 39

state 171

    (55) exp -> exp mathoperators1 push_operator term do_math_operation1 .

    PLUS            reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    MINUS           reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    LESSER          reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    GREATER         reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    EQUAL           reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    NOTEQUAL        reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    LESSEROREQUAL   reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    GREATEROREQUAL  reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    AND             reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    OR              reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    RBRACKET        reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    COMMA           reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    RPAREN          reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    SEMICOLON       reduce using rule 55 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)


state 172

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA . sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 192
    empty                          shift and go to state 39

state 173

    (65) factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .

    TIMES           reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    DEVIDE          reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    PLUS            reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    MINUS           reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    LESSER          reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    GREATER         reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    EQUAL           reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    NOTEQUAL        reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    LESSEROREQUAL   reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    GREATEROREQUAL  reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    AND             reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    OR              reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    RBRACKET        reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    COMMA           reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    RPAREN          reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    SEMICOLON       reduce using rule 65 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)


state 174

    (90) funcargum -> sexpression . store_argument funcargumprima
    (94) store_argument -> .

    COMMA           reduce using rule 94 (store_argument -> .)
    RPAREN          reduce using rule 94 (store_argument -> .)

    store_argument                 shift and go to state 193

state 175

    (86) functioncall -> ID check_function_existance LPAREN generate_era funcargum . RPAREN validate_arguments

    RPAREN          shift and go to state 194


state 176

    (91) funcargum -> empty .
    (42) negation -> empty .

    RPAREN          reduce using rule 91 (funcargum -> empty .)
    LPAREN          reduce using rule 42 (negation -> empty .)
    ID              reduce using rule 42 (negation -> empty .)
    FLOAT           reduce using rule 42 (negation -> empty .)
    INT             reduce using rule 42 (negation -> empty .)
    STRING          reduce using rule 42 (negation -> empty .)
    TRUE            reduce using rule 42 (negation -> empty .)
    FALSE           reduce using rule 42 (negation -> empty .)
    DRAWLINE        reduce using rule 42 (negation -> empty .)
    DRAWSQUARE      reduce using rule 42 (negation -> empty .)
    DRAWTRIANGLE    reduce using rule 42 (negation -> empty .)
    DRAWCIRCLE      reduce using rule 42 (negation -> empty .)
    DRAWCURVE       reduce using rule 42 (negation -> empty .)
    DRAWPOLYGON     reduce using rule 42 (negation -> empty .)


state 177

    (76) array -> LBRACKET access_dimen_var sexpression . validate_index RBRACKET
    (78) validate_index -> .

    RBRACKET        reduce using rule 78 (validate_index -> .)

    validate_index                 shift and go to state 195

state 178

    (60) term -> term mathoperators2 push_operator factor do_math_operation2 .

    TIMES           reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    DEVIDE          reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    PLUS            reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    MINUS           reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    LESSER          reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    GREATER         reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    EQUAL           reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    NOTEQUAL        reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    LESSEROREQUAL   reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    GREATEROREQUAL  reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    AND             reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    OR              reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    RBRACKET        reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    COMMA           reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    RPAREN          reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    SEMICOLON       reduce using rule 60 (term -> term mathoperators2 push_operator factor do_math_operation2 .)


state 179

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA . sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 196
    empty                          shift and go to state 39

state 180

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA . sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 197
    empty                          shift and go to state 39

state 181

    (44) expression -> expression relationaloperators push_operator exp do_relational_operation .

    LESSER          reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    GREATER         reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    EQUAL           reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    NOTEQUAL        reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    LESSEROREQUAL   reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    GREATEROREQUAL  reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    AND             reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    OR              reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    RBRACKET        reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    COMMA           reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    RPAREN          reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    SEMICOLON       reduce using rule 44 (expression -> expression relationaloperators push_operator exp do_relational_operation .)


state 182

    (102) return -> RETURN sexpression SEMICOLON .

    ID              reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    IF              reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    PRINT           reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    WHILE           reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    RETURN          reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    DRAWLINE        reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)
    RBRACE          reduce using rule 102 (return -> RETURN sexpression SEMICOLON .)


state 183

    (110) cycle -> WHILE push_cycle_jump LPAREN . sexpression RPAREN do_while_operation block
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 198
    empty                          shift and go to state 39

state 184

    (108) write -> PRINT LPAREN sexpression . RPAREN SEMICOLON

    RPAREN          shift and go to state 199


state 185

    (35) assignment -> ID push_id_operand array . ASSIGN push_operator sexpression SEMICOLON
    (109) read -> ID push_id_operand array . ASSIGN push_operator INPUT SEMICOLON

    ASSIGN          shift and go to state 200


state 186

    (19) condition -> IF LPAREN sexpression . RPAREN do_condition_operation block else

    RPAREN          shift and go to state 201


state 187

    (105) parameterprima -> COMMA type . ID store_parameter parameterprima

    ID              shift and go to state 202


state 188

    (95) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process . function
    (95) function -> . FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process function
    (96) function -> . empty
    (133) empty -> .

    FUNCTION        shift and go to state 11
    INTTYPE         reduce using rule 133 (empty -> .)

    function                       shift and go to state 203
    empty                          shift and go to state 12

state 189

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression . store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 204

state 190

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression . store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 205

state 191

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression . store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 206

state 192

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression . store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 207

state 193

    (90) funcargum -> sexpression store_argument . funcargumprima
    (92) funcargumprima -> . COMMA sexpression store_argument funcargumprima
    (93) funcargumprima -> . empty
    (133) empty -> .

    COMMA           shift and go to state 209
    RPAREN          reduce using rule 133 (empty -> .)

    funcargumprima                 shift and go to state 208
    empty                          shift and go to state 210

state 194

    (86) functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN . validate_arguments
    (89) validate_arguments -> .

    TIMES           reduce using rule 89 (validate_arguments -> .)
    DEVIDE          reduce using rule 89 (validate_arguments -> .)
    PLUS            reduce using rule 89 (validate_arguments -> .)
    MINUS           reduce using rule 89 (validate_arguments -> .)
    LESSER          reduce using rule 89 (validate_arguments -> .)
    GREATER         reduce using rule 89 (validate_arguments -> .)
    EQUAL           reduce using rule 89 (validate_arguments -> .)
    NOTEQUAL        reduce using rule 89 (validate_arguments -> .)
    LESSEROREQUAL   reduce using rule 89 (validate_arguments -> .)
    GREATEROREQUAL  reduce using rule 89 (validate_arguments -> .)
    AND             reduce using rule 89 (validate_arguments -> .)
    OR              reduce using rule 89 (validate_arguments -> .)
    RBRACKET        reduce using rule 89 (validate_arguments -> .)
    COMMA           reduce using rule 89 (validate_arguments -> .)
    RPAREN          reduce using rule 89 (validate_arguments -> .)
    SEMICOLON       reduce using rule 89 (validate_arguments -> .)

    validate_arguments             shift and go to state 211

state 195

    (76) array -> LBRACKET access_dimen_var sexpression validate_index . RBRACKET

    RBRACKET        shift and go to state 212


state 196

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression . store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 213

state 197

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression . store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 214

state 198

    (110) cycle -> WHILE push_cycle_jump LPAREN sexpression . RPAREN do_while_operation block

    RPAREN          shift and go to state 215


state 199

    (108) write -> PRINT LPAREN sexpression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 200

    (35) assignment -> ID push_id_operand array ASSIGN . push_operator sexpression SEMICOLON
    (109) read -> ID push_id_operand array ASSIGN . push_operator INPUT SEMICOLON
    (37) push_operator -> .

    INPUT           reduce using rule 37 (push_operator -> .)
    NOT             reduce using rule 37 (push_operator -> .)
    LPAREN          reduce using rule 37 (push_operator -> .)
    ID              reduce using rule 37 (push_operator -> .)
    FLOAT           reduce using rule 37 (push_operator -> .)
    INT             reduce using rule 37 (push_operator -> .)
    STRING          reduce using rule 37 (push_operator -> .)
    TRUE            reduce using rule 37 (push_operator -> .)
    FALSE           reduce using rule 37 (push_operator -> .)
    DRAWLINE        reduce using rule 37 (push_operator -> .)
    DRAWSQUARE      reduce using rule 37 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 37 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 37 (push_operator -> .)
    DRAWCURVE       reduce using rule 37 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 37 (push_operator -> .)

    push_operator                  shift and go to state 217

state 201

    (19) condition -> IF LPAREN sexpression RPAREN . do_condition_operation block else
    (20) do_condition_operation -> .

    LBRACE          reduce using rule 20 (do_condition_operation -> .)

    do_condition_operation         shift and go to state 218

state 202

    (105) parameterprima -> COMMA type ID . store_parameter parameterprima
    (107) store_parameter -> .

    COMMA           reduce using rule 107 (store_parameter -> .)
    RPAREN          reduce using rule 107 (store_parameter -> .)

    store_parameter                shift and go to state 219

state 203

    (95) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process function .

    INTTYPE         reduce using rule 95 (function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars add_func_quad_start block end_process function .)


state 204

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument . COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 220


state 205

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument . COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 221


state 206

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument . COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 222


state 207

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument . COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 223


state 208

    (90) funcargum -> sexpression store_argument funcargumprima .

    RPAREN          reduce using rule 90 (funcargum -> sexpression store_argument funcargumprima .)


state 209

    (92) funcargumprima -> COMMA . sexpression store_argument funcargumprima
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 224
    empty                          shift and go to state 39

state 210

    (93) funcargumprima -> empty .

    RPAREN          reduce using rule 93 (funcargumprima -> empty .)


state 211

    (86) functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .

    TIMES           reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    DEVIDE          reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    PLUS            reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    MINUS           reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    LESSER          reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    GREATER         reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    EQUAL           reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    NOTEQUAL        reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    LESSEROREQUAL   reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    GREATEROREQUAL  reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    AND             reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    OR              reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    RBRACKET        reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    COMMA           reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    RPAREN          reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    SEMICOLON       reduce using rule 86 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)


state 212

    (76) array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .

    TIMES           reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    DEVIDE          reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    PLUS            reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    MINUS           reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    LESSER          reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    GREATER         reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    EQUAL           reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    NOTEQUAL        reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    LESSEROREQUAL   reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    GREATEROREQUAL  reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    AND             reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    OR              reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    RBRACKET        reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    COMMA           reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    RPAREN          reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    SEMICOLON       reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)
    ASSIGN          reduce using rule 76 (array -> LBRACKET access_dimen_var sexpression validate_index RBRACKET .)


state 213

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument . COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 225


state 214

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument . COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 226


state 215

    (110) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN . do_while_operation block
    (112) do_while_operation -> .

    LBRACE          reduce using rule 112 (do_while_operation -> .)

    do_while_operation             shift and go to state 227

state 216

    (108) write -> PRINT LPAREN sexpression RPAREN SEMICOLON .

    ID              reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    IF              reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    PRINT           reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    WHILE           reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    RETURN          reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 108 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)


state 217

    (35) assignment -> ID push_id_operand array ASSIGN push_operator . sexpression SEMICOLON
    (109) read -> ID push_id_operand array ASSIGN push_operator . INPUT SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    INPUT           shift and go to state 229
    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 228
    empty                          shift and go to state 39

state 218

    (19) condition -> IF LPAREN sexpression RPAREN do_condition_operation . block else
    (8) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 108

    block                          shift and go to state 230

state 219

    (105) parameterprima -> COMMA type ID store_parameter . parameterprima
    (105) parameterprima -> . COMMA type ID store_parameter parameterprima
    (106) parameterprima -> . empty
    (133) empty -> .

    COMMA           shift and go to state 164
    RPAREN          reduce using rule 133 (empty -> .)

    parameterprima                 shift and go to state 231
    empty                          shift and go to state 166

state 220

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA . sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 232
    empty                          shift and go to state 39

state 221

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA . color store_color RPAREN SEMICOLON
    (113) color -> . BLUE
    (114) color -> . GREEN
    (115) color -> . RED
    (116) color -> . YELLOW
    (117) color -> . BROWN
    (118) color -> . BLACK

    BLUE            shift and go to state 233
    GREEN           shift and go to state 236
    RED             shift and go to state 239
    YELLOW          shift and go to state 237
    BROWN           shift and go to state 234
    BLACK           shift and go to state 238

    color                          shift and go to state 235

state 222

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA . color store_color RPAREN SEMICOLON
    (113) color -> . BLUE
    (114) color -> . GREEN
    (115) color -> . RED
    (116) color -> . YELLOW
    (117) color -> . BROWN
    (118) color -> . BLACK

    BLUE            shift and go to state 233
    GREEN           shift and go to state 236
    RED             shift and go to state 239
    YELLOW          shift and go to state 237
    BROWN           shift and go to state 234
    BLACK           shift and go to state 238

    color                          shift and go to state 240

state 223

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA . color store_color RPAREN SEMICOLON
    (113) color -> . BLUE
    (114) color -> . GREEN
    (115) color -> . RED
    (116) color -> . YELLOW
    (117) color -> . BROWN
    (118) color -> . BLACK

    BLUE            shift and go to state 233
    GREEN           shift and go to state 236
    RED             shift and go to state 239
    YELLOW          shift and go to state 237
    BROWN           shift and go to state 234
    BLACK           shift and go to state 238

    color                          shift and go to state 241

state 224

    (92) funcargumprima -> COMMA sexpression . store_argument funcargumprima
    (94) store_argument -> .

    COMMA           reduce using rule 94 (store_argument -> .)
    RPAREN          reduce using rule 94 (store_argument -> .)

    store_argument                 shift and go to state 242

state 225

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA . color store_color RPAREN SEMICOLON
    (113) color -> . BLUE
    (114) color -> . GREEN
    (115) color -> . RED
    (116) color -> . YELLOW
    (117) color -> . BROWN
    (118) color -> . BLACK

    BLUE            shift and go to state 233
    GREEN           shift and go to state 236
    RED             shift and go to state 239
    YELLOW          shift and go to state 237
    BROWN           shift and go to state 234
    BLACK           shift and go to state 238

    color                          shift and go to state 243

state 226

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA . color store_color RPAREN SEMICOLON
    (113) color -> . BLUE
    (114) color -> . GREEN
    (115) color -> . RED
    (116) color -> . YELLOW
    (117) color -> . BROWN
    (118) color -> . BLACK

    BLUE            shift and go to state 233
    GREEN           shift and go to state 236
    RED             shift and go to state 239
    YELLOW          shift and go to state 237
    BROWN           shift and go to state 234
    BLACK           shift and go to state 238

    color                          shift and go to state 244

state 227

    (110) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation . block
    (8) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 108

    block                          shift and go to state 245

state 228

    (35) assignment -> ID push_id_operand array ASSIGN push_operator sexpression . SEMICOLON

    SEMICOLON       shift and go to state 246


state 229

    (109) read -> ID push_id_operand array ASSIGN push_operator INPUT . SEMICOLON

    SEMICOLON       shift and go to state 247


state 230

    (19) condition -> IF LPAREN sexpression RPAREN do_condition_operation block . else
    (21) else -> . ELSE do_else_operation block
    (22) else -> . empty
    (133) empty -> .

    ELSE            shift and go to state 250
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    PRINT           reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)
    RBRACE          reduce using rule 133 (empty -> .)

    else                           shift and go to state 248
    empty                          shift and go to state 249

state 231

    (105) parameterprima -> COMMA type ID store_parameter parameterprima .

    RPAREN          reduce using rule 105 (parameterprima -> COMMA type ID store_parameter parameterprima .)


state 232

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression . store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 251

state 233

    (113) color -> BLUE .

    RPAREN          reduce using rule 113 (color -> BLUE .)


state 234

    (117) color -> BROWN .

    RPAREN          reduce using rule 117 (color -> BROWN .)


state 235

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color . store_color RPAREN SEMICOLON
    (132) store_color -> .

    RPAREN          reduce using rule 132 (store_color -> .)

    store_color                    shift and go to state 252

state 236

    (114) color -> GREEN .

    RPAREN          reduce using rule 114 (color -> GREEN .)


state 237

    (116) color -> YELLOW .

    RPAREN          reduce using rule 116 (color -> YELLOW .)


state 238

    (118) color -> BLACK .

    RPAREN          reduce using rule 118 (color -> BLACK .)


state 239

    (115) color -> RED .

    RPAREN          reduce using rule 115 (color -> RED .)


state 240

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color . store_color RPAREN SEMICOLON
    (132) store_color -> .

    RPAREN          reduce using rule 132 (store_color -> .)

    store_color                    shift and go to state 253

state 241

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color . store_color RPAREN SEMICOLON
    (132) store_color -> .

    RPAREN          reduce using rule 132 (store_color -> .)

    store_color                    shift and go to state 254

state 242

    (92) funcargumprima -> COMMA sexpression store_argument . funcargumprima
    (92) funcargumprima -> . COMMA sexpression store_argument funcargumprima
    (93) funcargumprima -> . empty
    (133) empty -> .

    COMMA           shift and go to state 209
    RPAREN          reduce using rule 133 (empty -> .)

    funcargumprima                 shift and go to state 255
    empty                          shift and go to state 210

state 243

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color . store_color RPAREN SEMICOLON
    (132) store_color -> .

    RPAREN          reduce using rule 132 (store_color -> .)

    store_color                    shift and go to state 256

state 244

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color . store_color RPAREN SEMICOLON
    (132) store_color -> .

    RPAREN          reduce using rule 132 (store_color -> .)

    store_color                    shift and go to state 257

state 245

    (110) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .

    ID              reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    IF              reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    PRINT           reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    WHILE           reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    RETURN          reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWLINE        reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWSQUARE      reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWTRIANGLE    reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWCIRCLE      reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWCURVE       reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWPOLYGON     reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    RBRACE          reduce using rule 110 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)


state 246

    (35) assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .

    ID              reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    IF              reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    PRINT           reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    WHILE           reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    RETURN          reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    DRAWLINE        reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)
    RBRACE          reduce using rule 35 (assignment -> ID push_id_operand array ASSIGN push_operator sexpression SEMICOLON .)


state 247

    (109) read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .

    ID              reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    IF              reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    PRINT           reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    WHILE           reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    RETURN          reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)
    RBRACE          reduce using rule 109 (read -> ID push_id_operand array ASSIGN push_operator INPUT SEMICOLON .)


state 248

    (19) condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .

    ID              reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    IF              reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    PRINT           reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    WHILE           reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    RETURN          reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWLINE        reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWSQUARE      reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWTRIANGLE    reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWCIRCLE      reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWCURVE       reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWPOLYGON     reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    RBRACE          reduce using rule 19 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)


state 249

    (22) else -> empty .

    ID              reduce using rule 22 (else -> empty .)
    IF              reduce using rule 22 (else -> empty .)
    PRINT           reduce using rule 22 (else -> empty .)
    WHILE           reduce using rule 22 (else -> empty .)
    RETURN          reduce using rule 22 (else -> empty .)
    DRAWLINE        reduce using rule 22 (else -> empty .)
    DRAWSQUARE      reduce using rule 22 (else -> empty .)
    DRAWTRIANGLE    reduce using rule 22 (else -> empty .)
    DRAWCIRCLE      reduce using rule 22 (else -> empty .)
    DRAWCURVE       reduce using rule 22 (else -> empty .)
    DRAWPOLYGON     reduce using rule 22 (else -> empty .)
    RBRACE          reduce using rule 22 (else -> empty .)


state 250

    (21) else -> ELSE . do_else_operation block
    (23) do_else_operation -> .

    LBRACE          reduce using rule 23 (do_else_operation -> .)

    do_else_operation              shift and go to state 258

state 251

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument . COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 259


state 252

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color . RPAREN SEMICOLON

    RPAREN          shift and go to state 260


state 253

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color . RPAREN SEMICOLON

    RPAREN          shift and go to state 261


state 254

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color . RPAREN SEMICOLON

    RPAREN          shift and go to state 262


state 255

    (92) funcargumprima -> COMMA sexpression store_argument funcargumprima .

    RPAREN          reduce using rule 92 (funcargumprima -> COMMA sexpression store_argument funcargumprima .)


state 256

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color . RPAREN SEMICOLON

    RPAREN          shift and go to state 263


state 257

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color . RPAREN SEMICOLON

    RPAREN          shift and go to state 264


state 258

    (21) else -> ELSE do_else_operation . block
    (8) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 108

    block                          shift and go to state 265

state 259

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA . sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (40) sexpression -> . negation expression do_not_operation
    (41) negation -> . NOT push_operator
    (42) negation -> . empty
    (133) empty -> .

    NOT             shift and go to state 38
    LPAREN          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    FLOAT           reduce using rule 133 (empty -> .)
    INT             reduce using rule 133 (empty -> .)
    STRING          reduce using rule 133 (empty -> .)
    TRUE            reduce using rule 133 (empty -> .)
    FALSE           reduce using rule 133 (empty -> .)
    DRAWLINE        reduce using rule 133 (empty -> .)
    DRAWSQUARE      reduce using rule 133 (empty -> .)
    DRAWTRIANGLE    reduce using rule 133 (empty -> .)
    DRAWCIRCLE      reduce using rule 133 (empty -> .)
    DRAWCURVE       reduce using rule 133 (empty -> .)
    DRAWPOLYGON     reduce using rule 133 (empty -> .)

    negation                       shift and go to state 36
    sexpression                    shift and go to state 266
    empty                          shift and go to state 39

state 260

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 267


state 261

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 262

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 269


state 263

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 270


state 264

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 271


state 265

    (21) else -> ELSE do_else_operation block .

    ID              reduce using rule 21 (else -> ELSE do_else_operation block .)
    IF              reduce using rule 21 (else -> ELSE do_else_operation block .)
    PRINT           reduce using rule 21 (else -> ELSE do_else_operation block .)
    WHILE           reduce using rule 21 (else -> ELSE do_else_operation block .)
    RETURN          reduce using rule 21 (else -> ELSE do_else_operation block .)
    DRAWLINE        reduce using rule 21 (else -> ELSE do_else_operation block .)
    DRAWSQUARE      reduce using rule 21 (else -> ELSE do_else_operation block .)
    DRAWTRIANGLE    reduce using rule 21 (else -> ELSE do_else_operation block .)
    DRAWCIRCLE      reduce using rule 21 (else -> ELSE do_else_operation block .)
    DRAWCURVE       reduce using rule 21 (else -> ELSE do_else_operation block .)
    DRAWPOLYGON     reduce using rule 21 (else -> ELSE do_else_operation block .)
    RBRACE          reduce using rule 21 (else -> ELSE do_else_operation block .)


state 266

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression . store_predefined_argument COMMA color store_color RPAREN SEMICOLON
    (131) store_predefined_argument -> .

    COMMA           reduce using rule 131 (store_predefined_argument -> .)

    store_predefined_argument      shift and go to state 272

state 267

    (128) drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .

    ID              reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    IF              reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PRINT           reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    WHILE           reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RETURN          reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    TIMES           reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PLUS            reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    MINUS           reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSER          reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATER         reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    AND             reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    OR              reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    COMMA           reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 128 (drawcircle -> DRAWCIRCLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)


state 268

    (127) drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .

    ID              reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    IF              reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PRINT           reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    WHILE           reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RETURN          reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    TIMES           reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PLUS            reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    MINUS           reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSER          reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATER         reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    AND             reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    OR              reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    COMMA           reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 127 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)


state 269

    (126) drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .

    TIMES           reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PLUS            reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    MINUS           reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSER          reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATER         reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    AND             reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    OR              reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    COMMA           reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    ID              reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    IF              reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PRINT           reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    WHILE           reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RETURN          reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 126 (drawsquare -> DRAWSQUARE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)


state 270

    (130) drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .

    TIMES           reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PLUS            reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    MINUS           reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSER          reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATER         reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    AND             reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    OR              reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    COMMA           reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    ID              reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    IF              reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PRINT           reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    WHILE           reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RETURN          reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 130 (drawpolygon -> DRAWPOLYGON LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)


state 271

    (129) drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .

    TIMES           reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PLUS            reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    MINUS           reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSER          reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATER         reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    AND             reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    OR              reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    COMMA           reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    ID              reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    IF              reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PRINT           reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    WHILE           reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RETURN          reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 129 (drawcurve -> DRAWCURVE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)


state 272

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument . COMMA color store_color RPAREN SEMICOLON

    COMMA           shift and go to state 273


state 273

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA . color store_color RPAREN SEMICOLON
    (113) color -> . BLUE
    (114) color -> . GREEN
    (115) color -> . RED
    (116) color -> . YELLOW
    (117) color -> . BROWN
    (118) color -> . BLACK

    BLUE            shift and go to state 233
    GREEN           shift and go to state 236
    RED             shift and go to state 239
    YELLOW          shift and go to state 237
    BROWN           shift and go to state 234
    BLACK           shift and go to state 238

    color                          shift and go to state 274

state 274

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color . store_color RPAREN SEMICOLON
    (132) store_color -> .

    RPAREN          reduce using rule 132 (store_color -> .)

    store_color                    shift and go to state 275

state 275

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color . RPAREN SEMICOLON

    RPAREN          shift and go to state 276


state 276

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 277


state 277

    (125) drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .

    TIMES           reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PLUS            reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    MINUS           reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSER          reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATER         reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    AND             reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    OR              reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    COMMA           reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    ID              reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    IF              reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    PRINT           reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    WHILE           reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RETURN          reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 125 (drawline -> DRAWLINE LPAREN sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA sexpression store_predefined_argument COMMA color store_color RPAREN SEMICOLON .)

