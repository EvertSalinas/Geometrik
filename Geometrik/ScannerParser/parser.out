Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    BREAK

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram
Rule 2     endProgram -> <empty>
Rule 3     add_global_function -> <empty>
Rule 4     main -> INTTYPE MAIN LPAREN RPAREN add_jump_to_main block
Rule 5     goto_main -> <empty>
Rule 6     add_jump_to_main -> <empty>
Rule 7     block -> LBRACE blockprima RBRACE
Rule 8     blockprima -> statute blockprima
Rule 9     blockprima -> empty
Rule 10    statute -> assignment
Rule 11    statute -> condition
Rule 12    statute -> write
Rule 13    statute -> read
Rule 14    statute -> cycle
Rule 15    statute -> functioncall
Rule 16    statute -> predefined
Rule 17    statute -> return
Rule 18    condition -> IF LPAREN sexpression RPAREN do_condition_operation block else
Rule 19    do_condition_operation -> <empty>
Rule 20    conditionprima -> functioncall
Rule 21    conditionprima -> sexpression
Rule 22    else -> ELSE do_else_operation block
Rule 23    else -> empty
Rule 24    do_else_operation -> <empty>
Rule 25    vars -> VAR type ID array store_variable SEMICOLON vars
Rule 26    vars -> empty
Rule 27    store_variable -> <empty>
Rule 28    array -> LBRACKET sexpression RBRACKET
Rule 29    array -> empty
Rule 30    type -> INTTYPE
Rule 31    type -> FLOATTYPE
Rule 32    type -> STRINGTYPE
Rule 33    type -> BOOLTYPE
Rule 34    assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
Rule 35    push_id_operand -> <empty>
Rule 36    push_operator -> <empty>
Rule 37    assignmentarray -> empty
Rule 38    assignmentarray -> LBRACKET sexpression RBRACKET
Rule 39    assignmentprima -> functioncall
Rule 40    assignmentprima -> sexpression
Rule 41    sexpression -> negation expression do_not_operation
Rule 42    negation -> NOT push_operator
Rule 43    negation -> empty
Rule 44    do_not_operation -> <empty>
Rule 45    expression -> expression relationaloperators push_operator exp do_relational_operation
Rule 46    expression -> exp
Rule 47    relationaloperators -> LESSER
Rule 48    relationaloperators -> GREATER
Rule 49    relationaloperators -> EQUAL
Rule 50    relationaloperators -> NOTEQUAL
Rule 51    relationaloperators -> LESSEROREQUAL
Rule 52    relationaloperators -> GREATEROREQUAL
Rule 53    relationaloperators -> AND
Rule 54    relationaloperators -> OR
Rule 55    do_relational_operation -> <empty>
Rule 56    exp -> exp mathoperators1 push_operator term do_math_operation1
Rule 57    exp -> term
Rule 58    mathoperators1 -> PLUS
Rule 59    mathoperators1 -> MINUS
Rule 60    do_math_operation1 -> <empty>
Rule 61    term -> term mathoperators2 push_operator factor do_math_operation2
Rule 62    term -> factor
Rule 63    mathoperators2 -> TIMES
Rule 64    mathoperators2 -> DEVIDE
Rule 65    do_math_operation2 -> <empty>
Rule 66    factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
Rule 67    factor -> varConst
Rule 68    push_false_bottom -> <empty>
Rule 69    pop_false_bottom -> <empty>
Rule 70    varConst -> ID push_id_operand
Rule 71    varConst -> FLOAT push_float_operand
Rule 72    varConst -> INT push_int_operand
Rule 73    varConst -> bool push_bool_operand
Rule 74    varConst -> STRING push_string_operand
Rule 75    varConst -> predefined
Rule 76    varConst -> functioncall
Rule 77    constantprima -> empty
Rule 78    constantprima -> LBRACKET sexpression RBRACKET
Rule 79    bool -> TRUE
Rule 80    bool -> FALSE
Rule 81    push_float_operand -> <empty>
Rule 82    push_int_operand -> <empty>
Rule 83    push_bool_operand -> <empty>
Rule 84    push_string_operand -> <empty>
Rule 85    functioncall -> ID LPAREN funcparam RPAREN SEMICOLON
Rule 86    funcparam -> empty
Rule 87    funcparam -> sexpression
Rule 88    funcparam -> sexpression COMMA funcparam
Rule 89    function -> FUNCTION functiontype ID LPAREN parameter RPAREN block function
Rule 90    function -> empty
Rule 91    functiontype -> VOID
Rule 92    functiontype -> type
Rule 93    return -> RETURN sexpression SEMICOLON
Rule 94    parameter -> empty
Rule 95    parameter -> parameterprima
Rule 96    parameterprima -> type ID
Rule 97    parameterprima -> type ID COMMA parameterprima
Rule 98    write -> PRINT LPAREN sexpression RPAREN SEMICOLON
Rule 99    read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
Rule 100   cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
Rule 101   push_cycle_jump -> <empty>
Rule 102   do_while_operation -> <empty>
Rule 103   color -> BLUE
Rule 104   color -> GREEN
Rule 105   color -> RED
Rule 106   color -> YELLOW
Rule 107   color -> BROWN
Rule 108   color -> BLACK
Rule 109   predefined -> drawline
Rule 110   predefined -> drawsquare
Rule 111   predefined -> drawtriangle
Rule 112   predefined -> drawcircle
Rule 113   predefined -> drawcurve
Rule 114   predefined -> drawpolygon
Rule 115   drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 116   drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 117   drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 118   drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 119   drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 120   drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 121   empty -> <empty>

Terminals, with rules where they appear

AND                  : 53
ASSIGN               : 34 99
BLACK                : 108
BLUE                 : 103
BOOLTYPE             : 33
BREAK                : 
BROWN                : 107
COLON                : 
COMMA                : 88 97 115 115 115 115 116 116 117 117 118 118 119 119 120 120
DEVIDE               : 64
DRAWCIRCLE           : 118
DRAWCURVE            : 119
DRAWLINE             : 115
DRAWPOLYGON          : 120
DRAWSQUARE           : 116
DRAWTRIANGLE         : 117
ELSE                 : 22
EQUAL                : 49
FALSE                : 80
FLOAT                : 71
FLOATTYPE            : 31
FUNCTION             : 89
GREATER              : 48
GREATEROREQUAL       : 52
GREEN                : 104
ID                   : 1 25 34 70 85 89 96 97 99
IF                   : 18
INPUT                : 99
INT                  : 72
INTTYPE              : 4 30
LBRACE               : 7
LBRACKET             : 28 38 78
LESSER               : 47
LESSEROREQUAL        : 51
LPAREN               : 4 18 66 85 89 98 100 115 116 117 118 119 120
MAIN                 : 4
MINUS                : 59
NOT                  : 42
NOTEQUAL             : 50
OR                   : 54
PLUS                 : 58
PRINT                : 98
PROGRAM              : 1
RBRACE               : 7
RBRACKET             : 28 38 78
RED                  : 105
RETURN               : 93
RPAREN               : 4 18 66 85 89 98 100 115 116 117 118 119 120
SEMICOLON            : 1 25 34 85 93 98 99 115 116 117 118 119 120
STRING               : 74
STRINGTYPE           : 32
TIMES                : 63
TRUE                 : 79
VAR                  : 25
VOID                 : 91
WHILE                : 100
YELLOW               : 106
error                : 

Nonterminals, with rules where they appear

add_global_function  : 1
add_jump_to_main     : 4
array                : 25
assignment           : 10
assignmentarray      : 
assignmentprima      : 
block                : 4 18 22 89 100
blockprima           : 7 8
bool                 : 73
color                : 115 116 117 118 119 120
condition            : 11
conditionprima       : 
constantprima        : 
cycle                : 14
do_condition_operation : 18
do_else_operation    : 22
do_math_operation1   : 56
do_math_operation2   : 61
do_not_operation     : 41
do_relational_operation : 45
do_while_operation   : 100
drawcircle           : 112
drawcurve            : 113
drawline             : 109
drawpolygon          : 114
drawsquare           : 110
drawtriangle         : 111
else                 : 18
empty                : 9 23 26 29 37 43 77 86 90 94
endProgram           : 1
exp                  : 45 46 56
expression           : 41 45
factor               : 61 62
funcparam            : 85 88
function             : 1 89
functioncall         : 15 20 39 76
functiontype         : 89
goto_main            : 1
main                 : 1
mathoperators1       : 56
mathoperators2       : 61
negation             : 41
parameter            : 89
parameterprima       : 95 97
pop_false_bottom     : 66
predefined           : 16 75
program              : 0
push_bool_operand    : 73
push_cycle_jump      : 100
push_false_bottom    : 66
push_float_operand   : 71
push_id_operand      : 34 70 99
push_int_operand     : 72
push_operator        : 34 42 45 56 61 99
push_string_operand  : 74
read                 : 13
relationaloperators  : 45
return               : 17
sexpression          : 18 21 28 34 38 40 66 78 87 88 93 98 100 115 115 115 115 116 116 117 117 118 118 119 119 120 120
statute              : 8
store_variable       : 25
term                 : 56 57 61
type                 : 25 92 96 97
varConst             : 67
vars                 : 1 25
write                : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID add_global_function SEMICOLON goto_main vars function main endProgram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . add_global_function SEMICOLON goto_main vars function main endProgram
    (3) add_global_function -> .

    SEMICOLON       reduce using rule 3 (add_global_function -> .)

    add_global_function            shift and go to state 4

state 4

    (1) program -> PROGRAM ID add_global_function . SEMICOLON goto_main vars function main endProgram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID add_global_function SEMICOLON . goto_main vars function main endProgram
    (5) goto_main -> .

    VAR             reduce using rule 5 (goto_main -> .)
    FUNCTION        reduce using rule 5 (goto_main -> .)
    INTTYPE         reduce using rule 5 (goto_main -> .)

    goto_main                      shift and go to state 6

state 6

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main . vars function main endProgram
    (25) vars -> . VAR type ID array store_variable SEMICOLON vars
    (26) vars -> . empty
    (121) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 121 (empty -> .)
    INTTYPE         reduce using rule 121 (empty -> .)

    vars                           shift and go to state 7
    empty                          shift and go to state 9

state 7

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars . function main endProgram
    (89) function -> . FUNCTION functiontype ID LPAREN parameter RPAREN block function
    (90) function -> . empty
    (121) empty -> .

    FUNCTION        shift and go to state 11
    INTTYPE         reduce using rule 121 (empty -> .)

    function                       shift and go to state 10
    empty                          shift and go to state 12

state 8

    (25) vars -> VAR . type ID array store_variable SEMICOLON vars
    (30) type -> . INTTYPE
    (31) type -> . FLOATTYPE
    (32) type -> . STRINGTYPE
    (33) type -> . BOOLTYPE

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    type                           shift and go to state 17

state 9

    (26) vars -> empty .

    FUNCTION        reduce using rule 26 (vars -> empty .)
    INTTYPE         reduce using rule 26 (vars -> empty .)


state 10

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function . main endProgram
    (4) main -> . INTTYPE MAIN LPAREN RPAREN add_jump_to_main block

    INTTYPE         shift and go to state 18

    main                           shift and go to state 19

state 11

    (89) function -> FUNCTION . functiontype ID LPAREN parameter RPAREN block function
    (91) functiontype -> . VOID
    (92) functiontype -> . type
    (30) type -> . INTTYPE
    (31) type -> . FLOATTYPE
    (32) type -> . STRINGTYPE
    (33) type -> . BOOLTYPE

    VOID            shift and go to state 21
    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    functiontype                   shift and go to state 20
    type                           shift and go to state 22

state 12

    (90) function -> empty .

    INTTYPE         reduce using rule 90 (function -> empty .)


state 13

    (33) type -> BOOLTYPE .

    ID              reduce using rule 33 (type -> BOOLTYPE .)


state 14

    (32) type -> STRINGTYPE .

    ID              reduce using rule 32 (type -> STRINGTYPE .)


state 15

    (31) type -> FLOATTYPE .

    ID              reduce using rule 31 (type -> FLOATTYPE .)


state 16

    (30) type -> INTTYPE .

    ID              reduce using rule 30 (type -> INTTYPE .)


state 17

    (25) vars -> VAR type . ID array store_variable SEMICOLON vars

    ID              shift and go to state 23


state 18

    (4) main -> INTTYPE . MAIN LPAREN RPAREN add_jump_to_main block

    MAIN            shift and go to state 24


state 19

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main . endProgram
    (2) endProgram -> .

    $end            reduce using rule 2 (endProgram -> .)

    endProgram                     shift and go to state 25

state 20

    (89) function -> FUNCTION functiontype . ID LPAREN parameter RPAREN block function

    ID              shift and go to state 26


state 21

    (91) functiontype -> VOID .

    ID              reduce using rule 91 (functiontype -> VOID .)


state 22

    (92) functiontype -> type .

    ID              reduce using rule 92 (functiontype -> type .)


state 23

    (25) vars -> VAR type ID . array store_variable SEMICOLON vars
    (28) array -> . LBRACKET sexpression RBRACKET
    (29) array -> . empty
    (121) empty -> .

    LBRACKET        shift and go to state 27
    SEMICOLON       reduce using rule 121 (empty -> .)

    array                          shift and go to state 28
    empty                          shift and go to state 29

state 24

    (4) main -> INTTYPE MAIN . LPAREN RPAREN add_jump_to_main block

    LPAREN          shift and go to state 30


state 25

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram .

    $end            reduce using rule 1 (program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram .)


state 26

    (89) function -> FUNCTION functiontype ID . LPAREN parameter RPAREN block function

    LPAREN          shift and go to state 31


state 27

    (28) array -> LBRACKET . sexpression RBRACKET
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 33
    empty                          shift and go to state 35

state 28

    (25) vars -> VAR type ID array . store_variable SEMICOLON vars
    (27) store_variable -> .

    SEMICOLON       reduce using rule 27 (store_variable -> .)

    store_variable                 shift and go to state 36

state 29

    (29) array -> empty .

    SEMICOLON       reduce using rule 29 (array -> empty .)


state 30

    (4) main -> INTTYPE MAIN LPAREN . RPAREN add_jump_to_main block

    RPAREN          shift and go to state 37


state 31

    (89) function -> FUNCTION functiontype ID LPAREN . parameter RPAREN block function
    (94) parameter -> . empty
    (95) parameter -> . parameterprima
    (121) empty -> .
    (96) parameterprima -> . type ID
    (97) parameterprima -> . type ID COMMA parameterprima
    (30) type -> . INTTYPE
    (31) type -> . FLOATTYPE
    (32) type -> . STRINGTYPE
    (33) type -> . BOOLTYPE

    RPAREN          reduce using rule 121 (empty -> .)
    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    type                           shift and go to state 39
    parameterprima                 shift and go to state 40
    parameter                      shift and go to state 41
    empty                          shift and go to state 38

state 32

    (41) sexpression -> negation . expression do_not_operation
    (45) expression -> . expression relationaloperators push_operator exp do_relational_operation
    (46) expression -> . exp
    (56) exp -> . exp mathoperators1 push_operator term do_math_operation1
    (57) exp -> . term
    (61) term -> . term mathoperators2 push_operator factor do_math_operation2
    (62) term -> . factor
    (66) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (67) factor -> . varConst
    (70) varConst -> . ID push_id_operand
    (71) varConst -> . FLOAT push_float_operand
    (72) varConst -> . INT push_int_operand
    (73) varConst -> . bool push_bool_operand
    (74) varConst -> . STRING push_string_operand
    (75) varConst -> . predefined
    (76) varConst -> . functioncall
    (79) bool -> . TRUE
    (80) bool -> . FALSE
    (109) predefined -> . drawline
    (110) predefined -> . drawsquare
    (111) predefined -> . drawtriangle
    (112) predefined -> . drawcircle
    (113) predefined -> . drawcurve
    (114) predefined -> . drawpolygon
    (85) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (115) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (116) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (117) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 59
    ID              shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 64
    STRING          shift and go to state 48
    TRUE            shift and go to state 47
    FALSE           shift and go to state 52
    DRAWLINE        shift and go to state 60
    DRAWSQUARE      shift and go to state 58
    DRAWTRIANGLE    shift and go to state 44
    DRAWCIRCLE      shift and go to state 50
    DRAWCURVE       shift and go to state 66
    DRAWPOLYGON     shift and go to state 63

    drawtriangle                   shift and go to state 42
    varConst                       shift and go to state 43
    drawcurve                      shift and go to state 45
    predefined                     shift and go to state 49
    drawline                       shift and go to state 51
    bool                           shift and go to state 53
    factor                         shift and go to state 54
    drawcircle                     shift and go to state 55
    exp                            shift and go to state 56
    drawpolygon                    shift and go to state 57
    term                           shift and go to state 62
    expression                     shift and go to state 68
    drawsquare                     shift and go to state 46
    functioncall                   shift and go to state 67

state 33

    (28) array -> LBRACKET sexpression . RBRACKET

    RBRACKET        shift and go to state 69


state 34

    (42) negation -> NOT . push_operator
    (36) push_operator -> .

    LPAREN          reduce using rule 36 (push_operator -> .)
    ID              reduce using rule 36 (push_operator -> .)
    FLOAT           reduce using rule 36 (push_operator -> .)
    INT             reduce using rule 36 (push_operator -> .)
    STRING          reduce using rule 36 (push_operator -> .)
    TRUE            reduce using rule 36 (push_operator -> .)
    FALSE           reduce using rule 36 (push_operator -> .)
    DRAWLINE        reduce using rule 36 (push_operator -> .)
    DRAWSQUARE      reduce using rule 36 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 36 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 36 (push_operator -> .)
    DRAWCURVE       reduce using rule 36 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 36 (push_operator -> .)

    push_operator                  shift and go to state 70

state 35

    (43) negation -> empty .

    LPAREN          reduce using rule 43 (negation -> empty .)
    ID              reduce using rule 43 (negation -> empty .)
    FLOAT           reduce using rule 43 (negation -> empty .)
    INT             reduce using rule 43 (negation -> empty .)
    STRING          reduce using rule 43 (negation -> empty .)
    TRUE            reduce using rule 43 (negation -> empty .)
    FALSE           reduce using rule 43 (negation -> empty .)
    DRAWLINE        reduce using rule 43 (negation -> empty .)
    DRAWSQUARE      reduce using rule 43 (negation -> empty .)
    DRAWTRIANGLE    reduce using rule 43 (negation -> empty .)
    DRAWCIRCLE      reduce using rule 43 (negation -> empty .)
    DRAWCURVE       reduce using rule 43 (negation -> empty .)
    DRAWPOLYGON     reduce using rule 43 (negation -> empty .)


state 36

    (25) vars -> VAR type ID array store_variable . SEMICOLON vars

    SEMICOLON       shift and go to state 71


state 37

    (4) main -> INTTYPE MAIN LPAREN RPAREN . add_jump_to_main block
    (6) add_jump_to_main -> .

    LBRACE          reduce using rule 6 (add_jump_to_main -> .)

    add_jump_to_main               shift and go to state 72

state 38

    (94) parameter -> empty .

    RPAREN          reduce using rule 94 (parameter -> empty .)


state 39

    (96) parameterprima -> type . ID
    (97) parameterprima -> type . ID COMMA parameterprima

    ID              shift and go to state 73


state 40

    (95) parameter -> parameterprima .

    RPAREN          reduce using rule 95 (parameter -> parameterprima .)


state 41

    (89) function -> FUNCTION functiontype ID LPAREN parameter . RPAREN block function

    RPAREN          shift and go to state 74


state 42

    (111) predefined -> drawtriangle .

    TIMES           reduce using rule 111 (predefined -> drawtriangle .)
    DEVIDE          reduce using rule 111 (predefined -> drawtriangle .)
    PLUS            reduce using rule 111 (predefined -> drawtriangle .)
    MINUS           reduce using rule 111 (predefined -> drawtriangle .)
    LESSER          reduce using rule 111 (predefined -> drawtriangle .)
    GREATER         reduce using rule 111 (predefined -> drawtriangle .)
    EQUAL           reduce using rule 111 (predefined -> drawtriangle .)
    NOTEQUAL        reduce using rule 111 (predefined -> drawtriangle .)
    LESSEROREQUAL   reduce using rule 111 (predefined -> drawtriangle .)
    GREATEROREQUAL  reduce using rule 111 (predefined -> drawtriangle .)
    AND             reduce using rule 111 (predefined -> drawtriangle .)
    OR              reduce using rule 111 (predefined -> drawtriangle .)
    RBRACKET        reduce using rule 111 (predefined -> drawtriangle .)
    COMMA           reduce using rule 111 (predefined -> drawtriangle .)
    RPAREN          reduce using rule 111 (predefined -> drawtriangle .)
    SEMICOLON       reduce using rule 111 (predefined -> drawtriangle .)
    ID              reduce using rule 111 (predefined -> drawtriangle .)
    IF              reduce using rule 111 (predefined -> drawtriangle .)
    PRINT           reduce using rule 111 (predefined -> drawtriangle .)
    WHILE           reduce using rule 111 (predefined -> drawtriangle .)
    RETURN          reduce using rule 111 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 111 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 111 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 111 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 111 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 111 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 111 (predefined -> drawtriangle .)
    RBRACE          reduce using rule 111 (predefined -> drawtriangle .)


state 43

    (67) factor -> varConst .

    TIMES           reduce using rule 67 (factor -> varConst .)
    DEVIDE          reduce using rule 67 (factor -> varConst .)
    PLUS            reduce using rule 67 (factor -> varConst .)
    MINUS           reduce using rule 67 (factor -> varConst .)
    LESSER          reduce using rule 67 (factor -> varConst .)
    GREATER         reduce using rule 67 (factor -> varConst .)
    EQUAL           reduce using rule 67 (factor -> varConst .)
    NOTEQUAL        reduce using rule 67 (factor -> varConst .)
    LESSEROREQUAL   reduce using rule 67 (factor -> varConst .)
    GREATEROREQUAL  reduce using rule 67 (factor -> varConst .)
    AND             reduce using rule 67 (factor -> varConst .)
    OR              reduce using rule 67 (factor -> varConst .)
    RBRACKET        reduce using rule 67 (factor -> varConst .)
    COMMA           reduce using rule 67 (factor -> varConst .)
    RPAREN          reduce using rule 67 (factor -> varConst .)
    SEMICOLON       reduce using rule 67 (factor -> varConst .)


state 44

    (117) drawtriangle -> DRAWTRIANGLE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 75


state 45

    (113) predefined -> drawcurve .

    TIMES           reduce using rule 113 (predefined -> drawcurve .)
    DEVIDE          reduce using rule 113 (predefined -> drawcurve .)
    PLUS            reduce using rule 113 (predefined -> drawcurve .)
    MINUS           reduce using rule 113 (predefined -> drawcurve .)
    LESSER          reduce using rule 113 (predefined -> drawcurve .)
    GREATER         reduce using rule 113 (predefined -> drawcurve .)
    EQUAL           reduce using rule 113 (predefined -> drawcurve .)
    NOTEQUAL        reduce using rule 113 (predefined -> drawcurve .)
    LESSEROREQUAL   reduce using rule 113 (predefined -> drawcurve .)
    GREATEROREQUAL  reduce using rule 113 (predefined -> drawcurve .)
    AND             reduce using rule 113 (predefined -> drawcurve .)
    OR              reduce using rule 113 (predefined -> drawcurve .)
    RBRACKET        reduce using rule 113 (predefined -> drawcurve .)
    COMMA           reduce using rule 113 (predefined -> drawcurve .)
    RPAREN          reduce using rule 113 (predefined -> drawcurve .)
    SEMICOLON       reduce using rule 113 (predefined -> drawcurve .)
    ID              reduce using rule 113 (predefined -> drawcurve .)
    IF              reduce using rule 113 (predefined -> drawcurve .)
    PRINT           reduce using rule 113 (predefined -> drawcurve .)
    WHILE           reduce using rule 113 (predefined -> drawcurve .)
    RETURN          reduce using rule 113 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 113 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 113 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 113 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 113 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 113 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 113 (predefined -> drawcurve .)
    RBRACE          reduce using rule 113 (predefined -> drawcurve .)


state 46

    (110) predefined -> drawsquare .

    TIMES           reduce using rule 110 (predefined -> drawsquare .)
    DEVIDE          reduce using rule 110 (predefined -> drawsquare .)
    PLUS            reduce using rule 110 (predefined -> drawsquare .)
    MINUS           reduce using rule 110 (predefined -> drawsquare .)
    LESSER          reduce using rule 110 (predefined -> drawsquare .)
    GREATER         reduce using rule 110 (predefined -> drawsquare .)
    EQUAL           reduce using rule 110 (predefined -> drawsquare .)
    NOTEQUAL        reduce using rule 110 (predefined -> drawsquare .)
    LESSEROREQUAL   reduce using rule 110 (predefined -> drawsquare .)
    GREATEROREQUAL  reduce using rule 110 (predefined -> drawsquare .)
    AND             reduce using rule 110 (predefined -> drawsquare .)
    OR              reduce using rule 110 (predefined -> drawsquare .)
    RBRACKET        reduce using rule 110 (predefined -> drawsquare .)
    COMMA           reduce using rule 110 (predefined -> drawsquare .)
    RPAREN          reduce using rule 110 (predefined -> drawsquare .)
    SEMICOLON       reduce using rule 110 (predefined -> drawsquare .)
    ID              reduce using rule 110 (predefined -> drawsquare .)
    IF              reduce using rule 110 (predefined -> drawsquare .)
    PRINT           reduce using rule 110 (predefined -> drawsquare .)
    WHILE           reduce using rule 110 (predefined -> drawsquare .)
    RETURN          reduce using rule 110 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 110 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 110 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 110 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 110 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 110 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 110 (predefined -> drawsquare .)
    RBRACE          reduce using rule 110 (predefined -> drawsquare .)


state 47

    (79) bool -> TRUE .

    TIMES           reduce using rule 79 (bool -> TRUE .)
    DEVIDE          reduce using rule 79 (bool -> TRUE .)
    PLUS            reduce using rule 79 (bool -> TRUE .)
    MINUS           reduce using rule 79 (bool -> TRUE .)
    LESSER          reduce using rule 79 (bool -> TRUE .)
    GREATER         reduce using rule 79 (bool -> TRUE .)
    EQUAL           reduce using rule 79 (bool -> TRUE .)
    NOTEQUAL        reduce using rule 79 (bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 79 (bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 79 (bool -> TRUE .)
    AND             reduce using rule 79 (bool -> TRUE .)
    OR              reduce using rule 79 (bool -> TRUE .)
    RBRACKET        reduce using rule 79 (bool -> TRUE .)
    COMMA           reduce using rule 79 (bool -> TRUE .)
    RPAREN          reduce using rule 79 (bool -> TRUE .)
    SEMICOLON       reduce using rule 79 (bool -> TRUE .)


state 48

    (74) varConst -> STRING . push_string_operand
    (84) push_string_operand -> .

    TIMES           reduce using rule 84 (push_string_operand -> .)
    DEVIDE          reduce using rule 84 (push_string_operand -> .)
    PLUS            reduce using rule 84 (push_string_operand -> .)
    MINUS           reduce using rule 84 (push_string_operand -> .)
    LESSER          reduce using rule 84 (push_string_operand -> .)
    GREATER         reduce using rule 84 (push_string_operand -> .)
    EQUAL           reduce using rule 84 (push_string_operand -> .)
    NOTEQUAL        reduce using rule 84 (push_string_operand -> .)
    LESSEROREQUAL   reduce using rule 84 (push_string_operand -> .)
    GREATEROREQUAL  reduce using rule 84 (push_string_operand -> .)
    AND             reduce using rule 84 (push_string_operand -> .)
    OR              reduce using rule 84 (push_string_operand -> .)
    RBRACKET        reduce using rule 84 (push_string_operand -> .)
    COMMA           reduce using rule 84 (push_string_operand -> .)
    RPAREN          reduce using rule 84 (push_string_operand -> .)
    SEMICOLON       reduce using rule 84 (push_string_operand -> .)

    push_string_operand            shift and go to state 76

state 49

    (75) varConst -> predefined .

    TIMES           reduce using rule 75 (varConst -> predefined .)
    DEVIDE          reduce using rule 75 (varConst -> predefined .)
    PLUS            reduce using rule 75 (varConst -> predefined .)
    MINUS           reduce using rule 75 (varConst -> predefined .)
    LESSER          reduce using rule 75 (varConst -> predefined .)
    GREATER         reduce using rule 75 (varConst -> predefined .)
    EQUAL           reduce using rule 75 (varConst -> predefined .)
    NOTEQUAL        reduce using rule 75 (varConst -> predefined .)
    LESSEROREQUAL   reduce using rule 75 (varConst -> predefined .)
    GREATEROREQUAL  reduce using rule 75 (varConst -> predefined .)
    AND             reduce using rule 75 (varConst -> predefined .)
    OR              reduce using rule 75 (varConst -> predefined .)
    RBRACKET        reduce using rule 75 (varConst -> predefined .)
    COMMA           reduce using rule 75 (varConst -> predefined .)
    RPAREN          reduce using rule 75 (varConst -> predefined .)
    SEMICOLON       reduce using rule 75 (varConst -> predefined .)


state 50

    (118) drawcircle -> DRAWCIRCLE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 77


state 51

    (109) predefined -> drawline .

    TIMES           reduce using rule 109 (predefined -> drawline .)
    DEVIDE          reduce using rule 109 (predefined -> drawline .)
    PLUS            reduce using rule 109 (predefined -> drawline .)
    MINUS           reduce using rule 109 (predefined -> drawline .)
    LESSER          reduce using rule 109 (predefined -> drawline .)
    GREATER         reduce using rule 109 (predefined -> drawline .)
    EQUAL           reduce using rule 109 (predefined -> drawline .)
    NOTEQUAL        reduce using rule 109 (predefined -> drawline .)
    LESSEROREQUAL   reduce using rule 109 (predefined -> drawline .)
    GREATEROREQUAL  reduce using rule 109 (predefined -> drawline .)
    AND             reduce using rule 109 (predefined -> drawline .)
    OR              reduce using rule 109 (predefined -> drawline .)
    RBRACKET        reduce using rule 109 (predefined -> drawline .)
    COMMA           reduce using rule 109 (predefined -> drawline .)
    RPAREN          reduce using rule 109 (predefined -> drawline .)
    SEMICOLON       reduce using rule 109 (predefined -> drawline .)
    ID              reduce using rule 109 (predefined -> drawline .)
    IF              reduce using rule 109 (predefined -> drawline .)
    PRINT           reduce using rule 109 (predefined -> drawline .)
    WHILE           reduce using rule 109 (predefined -> drawline .)
    RETURN          reduce using rule 109 (predefined -> drawline .)
    DRAWLINE        reduce using rule 109 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 109 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 109 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 109 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 109 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 109 (predefined -> drawline .)
    RBRACE          reduce using rule 109 (predefined -> drawline .)


state 52

    (80) bool -> FALSE .

    TIMES           reduce using rule 80 (bool -> FALSE .)
    DEVIDE          reduce using rule 80 (bool -> FALSE .)
    PLUS            reduce using rule 80 (bool -> FALSE .)
    MINUS           reduce using rule 80 (bool -> FALSE .)
    LESSER          reduce using rule 80 (bool -> FALSE .)
    GREATER         reduce using rule 80 (bool -> FALSE .)
    EQUAL           reduce using rule 80 (bool -> FALSE .)
    NOTEQUAL        reduce using rule 80 (bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 80 (bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 80 (bool -> FALSE .)
    AND             reduce using rule 80 (bool -> FALSE .)
    OR              reduce using rule 80 (bool -> FALSE .)
    RBRACKET        reduce using rule 80 (bool -> FALSE .)
    COMMA           reduce using rule 80 (bool -> FALSE .)
    RPAREN          reduce using rule 80 (bool -> FALSE .)
    SEMICOLON       reduce using rule 80 (bool -> FALSE .)


state 53

    (73) varConst -> bool . push_bool_operand
    (83) push_bool_operand -> .

    TIMES           reduce using rule 83 (push_bool_operand -> .)
    DEVIDE          reduce using rule 83 (push_bool_operand -> .)
    PLUS            reduce using rule 83 (push_bool_operand -> .)
    MINUS           reduce using rule 83 (push_bool_operand -> .)
    LESSER          reduce using rule 83 (push_bool_operand -> .)
    GREATER         reduce using rule 83 (push_bool_operand -> .)
    EQUAL           reduce using rule 83 (push_bool_operand -> .)
    NOTEQUAL        reduce using rule 83 (push_bool_operand -> .)
    LESSEROREQUAL   reduce using rule 83 (push_bool_operand -> .)
    GREATEROREQUAL  reduce using rule 83 (push_bool_operand -> .)
    AND             reduce using rule 83 (push_bool_operand -> .)
    OR              reduce using rule 83 (push_bool_operand -> .)
    RBRACKET        reduce using rule 83 (push_bool_operand -> .)
    COMMA           reduce using rule 83 (push_bool_operand -> .)
    RPAREN          reduce using rule 83 (push_bool_operand -> .)
    SEMICOLON       reduce using rule 83 (push_bool_operand -> .)

    push_bool_operand              shift and go to state 78

state 54

    (62) term -> factor .

    TIMES           reduce using rule 62 (term -> factor .)
    DEVIDE          reduce using rule 62 (term -> factor .)
    PLUS            reduce using rule 62 (term -> factor .)
    MINUS           reduce using rule 62 (term -> factor .)
    LESSER          reduce using rule 62 (term -> factor .)
    GREATER         reduce using rule 62 (term -> factor .)
    EQUAL           reduce using rule 62 (term -> factor .)
    NOTEQUAL        reduce using rule 62 (term -> factor .)
    LESSEROREQUAL   reduce using rule 62 (term -> factor .)
    GREATEROREQUAL  reduce using rule 62 (term -> factor .)
    AND             reduce using rule 62 (term -> factor .)
    OR              reduce using rule 62 (term -> factor .)
    RBRACKET        reduce using rule 62 (term -> factor .)
    COMMA           reduce using rule 62 (term -> factor .)
    RPAREN          reduce using rule 62 (term -> factor .)
    SEMICOLON       reduce using rule 62 (term -> factor .)


state 55

    (112) predefined -> drawcircle .

    TIMES           reduce using rule 112 (predefined -> drawcircle .)
    DEVIDE          reduce using rule 112 (predefined -> drawcircle .)
    PLUS            reduce using rule 112 (predefined -> drawcircle .)
    MINUS           reduce using rule 112 (predefined -> drawcircle .)
    LESSER          reduce using rule 112 (predefined -> drawcircle .)
    GREATER         reduce using rule 112 (predefined -> drawcircle .)
    EQUAL           reduce using rule 112 (predefined -> drawcircle .)
    NOTEQUAL        reduce using rule 112 (predefined -> drawcircle .)
    LESSEROREQUAL   reduce using rule 112 (predefined -> drawcircle .)
    GREATEROREQUAL  reduce using rule 112 (predefined -> drawcircle .)
    AND             reduce using rule 112 (predefined -> drawcircle .)
    OR              reduce using rule 112 (predefined -> drawcircle .)
    RBRACKET        reduce using rule 112 (predefined -> drawcircle .)
    COMMA           reduce using rule 112 (predefined -> drawcircle .)
    RPAREN          reduce using rule 112 (predefined -> drawcircle .)
    SEMICOLON       reduce using rule 112 (predefined -> drawcircle .)
    ID              reduce using rule 112 (predefined -> drawcircle .)
    IF              reduce using rule 112 (predefined -> drawcircle .)
    PRINT           reduce using rule 112 (predefined -> drawcircle .)
    WHILE           reduce using rule 112 (predefined -> drawcircle .)
    RETURN          reduce using rule 112 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 112 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 112 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 112 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 112 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 112 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 112 (predefined -> drawcircle .)
    RBRACE          reduce using rule 112 (predefined -> drawcircle .)


state 56

    (46) expression -> exp .
    (56) exp -> exp . mathoperators1 push_operator term do_math_operation1
    (58) mathoperators1 -> . PLUS
    (59) mathoperators1 -> . MINUS

    LESSER          reduce using rule 46 (expression -> exp .)
    GREATER         reduce using rule 46 (expression -> exp .)
    EQUAL           reduce using rule 46 (expression -> exp .)
    NOTEQUAL        reduce using rule 46 (expression -> exp .)
    LESSEROREQUAL   reduce using rule 46 (expression -> exp .)
    GREATEROREQUAL  reduce using rule 46 (expression -> exp .)
    AND             reduce using rule 46 (expression -> exp .)
    OR              reduce using rule 46 (expression -> exp .)
    RBRACKET        reduce using rule 46 (expression -> exp .)
    COMMA           reduce using rule 46 (expression -> exp .)
    RPAREN          reduce using rule 46 (expression -> exp .)
    SEMICOLON       reduce using rule 46 (expression -> exp .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 81

    mathoperators1                 shift and go to state 80

state 57

    (114) predefined -> drawpolygon .

    TIMES           reduce using rule 114 (predefined -> drawpolygon .)
    DEVIDE          reduce using rule 114 (predefined -> drawpolygon .)
    PLUS            reduce using rule 114 (predefined -> drawpolygon .)
    MINUS           reduce using rule 114 (predefined -> drawpolygon .)
    LESSER          reduce using rule 114 (predefined -> drawpolygon .)
    GREATER         reduce using rule 114 (predefined -> drawpolygon .)
    EQUAL           reduce using rule 114 (predefined -> drawpolygon .)
    NOTEQUAL        reduce using rule 114 (predefined -> drawpolygon .)
    LESSEROREQUAL   reduce using rule 114 (predefined -> drawpolygon .)
    GREATEROREQUAL  reduce using rule 114 (predefined -> drawpolygon .)
    AND             reduce using rule 114 (predefined -> drawpolygon .)
    OR              reduce using rule 114 (predefined -> drawpolygon .)
    RBRACKET        reduce using rule 114 (predefined -> drawpolygon .)
    COMMA           reduce using rule 114 (predefined -> drawpolygon .)
    RPAREN          reduce using rule 114 (predefined -> drawpolygon .)
    SEMICOLON       reduce using rule 114 (predefined -> drawpolygon .)
    ID              reduce using rule 114 (predefined -> drawpolygon .)
    IF              reduce using rule 114 (predefined -> drawpolygon .)
    PRINT           reduce using rule 114 (predefined -> drawpolygon .)
    WHILE           reduce using rule 114 (predefined -> drawpolygon .)
    RETURN          reduce using rule 114 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 114 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 114 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 114 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 114 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 114 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 114 (predefined -> drawpolygon .)
    RBRACE          reduce using rule 114 (predefined -> drawpolygon .)


state 58

    (116) drawsquare -> DRAWSQUARE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 82


state 59

    (66) factor -> LPAREN . push_false_bottom sexpression RPAREN pop_false_bottom
    (68) push_false_bottom -> .

    NOT             reduce using rule 68 (push_false_bottom -> .)
    LPAREN          reduce using rule 68 (push_false_bottom -> .)
    ID              reduce using rule 68 (push_false_bottom -> .)
    FLOAT           reduce using rule 68 (push_false_bottom -> .)
    INT             reduce using rule 68 (push_false_bottom -> .)
    STRING          reduce using rule 68 (push_false_bottom -> .)
    TRUE            reduce using rule 68 (push_false_bottom -> .)
    FALSE           reduce using rule 68 (push_false_bottom -> .)
    DRAWLINE        reduce using rule 68 (push_false_bottom -> .)
    DRAWSQUARE      reduce using rule 68 (push_false_bottom -> .)
    DRAWTRIANGLE    reduce using rule 68 (push_false_bottom -> .)
    DRAWCIRCLE      reduce using rule 68 (push_false_bottom -> .)
    DRAWCURVE       reduce using rule 68 (push_false_bottom -> .)
    DRAWPOLYGON     reduce using rule 68 (push_false_bottom -> .)

    push_false_bottom              shift and go to state 83

state 60

    (115) drawline -> DRAWLINE . LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 61

    (70) varConst -> ID . push_id_operand
    (85) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (35) push_id_operand -> .

    LPAREN          shift and go to state 85
    TIMES           reduce using rule 35 (push_id_operand -> .)
    DEVIDE          reduce using rule 35 (push_id_operand -> .)
    PLUS            reduce using rule 35 (push_id_operand -> .)
    MINUS           reduce using rule 35 (push_id_operand -> .)
    LESSER          reduce using rule 35 (push_id_operand -> .)
    GREATER         reduce using rule 35 (push_id_operand -> .)
    EQUAL           reduce using rule 35 (push_id_operand -> .)
    NOTEQUAL        reduce using rule 35 (push_id_operand -> .)
    LESSEROREQUAL   reduce using rule 35 (push_id_operand -> .)
    GREATEROREQUAL  reduce using rule 35 (push_id_operand -> .)
    AND             reduce using rule 35 (push_id_operand -> .)
    OR              reduce using rule 35 (push_id_operand -> .)
    RBRACKET        reduce using rule 35 (push_id_operand -> .)
    COMMA           reduce using rule 35 (push_id_operand -> .)
    RPAREN          reduce using rule 35 (push_id_operand -> .)
    SEMICOLON       reduce using rule 35 (push_id_operand -> .)

    push_id_operand                shift and go to state 86

state 62

    (57) exp -> term .
    (61) term -> term . mathoperators2 push_operator factor do_math_operation2
    (63) mathoperators2 -> . TIMES
    (64) mathoperators2 -> . DEVIDE

    PLUS            reduce using rule 57 (exp -> term .)
    MINUS           reduce using rule 57 (exp -> term .)
    LESSER          reduce using rule 57 (exp -> term .)
    GREATER         reduce using rule 57 (exp -> term .)
    EQUAL           reduce using rule 57 (exp -> term .)
    NOTEQUAL        reduce using rule 57 (exp -> term .)
    LESSEROREQUAL   reduce using rule 57 (exp -> term .)
    GREATEROREQUAL  reduce using rule 57 (exp -> term .)
    AND             reduce using rule 57 (exp -> term .)
    OR              reduce using rule 57 (exp -> term .)
    RBRACKET        reduce using rule 57 (exp -> term .)
    COMMA           reduce using rule 57 (exp -> term .)
    RPAREN          reduce using rule 57 (exp -> term .)
    SEMICOLON       reduce using rule 57 (exp -> term .)
    TIMES           shift and go to state 88
    DEVIDE          shift and go to state 87

    mathoperators2                 shift and go to state 89

state 63

    (120) drawpolygon -> DRAWPOLYGON . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 64

    (72) varConst -> INT . push_int_operand
    (82) push_int_operand -> .

    TIMES           reduce using rule 82 (push_int_operand -> .)
    DEVIDE          reduce using rule 82 (push_int_operand -> .)
    PLUS            reduce using rule 82 (push_int_operand -> .)
    MINUS           reduce using rule 82 (push_int_operand -> .)
    LESSER          reduce using rule 82 (push_int_operand -> .)
    GREATER         reduce using rule 82 (push_int_operand -> .)
    EQUAL           reduce using rule 82 (push_int_operand -> .)
    NOTEQUAL        reduce using rule 82 (push_int_operand -> .)
    LESSEROREQUAL   reduce using rule 82 (push_int_operand -> .)
    GREATEROREQUAL  reduce using rule 82 (push_int_operand -> .)
    AND             reduce using rule 82 (push_int_operand -> .)
    OR              reduce using rule 82 (push_int_operand -> .)
    RBRACKET        reduce using rule 82 (push_int_operand -> .)
    COMMA           reduce using rule 82 (push_int_operand -> .)
    RPAREN          reduce using rule 82 (push_int_operand -> .)
    SEMICOLON       reduce using rule 82 (push_int_operand -> .)

    push_int_operand               shift and go to state 91

state 65

    (71) varConst -> FLOAT . push_float_operand
    (81) push_float_operand -> .

    TIMES           reduce using rule 81 (push_float_operand -> .)
    DEVIDE          reduce using rule 81 (push_float_operand -> .)
    PLUS            reduce using rule 81 (push_float_operand -> .)
    MINUS           reduce using rule 81 (push_float_operand -> .)
    LESSER          reduce using rule 81 (push_float_operand -> .)
    GREATER         reduce using rule 81 (push_float_operand -> .)
    EQUAL           reduce using rule 81 (push_float_operand -> .)
    NOTEQUAL        reduce using rule 81 (push_float_operand -> .)
    LESSEROREQUAL   reduce using rule 81 (push_float_operand -> .)
    GREATEROREQUAL  reduce using rule 81 (push_float_operand -> .)
    AND             reduce using rule 81 (push_float_operand -> .)
    OR              reduce using rule 81 (push_float_operand -> .)
    RBRACKET        reduce using rule 81 (push_float_operand -> .)
    COMMA           reduce using rule 81 (push_float_operand -> .)
    RPAREN          reduce using rule 81 (push_float_operand -> .)
    SEMICOLON       reduce using rule 81 (push_float_operand -> .)

    push_float_operand             shift and go to state 92

state 66

    (119) drawcurve -> DRAWCURVE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 93


state 67

    (76) varConst -> functioncall .

    TIMES           reduce using rule 76 (varConst -> functioncall .)
    DEVIDE          reduce using rule 76 (varConst -> functioncall .)
    PLUS            reduce using rule 76 (varConst -> functioncall .)
    MINUS           reduce using rule 76 (varConst -> functioncall .)
    LESSER          reduce using rule 76 (varConst -> functioncall .)
    GREATER         reduce using rule 76 (varConst -> functioncall .)
    EQUAL           reduce using rule 76 (varConst -> functioncall .)
    NOTEQUAL        reduce using rule 76 (varConst -> functioncall .)
    LESSEROREQUAL   reduce using rule 76 (varConst -> functioncall .)
    GREATEROREQUAL  reduce using rule 76 (varConst -> functioncall .)
    AND             reduce using rule 76 (varConst -> functioncall .)
    OR              reduce using rule 76 (varConst -> functioncall .)
    RBRACKET        reduce using rule 76 (varConst -> functioncall .)
    COMMA           reduce using rule 76 (varConst -> functioncall .)
    RPAREN          reduce using rule 76 (varConst -> functioncall .)
    SEMICOLON       reduce using rule 76 (varConst -> functioncall .)


state 68

    (41) sexpression -> negation expression . do_not_operation
    (45) expression -> expression . relationaloperators push_operator exp do_relational_operation
    (44) do_not_operation -> .
    (47) relationaloperators -> . LESSER
    (48) relationaloperators -> . GREATER
    (49) relationaloperators -> . EQUAL
    (50) relationaloperators -> . NOTEQUAL
    (51) relationaloperators -> . LESSEROREQUAL
    (52) relationaloperators -> . GREATEROREQUAL
    (53) relationaloperators -> . AND
    (54) relationaloperators -> . OR

    RBRACKET        reduce using rule 44 (do_not_operation -> .)
    COMMA           reduce using rule 44 (do_not_operation -> .)
    RPAREN          reduce using rule 44 (do_not_operation -> .)
    SEMICOLON       reduce using rule 44 (do_not_operation -> .)
    LESSER          shift and go to state 101
    GREATER         shift and go to state 97
    EQUAL           shift and go to state 100
    NOTEQUAL        shift and go to state 98
    LESSEROREQUAL   shift and go to state 99
    GREATEROREQUAL  shift and go to state 102
    AND             shift and go to state 94
    OR              shift and go to state 103

    relationaloperators            shift and go to state 95
    do_not_operation               shift and go to state 96

state 69

    (28) array -> LBRACKET sexpression RBRACKET .

    SEMICOLON       reduce using rule 28 (array -> LBRACKET sexpression RBRACKET .)


state 70

    (42) negation -> NOT push_operator .

    LPAREN          reduce using rule 42 (negation -> NOT push_operator .)
    ID              reduce using rule 42 (negation -> NOT push_operator .)
    FLOAT           reduce using rule 42 (negation -> NOT push_operator .)
    INT             reduce using rule 42 (negation -> NOT push_operator .)
    STRING          reduce using rule 42 (negation -> NOT push_operator .)
    TRUE            reduce using rule 42 (negation -> NOT push_operator .)
    FALSE           reduce using rule 42 (negation -> NOT push_operator .)
    DRAWLINE        reduce using rule 42 (negation -> NOT push_operator .)
    DRAWSQUARE      reduce using rule 42 (negation -> NOT push_operator .)
    DRAWTRIANGLE    reduce using rule 42 (negation -> NOT push_operator .)
    DRAWCIRCLE      reduce using rule 42 (negation -> NOT push_operator .)
    DRAWCURVE       reduce using rule 42 (negation -> NOT push_operator .)
    DRAWPOLYGON     reduce using rule 42 (negation -> NOT push_operator .)


state 71

    (25) vars -> VAR type ID array store_variable SEMICOLON . vars
    (25) vars -> . VAR type ID array store_variable SEMICOLON vars
    (26) vars -> . empty
    (121) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 121 (empty -> .)
    INTTYPE         reduce using rule 121 (empty -> .)

    empty                          shift and go to state 9
    vars                           shift and go to state 104

state 72

    (4) main -> INTTYPE MAIN LPAREN RPAREN add_jump_to_main . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 106

state 73

    (96) parameterprima -> type ID .
    (97) parameterprima -> type ID . COMMA parameterprima

    RPAREN          reduce using rule 96 (parameterprima -> type ID .)
    COMMA           shift and go to state 107


state 74

    (89) function -> FUNCTION functiontype ID LPAREN parameter RPAREN . block function
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 108

state 75

    (117) drawtriangle -> DRAWTRIANGLE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 109
    empty                          shift and go to state 35

state 76

    (74) varConst -> STRING push_string_operand .

    TIMES           reduce using rule 74 (varConst -> STRING push_string_operand .)
    DEVIDE          reduce using rule 74 (varConst -> STRING push_string_operand .)
    PLUS            reduce using rule 74 (varConst -> STRING push_string_operand .)
    MINUS           reduce using rule 74 (varConst -> STRING push_string_operand .)
    LESSER          reduce using rule 74 (varConst -> STRING push_string_operand .)
    GREATER         reduce using rule 74 (varConst -> STRING push_string_operand .)
    EQUAL           reduce using rule 74 (varConst -> STRING push_string_operand .)
    NOTEQUAL        reduce using rule 74 (varConst -> STRING push_string_operand .)
    LESSEROREQUAL   reduce using rule 74 (varConst -> STRING push_string_operand .)
    GREATEROREQUAL  reduce using rule 74 (varConst -> STRING push_string_operand .)
    AND             reduce using rule 74 (varConst -> STRING push_string_operand .)
    OR              reduce using rule 74 (varConst -> STRING push_string_operand .)
    RBRACKET        reduce using rule 74 (varConst -> STRING push_string_operand .)
    COMMA           reduce using rule 74 (varConst -> STRING push_string_operand .)
    RPAREN          reduce using rule 74 (varConst -> STRING push_string_operand .)
    SEMICOLON       reduce using rule 74 (varConst -> STRING push_string_operand .)


state 77

    (118) drawcircle -> DRAWCIRCLE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 110
    empty                          shift and go to state 35

state 78

    (73) varConst -> bool push_bool_operand .

    TIMES           reduce using rule 73 (varConst -> bool push_bool_operand .)
    DEVIDE          reduce using rule 73 (varConst -> bool push_bool_operand .)
    PLUS            reduce using rule 73 (varConst -> bool push_bool_operand .)
    MINUS           reduce using rule 73 (varConst -> bool push_bool_operand .)
    LESSER          reduce using rule 73 (varConst -> bool push_bool_operand .)
    GREATER         reduce using rule 73 (varConst -> bool push_bool_operand .)
    EQUAL           reduce using rule 73 (varConst -> bool push_bool_operand .)
    NOTEQUAL        reduce using rule 73 (varConst -> bool push_bool_operand .)
    LESSEROREQUAL   reduce using rule 73 (varConst -> bool push_bool_operand .)
    GREATEROREQUAL  reduce using rule 73 (varConst -> bool push_bool_operand .)
    AND             reduce using rule 73 (varConst -> bool push_bool_operand .)
    OR              reduce using rule 73 (varConst -> bool push_bool_operand .)
    RBRACKET        reduce using rule 73 (varConst -> bool push_bool_operand .)
    COMMA           reduce using rule 73 (varConst -> bool push_bool_operand .)
    RPAREN          reduce using rule 73 (varConst -> bool push_bool_operand .)
    SEMICOLON       reduce using rule 73 (varConst -> bool push_bool_operand .)


state 79

    (58) mathoperators1 -> PLUS .

    LPAREN          reduce using rule 58 (mathoperators1 -> PLUS .)
    ID              reduce using rule 58 (mathoperators1 -> PLUS .)
    FLOAT           reduce using rule 58 (mathoperators1 -> PLUS .)
    INT             reduce using rule 58 (mathoperators1 -> PLUS .)
    STRING          reduce using rule 58 (mathoperators1 -> PLUS .)
    TRUE            reduce using rule 58 (mathoperators1 -> PLUS .)
    FALSE           reduce using rule 58 (mathoperators1 -> PLUS .)
    DRAWLINE        reduce using rule 58 (mathoperators1 -> PLUS .)
    DRAWSQUARE      reduce using rule 58 (mathoperators1 -> PLUS .)
    DRAWTRIANGLE    reduce using rule 58 (mathoperators1 -> PLUS .)
    DRAWCIRCLE      reduce using rule 58 (mathoperators1 -> PLUS .)
    DRAWCURVE       reduce using rule 58 (mathoperators1 -> PLUS .)
    DRAWPOLYGON     reduce using rule 58 (mathoperators1 -> PLUS .)


state 80

    (56) exp -> exp mathoperators1 . push_operator term do_math_operation1
    (36) push_operator -> .

    LPAREN          reduce using rule 36 (push_operator -> .)
    ID              reduce using rule 36 (push_operator -> .)
    FLOAT           reduce using rule 36 (push_operator -> .)
    INT             reduce using rule 36 (push_operator -> .)
    STRING          reduce using rule 36 (push_operator -> .)
    TRUE            reduce using rule 36 (push_operator -> .)
    FALSE           reduce using rule 36 (push_operator -> .)
    DRAWLINE        reduce using rule 36 (push_operator -> .)
    DRAWSQUARE      reduce using rule 36 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 36 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 36 (push_operator -> .)
    DRAWCURVE       reduce using rule 36 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 36 (push_operator -> .)

    push_operator                  shift and go to state 111

state 81

    (59) mathoperators1 -> MINUS .

    LPAREN          reduce using rule 59 (mathoperators1 -> MINUS .)
    ID              reduce using rule 59 (mathoperators1 -> MINUS .)
    FLOAT           reduce using rule 59 (mathoperators1 -> MINUS .)
    INT             reduce using rule 59 (mathoperators1 -> MINUS .)
    STRING          reduce using rule 59 (mathoperators1 -> MINUS .)
    TRUE            reduce using rule 59 (mathoperators1 -> MINUS .)
    FALSE           reduce using rule 59 (mathoperators1 -> MINUS .)
    DRAWLINE        reduce using rule 59 (mathoperators1 -> MINUS .)
    DRAWSQUARE      reduce using rule 59 (mathoperators1 -> MINUS .)
    DRAWTRIANGLE    reduce using rule 59 (mathoperators1 -> MINUS .)
    DRAWCIRCLE      reduce using rule 59 (mathoperators1 -> MINUS .)
    DRAWCURVE       reduce using rule 59 (mathoperators1 -> MINUS .)
    DRAWPOLYGON     reduce using rule 59 (mathoperators1 -> MINUS .)


state 82

    (116) drawsquare -> DRAWSQUARE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 112
    empty                          shift and go to state 35

state 83

    (66) factor -> LPAREN push_false_bottom . sexpression RPAREN pop_false_bottom
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    sexpression                    shift and go to state 113
    negation                       shift and go to state 32
    empty                          shift and go to state 35

state 84

    (115) drawline -> DRAWLINE LPAREN . sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 114
    empty                          shift and go to state 35

state 85

    (85) functioncall -> ID LPAREN . funcparam RPAREN SEMICOLON
    (86) funcparam -> . empty
    (87) funcparam -> . sexpression
    (88) funcparam -> . sexpression COMMA funcparam
    (121) empty -> .
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty

    RPAREN          reduce using rule 121 (empty -> .)
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)
    NOT             shift and go to state 34

    funcparam                      shift and go to state 116
    negation                       shift and go to state 32
    sexpression                    shift and go to state 115
    empty                          shift and go to state 117

state 86

    (70) varConst -> ID push_id_operand .

    TIMES           reduce using rule 70 (varConst -> ID push_id_operand .)
    DEVIDE          reduce using rule 70 (varConst -> ID push_id_operand .)
    PLUS            reduce using rule 70 (varConst -> ID push_id_operand .)
    MINUS           reduce using rule 70 (varConst -> ID push_id_operand .)
    LESSER          reduce using rule 70 (varConst -> ID push_id_operand .)
    GREATER         reduce using rule 70 (varConst -> ID push_id_operand .)
    EQUAL           reduce using rule 70 (varConst -> ID push_id_operand .)
    NOTEQUAL        reduce using rule 70 (varConst -> ID push_id_operand .)
    LESSEROREQUAL   reduce using rule 70 (varConst -> ID push_id_operand .)
    GREATEROREQUAL  reduce using rule 70 (varConst -> ID push_id_operand .)
    AND             reduce using rule 70 (varConst -> ID push_id_operand .)
    OR              reduce using rule 70 (varConst -> ID push_id_operand .)
    RBRACKET        reduce using rule 70 (varConst -> ID push_id_operand .)
    COMMA           reduce using rule 70 (varConst -> ID push_id_operand .)
    RPAREN          reduce using rule 70 (varConst -> ID push_id_operand .)
    SEMICOLON       reduce using rule 70 (varConst -> ID push_id_operand .)


state 87

    (64) mathoperators2 -> DEVIDE .

    LPAREN          reduce using rule 64 (mathoperators2 -> DEVIDE .)
    ID              reduce using rule 64 (mathoperators2 -> DEVIDE .)
    FLOAT           reduce using rule 64 (mathoperators2 -> DEVIDE .)
    INT             reduce using rule 64 (mathoperators2 -> DEVIDE .)
    STRING          reduce using rule 64 (mathoperators2 -> DEVIDE .)
    TRUE            reduce using rule 64 (mathoperators2 -> DEVIDE .)
    FALSE           reduce using rule 64 (mathoperators2 -> DEVIDE .)
    DRAWLINE        reduce using rule 64 (mathoperators2 -> DEVIDE .)
    DRAWSQUARE      reduce using rule 64 (mathoperators2 -> DEVIDE .)
    DRAWTRIANGLE    reduce using rule 64 (mathoperators2 -> DEVIDE .)
    DRAWCIRCLE      reduce using rule 64 (mathoperators2 -> DEVIDE .)
    DRAWCURVE       reduce using rule 64 (mathoperators2 -> DEVIDE .)
    DRAWPOLYGON     reduce using rule 64 (mathoperators2 -> DEVIDE .)


state 88

    (63) mathoperators2 -> TIMES .

    LPAREN          reduce using rule 63 (mathoperators2 -> TIMES .)
    ID              reduce using rule 63 (mathoperators2 -> TIMES .)
    FLOAT           reduce using rule 63 (mathoperators2 -> TIMES .)
    INT             reduce using rule 63 (mathoperators2 -> TIMES .)
    STRING          reduce using rule 63 (mathoperators2 -> TIMES .)
    TRUE            reduce using rule 63 (mathoperators2 -> TIMES .)
    FALSE           reduce using rule 63 (mathoperators2 -> TIMES .)
    DRAWLINE        reduce using rule 63 (mathoperators2 -> TIMES .)
    DRAWSQUARE      reduce using rule 63 (mathoperators2 -> TIMES .)
    DRAWTRIANGLE    reduce using rule 63 (mathoperators2 -> TIMES .)
    DRAWCIRCLE      reduce using rule 63 (mathoperators2 -> TIMES .)
    DRAWCURVE       reduce using rule 63 (mathoperators2 -> TIMES .)
    DRAWPOLYGON     reduce using rule 63 (mathoperators2 -> TIMES .)


state 89

    (61) term -> term mathoperators2 . push_operator factor do_math_operation2
    (36) push_operator -> .

    LPAREN          reduce using rule 36 (push_operator -> .)
    ID              reduce using rule 36 (push_operator -> .)
    FLOAT           reduce using rule 36 (push_operator -> .)
    INT             reduce using rule 36 (push_operator -> .)
    STRING          reduce using rule 36 (push_operator -> .)
    TRUE            reduce using rule 36 (push_operator -> .)
    FALSE           reduce using rule 36 (push_operator -> .)
    DRAWLINE        reduce using rule 36 (push_operator -> .)
    DRAWSQUARE      reduce using rule 36 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 36 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 36 (push_operator -> .)
    DRAWCURVE       reduce using rule 36 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 36 (push_operator -> .)

    push_operator                  shift and go to state 118

state 90

    (120) drawpolygon -> DRAWPOLYGON LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 119
    empty                          shift and go to state 35

state 91

    (72) varConst -> INT push_int_operand .

    TIMES           reduce using rule 72 (varConst -> INT push_int_operand .)
    DEVIDE          reduce using rule 72 (varConst -> INT push_int_operand .)
    PLUS            reduce using rule 72 (varConst -> INT push_int_operand .)
    MINUS           reduce using rule 72 (varConst -> INT push_int_operand .)
    LESSER          reduce using rule 72 (varConst -> INT push_int_operand .)
    GREATER         reduce using rule 72 (varConst -> INT push_int_operand .)
    EQUAL           reduce using rule 72 (varConst -> INT push_int_operand .)
    NOTEQUAL        reduce using rule 72 (varConst -> INT push_int_operand .)
    LESSEROREQUAL   reduce using rule 72 (varConst -> INT push_int_operand .)
    GREATEROREQUAL  reduce using rule 72 (varConst -> INT push_int_operand .)
    AND             reduce using rule 72 (varConst -> INT push_int_operand .)
    OR              reduce using rule 72 (varConst -> INT push_int_operand .)
    RBRACKET        reduce using rule 72 (varConst -> INT push_int_operand .)
    COMMA           reduce using rule 72 (varConst -> INT push_int_operand .)
    RPAREN          reduce using rule 72 (varConst -> INT push_int_operand .)
    SEMICOLON       reduce using rule 72 (varConst -> INT push_int_operand .)


state 92

    (71) varConst -> FLOAT push_float_operand .

    TIMES           reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    DEVIDE          reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    PLUS            reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    MINUS           reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    LESSER          reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    GREATER         reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    EQUAL           reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    NOTEQUAL        reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    LESSEROREQUAL   reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    GREATEROREQUAL  reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    AND             reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    OR              reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    RBRACKET        reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    COMMA           reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    RPAREN          reduce using rule 71 (varConst -> FLOAT push_float_operand .)
    SEMICOLON       reduce using rule 71 (varConst -> FLOAT push_float_operand .)


state 93

    (119) drawcurve -> DRAWCURVE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 120
    empty                          shift and go to state 35

state 94

    (53) relationaloperators -> AND .

    LPAREN          reduce using rule 53 (relationaloperators -> AND .)
    ID              reduce using rule 53 (relationaloperators -> AND .)
    FLOAT           reduce using rule 53 (relationaloperators -> AND .)
    INT             reduce using rule 53 (relationaloperators -> AND .)
    STRING          reduce using rule 53 (relationaloperators -> AND .)
    TRUE            reduce using rule 53 (relationaloperators -> AND .)
    FALSE           reduce using rule 53 (relationaloperators -> AND .)
    DRAWLINE        reduce using rule 53 (relationaloperators -> AND .)
    DRAWSQUARE      reduce using rule 53 (relationaloperators -> AND .)
    DRAWTRIANGLE    reduce using rule 53 (relationaloperators -> AND .)
    DRAWCIRCLE      reduce using rule 53 (relationaloperators -> AND .)
    DRAWCURVE       reduce using rule 53 (relationaloperators -> AND .)
    DRAWPOLYGON     reduce using rule 53 (relationaloperators -> AND .)


state 95

    (45) expression -> expression relationaloperators . push_operator exp do_relational_operation
    (36) push_operator -> .

    LPAREN          reduce using rule 36 (push_operator -> .)
    ID              reduce using rule 36 (push_operator -> .)
    FLOAT           reduce using rule 36 (push_operator -> .)
    INT             reduce using rule 36 (push_operator -> .)
    STRING          reduce using rule 36 (push_operator -> .)
    TRUE            reduce using rule 36 (push_operator -> .)
    FALSE           reduce using rule 36 (push_operator -> .)
    DRAWLINE        reduce using rule 36 (push_operator -> .)
    DRAWSQUARE      reduce using rule 36 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 36 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 36 (push_operator -> .)
    DRAWCURVE       reduce using rule 36 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 36 (push_operator -> .)

    push_operator                  shift and go to state 121

state 96

    (41) sexpression -> negation expression do_not_operation .

    SEMICOLON       reduce using rule 41 (sexpression -> negation expression do_not_operation .)
    COMMA           reduce using rule 41 (sexpression -> negation expression do_not_operation .)
    RPAREN          reduce using rule 41 (sexpression -> negation expression do_not_operation .)
    RBRACKET        reduce using rule 41 (sexpression -> negation expression do_not_operation .)


state 97

    (48) relationaloperators -> GREATER .

    LPAREN          reduce using rule 48 (relationaloperators -> GREATER .)
    ID              reduce using rule 48 (relationaloperators -> GREATER .)
    FLOAT           reduce using rule 48 (relationaloperators -> GREATER .)
    INT             reduce using rule 48 (relationaloperators -> GREATER .)
    STRING          reduce using rule 48 (relationaloperators -> GREATER .)
    TRUE            reduce using rule 48 (relationaloperators -> GREATER .)
    FALSE           reduce using rule 48 (relationaloperators -> GREATER .)
    DRAWLINE        reduce using rule 48 (relationaloperators -> GREATER .)
    DRAWSQUARE      reduce using rule 48 (relationaloperators -> GREATER .)
    DRAWTRIANGLE    reduce using rule 48 (relationaloperators -> GREATER .)
    DRAWCIRCLE      reduce using rule 48 (relationaloperators -> GREATER .)
    DRAWCURVE       reduce using rule 48 (relationaloperators -> GREATER .)
    DRAWPOLYGON     reduce using rule 48 (relationaloperators -> GREATER .)


state 98

    (50) relationaloperators -> NOTEQUAL .

    LPAREN          reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    ID              reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    FLOAT           reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    INT             reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    STRING          reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    TRUE            reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    FALSE           reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    DRAWLINE        reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    DRAWSQUARE      reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    DRAWTRIANGLE    reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    DRAWCIRCLE      reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    DRAWCURVE       reduce using rule 50 (relationaloperators -> NOTEQUAL .)
    DRAWPOLYGON     reduce using rule 50 (relationaloperators -> NOTEQUAL .)


state 99

    (51) relationaloperators -> LESSEROREQUAL .

    LPAREN          reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    ID              reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    FLOAT           reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    INT             reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    STRING          reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    TRUE            reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    FALSE           reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    DRAWLINE        reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    DRAWSQUARE      reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    DRAWTRIANGLE    reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    DRAWCIRCLE      reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    DRAWCURVE       reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)
    DRAWPOLYGON     reduce using rule 51 (relationaloperators -> LESSEROREQUAL .)


state 100

    (49) relationaloperators -> EQUAL .

    LPAREN          reduce using rule 49 (relationaloperators -> EQUAL .)
    ID              reduce using rule 49 (relationaloperators -> EQUAL .)
    FLOAT           reduce using rule 49 (relationaloperators -> EQUAL .)
    INT             reduce using rule 49 (relationaloperators -> EQUAL .)
    STRING          reduce using rule 49 (relationaloperators -> EQUAL .)
    TRUE            reduce using rule 49 (relationaloperators -> EQUAL .)
    FALSE           reduce using rule 49 (relationaloperators -> EQUAL .)
    DRAWLINE        reduce using rule 49 (relationaloperators -> EQUAL .)
    DRAWSQUARE      reduce using rule 49 (relationaloperators -> EQUAL .)
    DRAWTRIANGLE    reduce using rule 49 (relationaloperators -> EQUAL .)
    DRAWCIRCLE      reduce using rule 49 (relationaloperators -> EQUAL .)
    DRAWCURVE       reduce using rule 49 (relationaloperators -> EQUAL .)
    DRAWPOLYGON     reduce using rule 49 (relationaloperators -> EQUAL .)


state 101

    (47) relationaloperators -> LESSER .

    LPAREN          reduce using rule 47 (relationaloperators -> LESSER .)
    ID              reduce using rule 47 (relationaloperators -> LESSER .)
    FLOAT           reduce using rule 47 (relationaloperators -> LESSER .)
    INT             reduce using rule 47 (relationaloperators -> LESSER .)
    STRING          reduce using rule 47 (relationaloperators -> LESSER .)
    TRUE            reduce using rule 47 (relationaloperators -> LESSER .)
    FALSE           reduce using rule 47 (relationaloperators -> LESSER .)
    DRAWLINE        reduce using rule 47 (relationaloperators -> LESSER .)
    DRAWSQUARE      reduce using rule 47 (relationaloperators -> LESSER .)
    DRAWTRIANGLE    reduce using rule 47 (relationaloperators -> LESSER .)
    DRAWCIRCLE      reduce using rule 47 (relationaloperators -> LESSER .)
    DRAWCURVE       reduce using rule 47 (relationaloperators -> LESSER .)
    DRAWPOLYGON     reduce using rule 47 (relationaloperators -> LESSER .)


state 102

    (52) relationaloperators -> GREATEROREQUAL .

    LPAREN          reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    ID              reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    FLOAT           reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    INT             reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    STRING          reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    TRUE            reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    FALSE           reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    DRAWLINE        reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    DRAWSQUARE      reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    DRAWTRIANGLE    reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    DRAWCIRCLE      reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    DRAWCURVE       reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)
    DRAWPOLYGON     reduce using rule 52 (relationaloperators -> GREATEROREQUAL .)


state 103

    (54) relationaloperators -> OR .

    LPAREN          reduce using rule 54 (relationaloperators -> OR .)
    ID              reduce using rule 54 (relationaloperators -> OR .)
    FLOAT           reduce using rule 54 (relationaloperators -> OR .)
    INT             reduce using rule 54 (relationaloperators -> OR .)
    STRING          reduce using rule 54 (relationaloperators -> OR .)
    TRUE            reduce using rule 54 (relationaloperators -> OR .)
    FALSE           reduce using rule 54 (relationaloperators -> OR .)
    DRAWLINE        reduce using rule 54 (relationaloperators -> OR .)
    DRAWSQUARE      reduce using rule 54 (relationaloperators -> OR .)
    DRAWTRIANGLE    reduce using rule 54 (relationaloperators -> OR .)
    DRAWCIRCLE      reduce using rule 54 (relationaloperators -> OR .)
    DRAWCURVE       reduce using rule 54 (relationaloperators -> OR .)
    DRAWPOLYGON     reduce using rule 54 (relationaloperators -> OR .)


state 104

    (25) vars -> VAR type ID array store_variable SEMICOLON vars .

    FUNCTION        reduce using rule 25 (vars -> VAR type ID array store_variable SEMICOLON vars .)
    INTTYPE         reduce using rule 25 (vars -> VAR type ID array store_variable SEMICOLON vars .)


state 105

    (7) block -> LBRACE . blockprima RBRACE
    (8) blockprima -> . statute blockprima
    (9) blockprima -> . empty
    (10) statute -> . assignment
    (11) statute -> . condition
    (12) statute -> . write
    (13) statute -> . read
    (14) statute -> . cycle
    (15) statute -> . functioncall
    (16) statute -> . predefined
    (17) statute -> . return
    (121) empty -> .
    (34) assignment -> . ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (18) condition -> . IF LPAREN sexpression RPAREN do_condition_operation block else
    (98) write -> . PRINT LPAREN sexpression RPAREN SEMICOLON
    (99) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (100) cycle -> . WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (85) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (109) predefined -> . drawline
    (110) predefined -> . drawsquare
    (111) predefined -> . drawtriangle
    (112) predefined -> . drawcircle
    (113) predefined -> . drawcurve
    (114) predefined -> . drawpolygon
    (93) return -> . RETURN sexpression SEMICOLON
    (115) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (116) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (117) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 121 (empty -> .)
    ID              shift and go to state 133
    IF              shift and go to state 135
    PRINT           shift and go to state 124
    WHILE           shift and go to state 123
    RETURN          shift and go to state 122
    DRAWLINE        shift and go to state 60
    DRAWSQUARE      shift and go to state 58
    DRAWTRIANGLE    shift and go to state 44
    DRAWCIRCLE      shift and go to state 50
    DRAWCURVE       shift and go to state 66
    DRAWPOLYGON     shift and go to state 63

    drawtriangle                   shift and go to state 42
    drawcurve                      shift and go to state 45
    predefined                     shift and go to state 125
    blockprima                     shift and go to state 126
    drawline                       shift and go to state 51
    write                          shift and go to state 127
    empty                          shift and go to state 129
    return                         shift and go to state 130
    drawpolygon                    shift and go to state 57
    read                           shift and go to state 131
    assignment                     shift and go to state 132
    condition                      shift and go to state 134
    cycle                          shift and go to state 128
    statute                        shift and go to state 136
    drawcircle                     shift and go to state 55
    drawsquare                     shift and go to state 46
    functioncall                   shift and go to state 137

state 106

    (4) main -> INTTYPE MAIN LPAREN RPAREN add_jump_to_main block .

    $end            reduce using rule 4 (main -> INTTYPE MAIN LPAREN RPAREN add_jump_to_main block .)


state 107

    (97) parameterprima -> type ID COMMA . parameterprima
    (96) parameterprima -> . type ID
    (97) parameterprima -> . type ID COMMA parameterprima
    (30) type -> . INTTYPE
    (31) type -> . FLOATTYPE
    (32) type -> . STRINGTYPE
    (33) type -> . BOOLTYPE

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    parameterprima                 shift and go to state 138
    type                           shift and go to state 39

state 108

    (89) function -> FUNCTION functiontype ID LPAREN parameter RPAREN block . function
    (89) function -> . FUNCTION functiontype ID LPAREN parameter RPAREN block function
    (90) function -> . empty
    (121) empty -> .

    FUNCTION        shift and go to state 11
    INTTYPE         reduce using rule 121 (empty -> .)

    function                       shift and go to state 139
    empty                          shift and go to state 12

state 109

    (117) drawtriangle -> DRAWTRIANGLE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 140


state 110

    (118) drawcircle -> DRAWCIRCLE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 141


state 111

    (56) exp -> exp mathoperators1 push_operator . term do_math_operation1
    (61) term -> . term mathoperators2 push_operator factor do_math_operation2
    (62) term -> . factor
    (66) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (67) factor -> . varConst
    (70) varConst -> . ID push_id_operand
    (71) varConst -> . FLOAT push_float_operand
    (72) varConst -> . INT push_int_operand
    (73) varConst -> . bool push_bool_operand
    (74) varConst -> . STRING push_string_operand
    (75) varConst -> . predefined
    (76) varConst -> . functioncall
    (79) bool -> . TRUE
    (80) bool -> . FALSE
    (109) predefined -> . drawline
    (110) predefined -> . drawsquare
    (111) predefined -> . drawtriangle
    (112) predefined -> . drawcircle
    (113) predefined -> . drawcurve
    (114) predefined -> . drawpolygon
    (85) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (115) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (116) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (117) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 59
    ID              shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 64
    STRING          shift and go to state 48
    TRUE            shift and go to state 47
    FALSE           shift and go to state 52
    DRAWLINE        shift and go to state 60
    DRAWSQUARE      shift and go to state 58
    DRAWTRIANGLE    shift and go to state 44
    DRAWCIRCLE      shift and go to state 50
    DRAWCURVE       shift and go to state 66
    DRAWPOLYGON     shift and go to state 63

    drawtriangle                   shift and go to state 42
    varConst                       shift and go to state 43
    drawcurve                      shift and go to state 45
    predefined                     shift and go to state 49
    drawline                       shift and go to state 51
    bool                           shift and go to state 53
    factor                         shift and go to state 54
    drawcircle                     shift and go to state 55
    drawpolygon                    shift and go to state 57
    term                           shift and go to state 142
    drawsquare                     shift and go to state 46
    functioncall                   shift and go to state 67

state 112

    (116) drawsquare -> DRAWSQUARE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 143


state 113

    (66) factor -> LPAREN push_false_bottom sexpression . RPAREN pop_false_bottom

    RPAREN          shift and go to state 144


state 114

    (115) drawline -> DRAWLINE LPAREN sexpression . COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 145


state 115

    (87) funcparam -> sexpression .
    (88) funcparam -> sexpression . COMMA funcparam

    RPAREN          reduce using rule 87 (funcparam -> sexpression .)
    COMMA           shift and go to state 146


state 116

    (85) functioncall -> ID LPAREN funcparam . RPAREN SEMICOLON

    RPAREN          shift and go to state 147


state 117

    (86) funcparam -> empty .
    (43) negation -> empty .

    RPAREN          reduce using rule 86 (funcparam -> empty .)
    LPAREN          reduce using rule 43 (negation -> empty .)
    ID              reduce using rule 43 (negation -> empty .)
    FLOAT           reduce using rule 43 (negation -> empty .)
    INT             reduce using rule 43 (negation -> empty .)
    STRING          reduce using rule 43 (negation -> empty .)
    TRUE            reduce using rule 43 (negation -> empty .)
    FALSE           reduce using rule 43 (negation -> empty .)
    DRAWLINE        reduce using rule 43 (negation -> empty .)
    DRAWSQUARE      reduce using rule 43 (negation -> empty .)
    DRAWTRIANGLE    reduce using rule 43 (negation -> empty .)
    DRAWCIRCLE      reduce using rule 43 (negation -> empty .)
    DRAWCURVE       reduce using rule 43 (negation -> empty .)
    DRAWPOLYGON     reduce using rule 43 (negation -> empty .)


state 118

    (61) term -> term mathoperators2 push_operator . factor do_math_operation2
    (66) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (67) factor -> . varConst
    (70) varConst -> . ID push_id_operand
    (71) varConst -> . FLOAT push_float_operand
    (72) varConst -> . INT push_int_operand
    (73) varConst -> . bool push_bool_operand
    (74) varConst -> . STRING push_string_operand
    (75) varConst -> . predefined
    (76) varConst -> . functioncall
    (79) bool -> . TRUE
    (80) bool -> . FALSE
    (109) predefined -> . drawline
    (110) predefined -> . drawsquare
    (111) predefined -> . drawtriangle
    (112) predefined -> . drawcircle
    (113) predefined -> . drawcurve
    (114) predefined -> . drawpolygon
    (85) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (115) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (116) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (117) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 59
    ID              shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 64
    STRING          shift and go to state 48
    TRUE            shift and go to state 47
    FALSE           shift and go to state 52
    DRAWLINE        shift and go to state 60
    DRAWSQUARE      shift and go to state 58
    DRAWTRIANGLE    shift and go to state 44
    DRAWCIRCLE      shift and go to state 50
    DRAWCURVE       shift and go to state 66
    DRAWPOLYGON     shift and go to state 63

    drawtriangle                   shift and go to state 42
    varConst                       shift and go to state 43
    drawcurve                      shift and go to state 45
    predefined                     shift and go to state 49
    drawline                       shift and go to state 51
    bool                           shift and go to state 53
    factor                         shift and go to state 148
    functioncall                   shift and go to state 67
    drawpolygon                    shift and go to state 57
    drawsquare                     shift and go to state 46
    drawcircle                     shift and go to state 55

state 119

    (120) drawpolygon -> DRAWPOLYGON LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 149


state 120

    (119) drawcurve -> DRAWCURVE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 150


state 121

    (45) expression -> expression relationaloperators push_operator . exp do_relational_operation
    (56) exp -> . exp mathoperators1 push_operator term do_math_operation1
    (57) exp -> . term
    (61) term -> . term mathoperators2 push_operator factor do_math_operation2
    (62) term -> . factor
    (66) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (67) factor -> . varConst
    (70) varConst -> . ID push_id_operand
    (71) varConst -> . FLOAT push_float_operand
    (72) varConst -> . INT push_int_operand
    (73) varConst -> . bool push_bool_operand
    (74) varConst -> . STRING push_string_operand
    (75) varConst -> . predefined
    (76) varConst -> . functioncall
    (79) bool -> . TRUE
    (80) bool -> . FALSE
    (109) predefined -> . drawline
    (110) predefined -> . drawsquare
    (111) predefined -> . drawtriangle
    (112) predefined -> . drawcircle
    (113) predefined -> . drawcurve
    (114) predefined -> . drawpolygon
    (85) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (115) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (116) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (117) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 59
    ID              shift and go to state 61
    FLOAT           shift and go to state 65
    INT             shift and go to state 64
    STRING          shift and go to state 48
    TRUE            shift and go to state 47
    FALSE           shift and go to state 52
    DRAWLINE        shift and go to state 60
    DRAWSQUARE      shift and go to state 58
    DRAWTRIANGLE    shift and go to state 44
    DRAWCIRCLE      shift and go to state 50
    DRAWCURVE       shift and go to state 66
    DRAWPOLYGON     shift and go to state 63

    drawtriangle                   shift and go to state 42
    varConst                       shift and go to state 43
    drawcurve                      shift and go to state 45
    predefined                     shift and go to state 49
    drawline                       shift and go to state 51
    bool                           shift and go to state 53
    factor                         shift and go to state 54
    drawcircle                     shift and go to state 55
    exp                            shift and go to state 151
    drawpolygon                    shift and go to state 57
    term                           shift and go to state 62
    drawsquare                     shift and go to state 46
    functioncall                   shift and go to state 67

state 122

    (93) return -> RETURN . sexpression SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 152
    empty                          shift and go to state 35

state 123

    (100) cycle -> WHILE . push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (101) push_cycle_jump -> .

    LPAREN          reduce using rule 101 (push_cycle_jump -> .)

    push_cycle_jump                shift and go to state 153

state 124

    (98) write -> PRINT . LPAREN sexpression RPAREN SEMICOLON

    LPAREN          shift and go to state 154


state 125

    (16) statute -> predefined .

    ID              reduce using rule 16 (statute -> predefined .)
    IF              reduce using rule 16 (statute -> predefined .)
    PRINT           reduce using rule 16 (statute -> predefined .)
    WHILE           reduce using rule 16 (statute -> predefined .)
    RETURN          reduce using rule 16 (statute -> predefined .)
    DRAWLINE        reduce using rule 16 (statute -> predefined .)
    DRAWSQUARE      reduce using rule 16 (statute -> predefined .)
    DRAWTRIANGLE    reduce using rule 16 (statute -> predefined .)
    DRAWCIRCLE      reduce using rule 16 (statute -> predefined .)
    DRAWCURVE       reduce using rule 16 (statute -> predefined .)
    DRAWPOLYGON     reduce using rule 16 (statute -> predefined .)
    RBRACE          reduce using rule 16 (statute -> predefined .)


state 126

    (7) block -> LBRACE blockprima . RBRACE

    RBRACE          shift and go to state 155


state 127

    (12) statute -> write .

    ID              reduce using rule 12 (statute -> write .)
    IF              reduce using rule 12 (statute -> write .)
    PRINT           reduce using rule 12 (statute -> write .)
    WHILE           reduce using rule 12 (statute -> write .)
    RETURN          reduce using rule 12 (statute -> write .)
    DRAWLINE        reduce using rule 12 (statute -> write .)
    DRAWSQUARE      reduce using rule 12 (statute -> write .)
    DRAWTRIANGLE    reduce using rule 12 (statute -> write .)
    DRAWCIRCLE      reduce using rule 12 (statute -> write .)
    DRAWCURVE       reduce using rule 12 (statute -> write .)
    DRAWPOLYGON     reduce using rule 12 (statute -> write .)
    RBRACE          reduce using rule 12 (statute -> write .)


state 128

    (14) statute -> cycle .

    ID              reduce using rule 14 (statute -> cycle .)
    IF              reduce using rule 14 (statute -> cycle .)
    PRINT           reduce using rule 14 (statute -> cycle .)
    WHILE           reduce using rule 14 (statute -> cycle .)
    RETURN          reduce using rule 14 (statute -> cycle .)
    DRAWLINE        reduce using rule 14 (statute -> cycle .)
    DRAWSQUARE      reduce using rule 14 (statute -> cycle .)
    DRAWTRIANGLE    reduce using rule 14 (statute -> cycle .)
    DRAWCIRCLE      reduce using rule 14 (statute -> cycle .)
    DRAWCURVE       reduce using rule 14 (statute -> cycle .)
    DRAWPOLYGON     reduce using rule 14 (statute -> cycle .)
    RBRACE          reduce using rule 14 (statute -> cycle .)


state 129

    (9) blockprima -> empty .

    RBRACE          reduce using rule 9 (blockprima -> empty .)


state 130

    (17) statute -> return .

    ID              reduce using rule 17 (statute -> return .)
    IF              reduce using rule 17 (statute -> return .)
    PRINT           reduce using rule 17 (statute -> return .)
    WHILE           reduce using rule 17 (statute -> return .)
    RETURN          reduce using rule 17 (statute -> return .)
    DRAWLINE        reduce using rule 17 (statute -> return .)
    DRAWSQUARE      reduce using rule 17 (statute -> return .)
    DRAWTRIANGLE    reduce using rule 17 (statute -> return .)
    DRAWCIRCLE      reduce using rule 17 (statute -> return .)
    DRAWCURVE       reduce using rule 17 (statute -> return .)
    DRAWPOLYGON     reduce using rule 17 (statute -> return .)
    RBRACE          reduce using rule 17 (statute -> return .)


state 131

    (13) statute -> read .

    ID              reduce using rule 13 (statute -> read .)
    IF              reduce using rule 13 (statute -> read .)
    PRINT           reduce using rule 13 (statute -> read .)
    WHILE           reduce using rule 13 (statute -> read .)
    RETURN          reduce using rule 13 (statute -> read .)
    DRAWLINE        reduce using rule 13 (statute -> read .)
    DRAWSQUARE      reduce using rule 13 (statute -> read .)
    DRAWTRIANGLE    reduce using rule 13 (statute -> read .)
    DRAWCIRCLE      reduce using rule 13 (statute -> read .)
    DRAWCURVE       reduce using rule 13 (statute -> read .)
    DRAWPOLYGON     reduce using rule 13 (statute -> read .)
    RBRACE          reduce using rule 13 (statute -> read .)


state 132

    (10) statute -> assignment .

    ID              reduce using rule 10 (statute -> assignment .)
    IF              reduce using rule 10 (statute -> assignment .)
    PRINT           reduce using rule 10 (statute -> assignment .)
    WHILE           reduce using rule 10 (statute -> assignment .)
    RETURN          reduce using rule 10 (statute -> assignment .)
    DRAWLINE        reduce using rule 10 (statute -> assignment .)
    DRAWSQUARE      reduce using rule 10 (statute -> assignment .)
    DRAWTRIANGLE    reduce using rule 10 (statute -> assignment .)
    DRAWCIRCLE      reduce using rule 10 (statute -> assignment .)
    DRAWCURVE       reduce using rule 10 (statute -> assignment .)
    DRAWPOLYGON     reduce using rule 10 (statute -> assignment .)
    RBRACE          reduce using rule 10 (statute -> assignment .)


state 133

    (34) assignment -> ID . push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (99) read -> ID . push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (85) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (35) push_id_operand -> .

    LPAREN          shift and go to state 85
    ASSIGN          reduce using rule 35 (push_id_operand -> .)

    push_id_operand                shift and go to state 156

state 134

    (11) statute -> condition .

    ID              reduce using rule 11 (statute -> condition .)
    IF              reduce using rule 11 (statute -> condition .)
    PRINT           reduce using rule 11 (statute -> condition .)
    WHILE           reduce using rule 11 (statute -> condition .)
    RETURN          reduce using rule 11 (statute -> condition .)
    DRAWLINE        reduce using rule 11 (statute -> condition .)
    DRAWSQUARE      reduce using rule 11 (statute -> condition .)
    DRAWTRIANGLE    reduce using rule 11 (statute -> condition .)
    DRAWCIRCLE      reduce using rule 11 (statute -> condition .)
    DRAWCURVE       reduce using rule 11 (statute -> condition .)
    DRAWPOLYGON     reduce using rule 11 (statute -> condition .)
    RBRACE          reduce using rule 11 (statute -> condition .)


state 135

    (18) condition -> IF . LPAREN sexpression RPAREN do_condition_operation block else

    LPAREN          shift and go to state 157


state 136

    (8) blockprima -> statute . blockprima
    (8) blockprima -> . statute blockprima
    (9) blockprima -> . empty
    (10) statute -> . assignment
    (11) statute -> . condition
    (12) statute -> . write
    (13) statute -> . read
    (14) statute -> . cycle
    (15) statute -> . functioncall
    (16) statute -> . predefined
    (17) statute -> . return
    (121) empty -> .
    (34) assignment -> . ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (18) condition -> . IF LPAREN sexpression RPAREN do_condition_operation block else
    (98) write -> . PRINT LPAREN sexpression RPAREN SEMICOLON
    (99) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (100) cycle -> . WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (85) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (109) predefined -> . drawline
    (110) predefined -> . drawsquare
    (111) predefined -> . drawtriangle
    (112) predefined -> . drawcircle
    (113) predefined -> . drawcurve
    (114) predefined -> . drawpolygon
    (93) return -> . RETURN sexpression SEMICOLON
    (115) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (116) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (117) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 121 (empty -> .)
    ID              shift and go to state 133
    IF              shift and go to state 135
    PRINT           shift and go to state 124
    WHILE           shift and go to state 123
    RETURN          shift and go to state 122
    DRAWLINE        shift and go to state 60
    DRAWSQUARE      shift and go to state 58
    DRAWTRIANGLE    shift and go to state 44
    DRAWCIRCLE      shift and go to state 50
    DRAWCURVE       shift and go to state 66
    DRAWPOLYGON     shift and go to state 63

    drawtriangle                   shift and go to state 42
    drawcurve                      shift and go to state 45
    predefined                     shift and go to state 125
    blockprima                     shift and go to state 158
    drawline                       shift and go to state 51
    write                          shift and go to state 127
    empty                          shift and go to state 129
    return                         shift and go to state 130
    drawpolygon                    shift and go to state 57
    read                           shift and go to state 131
    assignment                     shift and go to state 132
    condition                      shift and go to state 134
    cycle                          shift and go to state 128
    statute                        shift and go to state 136
    drawcircle                     shift and go to state 55
    drawsquare                     shift and go to state 46
    functioncall                   shift and go to state 137

state 137

    (15) statute -> functioncall .

    ID              reduce using rule 15 (statute -> functioncall .)
    IF              reduce using rule 15 (statute -> functioncall .)
    PRINT           reduce using rule 15 (statute -> functioncall .)
    WHILE           reduce using rule 15 (statute -> functioncall .)
    RETURN          reduce using rule 15 (statute -> functioncall .)
    DRAWLINE        reduce using rule 15 (statute -> functioncall .)
    DRAWSQUARE      reduce using rule 15 (statute -> functioncall .)
    DRAWTRIANGLE    reduce using rule 15 (statute -> functioncall .)
    DRAWCIRCLE      reduce using rule 15 (statute -> functioncall .)
    DRAWCURVE       reduce using rule 15 (statute -> functioncall .)
    DRAWPOLYGON     reduce using rule 15 (statute -> functioncall .)
    RBRACE          reduce using rule 15 (statute -> functioncall .)


state 138

    (97) parameterprima -> type ID COMMA parameterprima .

    RPAREN          reduce using rule 97 (parameterprima -> type ID COMMA parameterprima .)


state 139

    (89) function -> FUNCTION functiontype ID LPAREN parameter RPAREN block function .

    INTTYPE         reduce using rule 89 (function -> FUNCTION functiontype ID LPAREN parameter RPAREN block function .)


state 140

    (117) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 159
    empty                          shift and go to state 35

state 141

    (118) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 160
    empty                          shift and go to state 35

state 142

    (56) exp -> exp mathoperators1 push_operator term . do_math_operation1
    (61) term -> term . mathoperators2 push_operator factor do_math_operation2
    (60) do_math_operation1 -> .
    (63) mathoperators2 -> . TIMES
    (64) mathoperators2 -> . DEVIDE

    PLUS            reduce using rule 60 (do_math_operation1 -> .)
    MINUS           reduce using rule 60 (do_math_operation1 -> .)
    LESSER          reduce using rule 60 (do_math_operation1 -> .)
    GREATER         reduce using rule 60 (do_math_operation1 -> .)
    EQUAL           reduce using rule 60 (do_math_operation1 -> .)
    NOTEQUAL        reduce using rule 60 (do_math_operation1 -> .)
    LESSEROREQUAL   reduce using rule 60 (do_math_operation1 -> .)
    GREATEROREQUAL  reduce using rule 60 (do_math_operation1 -> .)
    AND             reduce using rule 60 (do_math_operation1 -> .)
    OR              reduce using rule 60 (do_math_operation1 -> .)
    RBRACKET        reduce using rule 60 (do_math_operation1 -> .)
    COMMA           reduce using rule 60 (do_math_operation1 -> .)
    RPAREN          reduce using rule 60 (do_math_operation1 -> .)
    SEMICOLON       reduce using rule 60 (do_math_operation1 -> .)
    TIMES           shift and go to state 88
    DEVIDE          shift and go to state 87

    do_math_operation1             shift and go to state 161
    mathoperators2                 shift and go to state 89

state 143

    (116) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 162
    empty                          shift and go to state 35

state 144

    (66) factor -> LPAREN push_false_bottom sexpression RPAREN . pop_false_bottom
    (69) pop_false_bottom -> .

    TIMES           reduce using rule 69 (pop_false_bottom -> .)
    DEVIDE          reduce using rule 69 (pop_false_bottom -> .)
    PLUS            reduce using rule 69 (pop_false_bottom -> .)
    MINUS           reduce using rule 69 (pop_false_bottom -> .)
    LESSER          reduce using rule 69 (pop_false_bottom -> .)
    GREATER         reduce using rule 69 (pop_false_bottom -> .)
    EQUAL           reduce using rule 69 (pop_false_bottom -> .)
    NOTEQUAL        reduce using rule 69 (pop_false_bottom -> .)
    LESSEROREQUAL   reduce using rule 69 (pop_false_bottom -> .)
    GREATEROREQUAL  reduce using rule 69 (pop_false_bottom -> .)
    AND             reduce using rule 69 (pop_false_bottom -> .)
    OR              reduce using rule 69 (pop_false_bottom -> .)
    RBRACKET        reduce using rule 69 (pop_false_bottom -> .)
    COMMA           reduce using rule 69 (pop_false_bottom -> .)
    RPAREN          reduce using rule 69 (pop_false_bottom -> .)
    SEMICOLON       reduce using rule 69 (pop_false_bottom -> .)

    pop_false_bottom               shift and go to state 163

state 145

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA . sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 164
    empty                          shift and go to state 35

state 146

    (88) funcparam -> sexpression COMMA . funcparam
    (86) funcparam -> . empty
    (87) funcparam -> . sexpression
    (88) funcparam -> . sexpression COMMA funcparam
    (121) empty -> .
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty

    RPAREN          reduce using rule 121 (empty -> .)
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)
    NOT             shift and go to state 34

    funcparam                      shift and go to state 165
    negation                       shift and go to state 32
    sexpression                    shift and go to state 115
    empty                          shift and go to state 117

state 147

    (85) functioncall -> ID LPAREN funcparam RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 166


state 148

    (61) term -> term mathoperators2 push_operator factor . do_math_operation2
    (65) do_math_operation2 -> .

    TIMES           reduce using rule 65 (do_math_operation2 -> .)
    DEVIDE          reduce using rule 65 (do_math_operation2 -> .)
    PLUS            reduce using rule 65 (do_math_operation2 -> .)
    MINUS           reduce using rule 65 (do_math_operation2 -> .)
    LESSER          reduce using rule 65 (do_math_operation2 -> .)
    GREATER         reduce using rule 65 (do_math_operation2 -> .)
    EQUAL           reduce using rule 65 (do_math_operation2 -> .)
    NOTEQUAL        reduce using rule 65 (do_math_operation2 -> .)
    LESSEROREQUAL   reduce using rule 65 (do_math_operation2 -> .)
    GREATEROREQUAL  reduce using rule 65 (do_math_operation2 -> .)
    AND             reduce using rule 65 (do_math_operation2 -> .)
    OR              reduce using rule 65 (do_math_operation2 -> .)
    RBRACKET        reduce using rule 65 (do_math_operation2 -> .)
    COMMA           reduce using rule 65 (do_math_operation2 -> .)
    RPAREN          reduce using rule 65 (do_math_operation2 -> .)
    SEMICOLON       reduce using rule 65 (do_math_operation2 -> .)

    do_math_operation2             shift and go to state 167

state 149

    (120) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 168
    empty                          shift and go to state 35

state 150

    (119) drawcurve -> DRAWCURVE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 169
    empty                          shift and go to state 35

state 151

    (45) expression -> expression relationaloperators push_operator exp . do_relational_operation
    (56) exp -> exp . mathoperators1 push_operator term do_math_operation1
    (55) do_relational_operation -> .
    (58) mathoperators1 -> . PLUS
    (59) mathoperators1 -> . MINUS

    LESSER          reduce using rule 55 (do_relational_operation -> .)
    GREATER         reduce using rule 55 (do_relational_operation -> .)
    EQUAL           reduce using rule 55 (do_relational_operation -> .)
    NOTEQUAL        reduce using rule 55 (do_relational_operation -> .)
    LESSEROREQUAL   reduce using rule 55 (do_relational_operation -> .)
    GREATEROREQUAL  reduce using rule 55 (do_relational_operation -> .)
    AND             reduce using rule 55 (do_relational_operation -> .)
    OR              reduce using rule 55 (do_relational_operation -> .)
    RBRACKET        reduce using rule 55 (do_relational_operation -> .)
    COMMA           reduce using rule 55 (do_relational_operation -> .)
    RPAREN          reduce using rule 55 (do_relational_operation -> .)
    SEMICOLON       reduce using rule 55 (do_relational_operation -> .)
    PLUS            shift and go to state 79
    MINUS           shift and go to state 81

    do_relational_operation        shift and go to state 170
    mathoperators1                 shift and go to state 80

state 152

    (93) return -> RETURN sexpression . SEMICOLON

    SEMICOLON       shift and go to state 171


state 153

    (100) cycle -> WHILE push_cycle_jump . LPAREN sexpression RPAREN do_while_operation block

    LPAREN          shift and go to state 172


state 154

    (98) write -> PRINT LPAREN . sexpression RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 173
    empty                          shift and go to state 35

state 155

    (7) block -> LBRACE blockprima RBRACE .

    FUNCTION        reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    INTTYPE         reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    $end            reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    ELSE            reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    ID              reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    IF              reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    PRINT           reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    WHILE           reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    RETURN          reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWLINE        reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWSQUARE      reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWTRIANGLE    reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWCIRCLE      reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWCURVE       reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWPOLYGON     reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    RBRACE          reduce using rule 7 (block -> LBRACE blockprima RBRACE .)


state 156

    (34) assignment -> ID push_id_operand . ASSIGN push_operator sexpression SEMICOLON
    (99) read -> ID push_id_operand . ASSIGN push_operator INPUT SEMICOLON

    ASSIGN          shift and go to state 174


state 157

    (18) condition -> IF LPAREN . sexpression RPAREN do_condition_operation block else
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 175
    empty                          shift and go to state 35

state 158

    (8) blockprima -> statute blockprima .

    RBRACE          reduce using rule 8 (blockprima -> statute blockprima .)


state 159

    (117) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 176


state 160

    (118) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 177


state 161

    (56) exp -> exp mathoperators1 push_operator term do_math_operation1 .

    PLUS            reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    MINUS           reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    LESSER          reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    GREATER         reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    EQUAL           reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    NOTEQUAL        reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    LESSEROREQUAL   reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    GREATEROREQUAL  reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    AND             reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    OR              reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    RBRACKET        reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    COMMA           reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    RPAREN          reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    SEMICOLON       reduce using rule 56 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)


state 162

    (116) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 178


state 163

    (66) factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .

    TIMES           reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    DEVIDE          reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    PLUS            reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    MINUS           reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    LESSER          reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    GREATER         reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    EQUAL           reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    NOTEQUAL        reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    LESSEROREQUAL   reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    GREATEROREQUAL  reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    AND             reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    OR              reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    RBRACKET        reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    COMMA           reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    RPAREN          reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    SEMICOLON       reduce using rule 66 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)


state 164

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression . COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 179


state 165

    (88) funcparam -> sexpression COMMA funcparam .

    RPAREN          reduce using rule 88 (funcparam -> sexpression COMMA funcparam .)


state 166

    (85) functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .

    ID              reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    IF              reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    PRINT           reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    WHILE           reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RETURN          reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RBRACE          reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    TIMES           reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    PLUS            reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    MINUS           reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    LESSER          reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    GREATER         reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    EQUAL           reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    AND             reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    OR              reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    COMMA           reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RPAREN          reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 85 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)


state 167

    (61) term -> term mathoperators2 push_operator factor do_math_operation2 .

    TIMES           reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    DEVIDE          reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    PLUS            reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    MINUS           reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    LESSER          reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    GREATER         reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    EQUAL           reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    NOTEQUAL        reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    LESSEROREQUAL   reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    GREATEROREQUAL  reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    AND             reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    OR              reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    RBRACKET        reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    COMMA           reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    RPAREN          reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    SEMICOLON       reduce using rule 61 (term -> term mathoperators2 push_operator factor do_math_operation2 .)


state 168

    (120) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 180


state 169

    (119) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 181


state 170

    (45) expression -> expression relationaloperators push_operator exp do_relational_operation .

    LESSER          reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    GREATER         reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    EQUAL           reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    NOTEQUAL        reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    LESSEROREQUAL   reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    GREATEROREQUAL  reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    AND             reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    OR              reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    RBRACKET        reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    COMMA           reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    RPAREN          reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    SEMICOLON       reduce using rule 45 (expression -> expression relationaloperators push_operator exp do_relational_operation .)


state 171

    (93) return -> RETURN sexpression SEMICOLON .

    ID              reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    IF              reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    PRINT           reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    WHILE           reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    RETURN          reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    DRAWLINE        reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)
    RBRACE          reduce using rule 93 (return -> RETURN sexpression SEMICOLON .)


state 172

    (100) cycle -> WHILE push_cycle_jump LPAREN . sexpression RPAREN do_while_operation block
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 182
    empty                          shift and go to state 35

state 173

    (98) write -> PRINT LPAREN sexpression . RPAREN SEMICOLON

    RPAREN          shift and go to state 183


state 174

    (34) assignment -> ID push_id_operand ASSIGN . push_operator sexpression SEMICOLON
    (99) read -> ID push_id_operand ASSIGN . push_operator INPUT SEMICOLON
    (36) push_operator -> .

    INPUT           reduce using rule 36 (push_operator -> .)
    NOT             reduce using rule 36 (push_operator -> .)
    LPAREN          reduce using rule 36 (push_operator -> .)
    ID              reduce using rule 36 (push_operator -> .)
    FLOAT           reduce using rule 36 (push_operator -> .)
    INT             reduce using rule 36 (push_operator -> .)
    STRING          reduce using rule 36 (push_operator -> .)
    TRUE            reduce using rule 36 (push_operator -> .)
    FALSE           reduce using rule 36 (push_operator -> .)
    DRAWLINE        reduce using rule 36 (push_operator -> .)
    DRAWSQUARE      reduce using rule 36 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 36 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 36 (push_operator -> .)
    DRAWCURVE       reduce using rule 36 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 36 (push_operator -> .)

    push_operator                  shift and go to state 184

state 175

    (18) condition -> IF LPAREN sexpression . RPAREN do_condition_operation block else

    RPAREN          shift and go to state 185


state 176

    (117) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (103) color -> . BLUE
    (104) color -> . GREEN
    (105) color -> . RED
    (106) color -> . YELLOW
    (107) color -> . BROWN
    (108) color -> . BLACK

    BLUE            shift and go to state 186
    GREEN           shift and go to state 190
    RED             shift and go to state 192
    YELLOW          shift and go to state 189
    BROWN           shift and go to state 187
    BLACK           shift and go to state 191

    color                          shift and go to state 188

state 177

    (118) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (103) color -> . BLUE
    (104) color -> . GREEN
    (105) color -> . RED
    (106) color -> . YELLOW
    (107) color -> . BROWN
    (108) color -> . BLACK

    BLUE            shift and go to state 186
    GREEN           shift and go to state 190
    RED             shift and go to state 192
    YELLOW          shift and go to state 189
    BROWN           shift and go to state 187
    BLACK           shift and go to state 191

    color                          shift and go to state 193

state 178

    (116) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (103) color -> . BLUE
    (104) color -> . GREEN
    (105) color -> . RED
    (106) color -> . YELLOW
    (107) color -> . BROWN
    (108) color -> . BLACK

    BLUE            shift and go to state 186
    GREEN           shift and go to state 190
    RED             shift and go to state 192
    YELLOW          shift and go to state 189
    BROWN           shift and go to state 187
    BLACK           shift and go to state 191

    color                          shift and go to state 194

state 179

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 195
    empty                          shift and go to state 35

state 180

    (120) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (103) color -> . BLUE
    (104) color -> . GREEN
    (105) color -> . RED
    (106) color -> . YELLOW
    (107) color -> . BROWN
    (108) color -> . BLACK

    BLUE            shift and go to state 186
    GREEN           shift and go to state 190
    RED             shift and go to state 192
    YELLOW          shift and go to state 189
    BROWN           shift and go to state 187
    BLACK           shift and go to state 191

    color                          shift and go to state 196

state 181

    (119) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (103) color -> . BLUE
    (104) color -> . GREEN
    (105) color -> . RED
    (106) color -> . YELLOW
    (107) color -> . BROWN
    (108) color -> . BLACK

    BLUE            shift and go to state 186
    GREEN           shift and go to state 190
    RED             shift and go to state 192
    YELLOW          shift and go to state 189
    BROWN           shift and go to state 187
    BLACK           shift and go to state 191

    color                          shift and go to state 197

state 182

    (100) cycle -> WHILE push_cycle_jump LPAREN sexpression . RPAREN do_while_operation block

    RPAREN          shift and go to state 198


state 183

    (98) write -> PRINT LPAREN sexpression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 199


state 184

    (34) assignment -> ID push_id_operand ASSIGN push_operator . sexpression SEMICOLON
    (99) read -> ID push_id_operand ASSIGN push_operator . INPUT SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    INPUT           shift and go to state 201
    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 200
    empty                          shift and go to state 35

state 185

    (18) condition -> IF LPAREN sexpression RPAREN . do_condition_operation block else
    (19) do_condition_operation -> .

    LBRACE          reduce using rule 19 (do_condition_operation -> .)

    do_condition_operation         shift and go to state 202

state 186

    (103) color -> BLUE .

    RPAREN          reduce using rule 103 (color -> BLUE .)


state 187

    (107) color -> BROWN .

    RPAREN          reduce using rule 107 (color -> BROWN .)


state 188

    (117) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 203


state 189

    (106) color -> YELLOW .

    RPAREN          reduce using rule 106 (color -> YELLOW .)


state 190

    (104) color -> GREEN .

    RPAREN          reduce using rule 104 (color -> GREEN .)


state 191

    (108) color -> BLACK .

    RPAREN          reduce using rule 108 (color -> BLACK .)


state 192

    (105) color -> RED .

    RPAREN          reduce using rule 105 (color -> RED .)


state 193

    (118) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 204


state 194

    (116) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 205


state 195

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 206


state 196

    (120) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 207


state 197

    (119) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 208


state 198

    (100) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN . do_while_operation block
    (102) do_while_operation -> .

    LBRACE          reduce using rule 102 (do_while_operation -> .)

    do_while_operation             shift and go to state 209

state 199

    (98) write -> PRINT LPAREN sexpression RPAREN SEMICOLON .

    ID              reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    IF              reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    PRINT           reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    WHILE           reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    RETURN          reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 98 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)


state 200

    (34) assignment -> ID push_id_operand ASSIGN push_operator sexpression . SEMICOLON

    SEMICOLON       shift and go to state 210


state 201

    (99) read -> ID push_id_operand ASSIGN push_operator INPUT . SEMICOLON

    SEMICOLON       shift and go to state 211


state 202

    (18) condition -> IF LPAREN sexpression RPAREN do_condition_operation . block else
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 212

state 203

    (117) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 213


state 204

    (118) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 214


state 205

    (116) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 215


state 206

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (41) sexpression -> . negation expression do_not_operation
    (42) negation -> . NOT push_operator
    (43) negation -> . empty
    (121) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 121 (empty -> .)
    ID              reduce using rule 121 (empty -> .)
    FLOAT           reduce using rule 121 (empty -> .)
    INT             reduce using rule 121 (empty -> .)
    STRING          reduce using rule 121 (empty -> .)
    TRUE            reduce using rule 121 (empty -> .)
    FALSE           reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 216
    empty                          shift and go to state 35

state 207

    (120) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 217


state 208

    (119) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 218


state 209

    (100) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 219

state 210

    (34) assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .

    ID              reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    IF              reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    PRINT           reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    WHILE           reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    RETURN          reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWLINE        reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    RBRACE          reduce using rule 34 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)


state 211

    (99) read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .

    ID              reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    IF              reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    PRINT           reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    WHILE           reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RETURN          reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RBRACE          reduce using rule 99 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)


state 212

    (18) condition -> IF LPAREN sexpression RPAREN do_condition_operation block . else
    (22) else -> . ELSE do_else_operation block
    (23) else -> . empty
    (121) empty -> .

    ELSE            shift and go to state 222
    ID              reduce using rule 121 (empty -> .)
    IF              reduce using rule 121 (empty -> .)
    PRINT           reduce using rule 121 (empty -> .)
    WHILE           reduce using rule 121 (empty -> .)
    RETURN          reduce using rule 121 (empty -> .)
    DRAWLINE        reduce using rule 121 (empty -> .)
    DRAWSQUARE      reduce using rule 121 (empty -> .)
    DRAWTRIANGLE    reduce using rule 121 (empty -> .)
    DRAWCIRCLE      reduce using rule 121 (empty -> .)
    DRAWCURVE       reduce using rule 121 (empty -> .)
    DRAWPOLYGON     reduce using rule 121 (empty -> .)
    RBRACE          reduce using rule 121 (empty -> .)

    else                           shift and go to state 220
    empty                          shift and go to state 221

state 213

    (117) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 117 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 214

    (118) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    TIMES           reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 118 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 215

    (116) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 116 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 216

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 223


state 217

    (120) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 120 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 218

    (119) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 119 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 219

    (100) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .

    ID              reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    IF              reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    PRINT           reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    WHILE           reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    RETURN          reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWLINE        reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWSQUARE      reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWTRIANGLE    reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWCIRCLE      reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWCURVE       reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWPOLYGON     reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    RBRACE          reduce using rule 100 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)


state 220

    (18) condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .

    ID              reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    IF              reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    PRINT           reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    WHILE           reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    RETURN          reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWLINE        reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWSQUARE      reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWTRIANGLE    reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWCIRCLE      reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWCURVE       reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWPOLYGON     reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    RBRACE          reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)


state 221

    (23) else -> empty .

    ID              reduce using rule 23 (else -> empty .)
    IF              reduce using rule 23 (else -> empty .)
    PRINT           reduce using rule 23 (else -> empty .)
    WHILE           reduce using rule 23 (else -> empty .)
    RETURN          reduce using rule 23 (else -> empty .)
    DRAWLINE        reduce using rule 23 (else -> empty .)
    DRAWSQUARE      reduce using rule 23 (else -> empty .)
    DRAWTRIANGLE    reduce using rule 23 (else -> empty .)
    DRAWCIRCLE      reduce using rule 23 (else -> empty .)
    DRAWCURVE       reduce using rule 23 (else -> empty .)
    DRAWPOLYGON     reduce using rule 23 (else -> empty .)
    RBRACE          reduce using rule 23 (else -> empty .)


state 222

    (22) else -> ELSE . do_else_operation block
    (24) do_else_operation -> .

    LBRACE          reduce using rule 24 (do_else_operation -> .)

    do_else_operation              shift and go to state 224

state 223

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (103) color -> . BLUE
    (104) color -> . GREEN
    (105) color -> . RED
    (106) color -> . YELLOW
    (107) color -> . BROWN
    (108) color -> . BLACK

    BLUE            shift and go to state 186
    GREEN           shift and go to state 190
    RED             shift and go to state 192
    YELLOW          shift and go to state 189
    BROWN           shift and go to state 187
    BLACK           shift and go to state 191

    color                          shift and go to state 225

state 224

    (22) else -> ELSE do_else_operation . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 226

state 225

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 227


state 226

    (22) else -> ELSE do_else_operation block .

    ID              reduce using rule 22 (else -> ELSE do_else_operation block .)
    IF              reduce using rule 22 (else -> ELSE do_else_operation block .)
    PRINT           reduce using rule 22 (else -> ELSE do_else_operation block .)
    WHILE           reduce using rule 22 (else -> ELSE do_else_operation block .)
    RETURN          reduce using rule 22 (else -> ELSE do_else_operation block .)
    DRAWLINE        reduce using rule 22 (else -> ELSE do_else_operation block .)
    DRAWSQUARE      reduce using rule 22 (else -> ELSE do_else_operation block .)
    DRAWTRIANGLE    reduce using rule 22 (else -> ELSE do_else_operation block .)
    DRAWCIRCLE      reduce using rule 22 (else -> ELSE do_else_operation block .)
    DRAWCURVE       reduce using rule 22 (else -> ELSE do_else_operation block .)
    DRAWPOLYGON     reduce using rule 22 (else -> ELSE do_else_operation block .)
    RBRACE          reduce using rule 22 (else -> ELSE do_else_operation block .)


state 227

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 228

    (115) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 115 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)

