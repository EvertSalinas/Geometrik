Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    BREAK

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram
Rule 2     endProgram -> <empty>
Rule 3     add_global_function -> <empty>
Rule 4     main -> INTTYPE MAIN LPAREN RPAREN add_jump_to_main block
Rule 5     goto_main -> <empty>
Rule 6     add_jump_to_main -> <empty>
Rule 7     block -> LBRACE blockprima RBRACE
Rule 8     blockprima -> statute blockprima
Rule 9     blockprima -> empty
Rule 10    statute -> assignment
Rule 11    statute -> condition
Rule 12    statute -> write
Rule 13    statute -> read
Rule 14    statute -> cycle
Rule 15    statute -> functioncall
Rule 16    statute -> predefined
Rule 17    statute -> return
Rule 18    condition -> IF LPAREN sexpression RPAREN do_condition_operation block else
Rule 19    do_condition_operation -> <empty>
Rule 20    else -> ELSE do_else_operation block
Rule 21    else -> empty
Rule 22    do_else_operation -> <empty>
Rule 23    vars -> VAR type ID array store_variable SEMICOLON vars
Rule 24    vars -> empty
Rule 25    store_variable -> <empty>
Rule 26    array -> LBRACKET sexpression RBRACKET
Rule 27    array -> empty
Rule 28    type -> INTTYPE
Rule 29    type -> FLOATTYPE
Rule 30    type -> STRINGTYPE
Rule 31    type -> BOOLTYPE
Rule 32    assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
Rule 33    push_id_operand -> <empty>
Rule 34    push_operator -> <empty>
Rule 35    assignmentarray -> empty
Rule 36    assignmentarray -> LBRACKET sexpression RBRACKET
Rule 37    sexpression -> negation expression do_not_operation
Rule 38    negation -> NOT push_operator
Rule 39    negation -> empty
Rule 40    do_not_operation -> <empty>
Rule 41    expression -> expression relationaloperators push_operator exp do_relational_operation
Rule 42    expression -> exp
Rule 43    relationaloperators -> LESSER
Rule 44    relationaloperators -> GREATER
Rule 45    relationaloperators -> EQUAL
Rule 46    relationaloperators -> NOTEQUAL
Rule 47    relationaloperators -> LESSEROREQUAL
Rule 48    relationaloperators -> GREATEROREQUAL
Rule 49    relationaloperators -> AND
Rule 50    relationaloperators -> OR
Rule 51    do_relational_operation -> <empty>
Rule 52    exp -> exp mathoperators1 push_operator term do_math_operation1
Rule 53    exp -> term
Rule 54    mathoperators1 -> PLUS
Rule 55    mathoperators1 -> MINUS
Rule 56    do_math_operation1 -> <empty>
Rule 57    term -> term mathoperators2 push_operator factor do_math_operation2
Rule 58    term -> factor
Rule 59    mathoperators2 -> TIMES
Rule 60    mathoperators2 -> DEVIDE
Rule 61    do_math_operation2 -> <empty>
Rule 62    factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
Rule 63    factor -> varConst
Rule 64    push_false_bottom -> <empty>
Rule 65    pop_false_bottom -> <empty>
Rule 66    varConst -> ID push_id_operand
Rule 67    varConst -> FLOAT push_float_operand
Rule 68    varConst -> INT push_int_operand
Rule 69    varConst -> bool push_bool_operand
Rule 70    varConst -> STRING push_string_operand
Rule 71    varConst -> predefined
Rule 72    varConst -> functioncall
Rule 73    bool -> TRUE
Rule 74    bool -> FALSE
Rule 75    push_float_operand -> <empty>
Rule 76    push_int_operand -> <empty>
Rule 77    push_bool_operand -> <empty>
Rule 78    push_string_operand -> <empty>
Rule 79    functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
Rule 80    check_function_existance -> <empty>
Rule 81    generate_era -> <empty>
Rule 82    validate_arguments -> <empty>
Rule 83    funcargum -> sexpression store_argument funcargumprima
Rule 84    funcargum -> empty
Rule 85    funcargumprima -> COMMA sexpression store_argument funcargumprima
Rule 86    funcargumprima -> empty
Rule 87    store_argument -> <empty>
Rule 88    function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars block end_process function
Rule 89    function -> empty
Rule 90    functiontype -> VOID
Rule 91    functiontype -> type
Rule 92    store_function -> <empty>
Rule 93    end_process -> <empty>
Rule 94    return -> RETURN sexpression SEMICOLON
Rule 95    parameter -> type ID store_parameter parameterprima
Rule 96    parameter -> empty
Rule 97    parameterprima -> COMMA type ID store_parameter parameterprima
Rule 98    parameterprima -> empty
Rule 99    store_parameter -> <empty>
Rule 100   write -> PRINT LPAREN sexpression RPAREN SEMICOLON
Rule 101   read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
Rule 102   cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
Rule 103   push_cycle_jump -> <empty>
Rule 104   do_while_operation -> <empty>
Rule 105   color -> BLUE
Rule 106   color -> GREEN
Rule 107   color -> RED
Rule 108   color -> YELLOW
Rule 109   color -> BROWN
Rule 110   color -> BLACK
Rule 111   predefined -> drawline
Rule 112   predefined -> drawsquare
Rule 113   predefined -> drawtriangle
Rule 114   predefined -> drawcircle
Rule 115   predefined -> drawcurve
Rule 116   predefined -> drawpolygon
Rule 117   drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 118   drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 119   drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 120   drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 121   drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 122   drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 123   empty -> <empty>

Terminals, with rules where they appear

AND                  : 49
ASSIGN               : 32 101
BLACK                : 110
BLUE                 : 105
BOOLTYPE             : 31
BREAK                : 
BROWN                : 109
COLON                : 
COMMA                : 85 97 117 117 117 117 118 118 119 119 120 120 121 121 122 122
DEVIDE               : 60
DRAWCIRCLE           : 120
DRAWCURVE            : 121
DRAWLINE             : 117
DRAWPOLYGON          : 122
DRAWSQUARE           : 118
DRAWTRIANGLE         : 119
ELSE                 : 20
EQUAL                : 45
FALSE                : 74
FLOAT                : 67
FLOATTYPE            : 29
FUNCTION             : 88
GREATER              : 44
GREATEROREQUAL       : 48
GREEN                : 106
ID                   : 1 23 32 66 79 88 95 97 101
IF                   : 18
INPUT                : 101
INT                  : 68
INTTYPE              : 4 28
LBRACE               : 7
LBRACKET             : 26 36
LESSER               : 43
LESSEROREQUAL        : 47
LPAREN               : 4 18 62 79 88 100 102 117 118 119 120 121 122
MAIN                 : 4
MINUS                : 55
NOT                  : 38
NOTEQUAL             : 46
OR                   : 50
PLUS                 : 54
PRINT                : 100
PROGRAM              : 1
RBRACE               : 7
RBRACKET             : 26 36
RED                  : 107
RETURN               : 94
RPAREN               : 4 18 62 79 88 100 102 117 118 119 120 121 122
SEMICOLON            : 1 23 32 94 100 101 117 118 119 120 121 122
STRING               : 70
STRINGTYPE           : 30
TIMES                : 59
TRUE                 : 73
VAR                  : 23
VOID                 : 90
WHILE                : 102
YELLOW               : 108
error                : 

Nonterminals, with rules where they appear

add_global_function  : 1
add_jump_to_main     : 4
array                : 23
assignment           : 10
assignmentarray      : 
block                : 4 18 20 88 102
blockprima           : 7 8
bool                 : 69
check_function_existance : 79
color                : 117 118 119 120 121 122
condition            : 11
cycle                : 14
do_condition_operation : 18
do_else_operation    : 20
do_math_operation1   : 52
do_math_operation2   : 57
do_not_operation     : 37
do_relational_operation : 41
do_while_operation   : 102
drawcircle           : 114
drawcurve            : 115
drawline             : 111
drawpolygon          : 116
drawsquare           : 112
drawtriangle         : 113
else                 : 18
empty                : 9 21 24 27 35 39 84 86 89 96 98
endProgram           : 1
end_process          : 88
exp                  : 41 42 52
expression           : 37 41
factor               : 57 58
funcargum            : 79
funcargumprima       : 83 85
function             : 1 88
functioncall         : 15 72
functiontype         : 88
generate_era         : 79
goto_main            : 1
main                 : 1
mathoperators1       : 52
mathoperators2       : 57
negation             : 37
parameter            : 88
parameterprima       : 95 97
pop_false_bottom     : 62
predefined           : 16 71
program              : 0
push_bool_operand    : 69
push_cycle_jump      : 102
push_false_bottom    : 62
push_float_operand   : 67
push_id_operand      : 32 66 101
push_int_operand     : 68
push_operator        : 32 38 41 52 57 101
push_string_operand  : 70
read                 : 13
relationaloperators  : 41
return               : 17
sexpression          : 18 26 32 36 62 83 85 94 100 102 117 117 117 117 118 118 119 119 120 120 121 121 122 122
statute              : 8
store_argument       : 83 85
store_function       : 88
store_parameter      : 95 97
store_variable       : 23
term                 : 52 53 57
type                 : 23 91 95 97
validate_arguments   : 79
varConst             : 63
vars                 : 1 23 88
write                : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID add_global_function SEMICOLON goto_main vars function main endProgram

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . add_global_function SEMICOLON goto_main vars function main endProgram
    (3) add_global_function -> .

    SEMICOLON       reduce using rule 3 (add_global_function -> .)

    add_global_function            shift and go to state 4

state 4

    (1) program -> PROGRAM ID add_global_function . SEMICOLON goto_main vars function main endProgram

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID add_global_function SEMICOLON . goto_main vars function main endProgram
    (5) goto_main -> .

    VAR             reduce using rule 5 (goto_main -> .)
    FUNCTION        reduce using rule 5 (goto_main -> .)
    INTTYPE         reduce using rule 5 (goto_main -> .)

    goto_main                      shift and go to state 6

state 6

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main . vars function main endProgram
    (23) vars -> . VAR type ID array store_variable SEMICOLON vars
    (24) vars -> . empty
    (123) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 123 (empty -> .)
    INTTYPE         reduce using rule 123 (empty -> .)

    vars                           shift and go to state 7
    empty                          shift and go to state 9

state 7

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars . function main endProgram
    (88) function -> . FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars block end_process function
    (89) function -> . empty
    (123) empty -> .

    FUNCTION        shift and go to state 11
    INTTYPE         reduce using rule 123 (empty -> .)

    function                       shift and go to state 10
    empty                          shift and go to state 12

state 8

    (23) vars -> VAR . type ID array store_variable SEMICOLON vars
    (28) type -> . INTTYPE
    (29) type -> . FLOATTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . BOOLTYPE

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    type                           shift and go to state 17

state 9

    (24) vars -> empty .

    LBRACE          reduce using rule 24 (vars -> empty .)
    FUNCTION        reduce using rule 24 (vars -> empty .)
    INTTYPE         reduce using rule 24 (vars -> empty .)


state 10

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function . main endProgram
    (4) main -> . INTTYPE MAIN LPAREN RPAREN add_jump_to_main block

    INTTYPE         shift and go to state 18

    main                           shift and go to state 19

state 11

    (88) function -> FUNCTION . functiontype ID store_function LPAREN parameter RPAREN vars block end_process function
    (90) functiontype -> . VOID
    (91) functiontype -> . type
    (28) type -> . INTTYPE
    (29) type -> . FLOATTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . BOOLTYPE

    VOID            shift and go to state 21
    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    functiontype                   shift and go to state 20
    type                           shift and go to state 22

state 12

    (89) function -> empty .

    INTTYPE         reduce using rule 89 (function -> empty .)


state 13

    (31) type -> BOOLTYPE .

    ID              reduce using rule 31 (type -> BOOLTYPE .)


state 14

    (30) type -> STRINGTYPE .

    ID              reduce using rule 30 (type -> STRINGTYPE .)


state 15

    (29) type -> FLOATTYPE .

    ID              reduce using rule 29 (type -> FLOATTYPE .)


state 16

    (28) type -> INTTYPE .

    ID              reduce using rule 28 (type -> INTTYPE .)


state 17

    (23) vars -> VAR type . ID array store_variable SEMICOLON vars

    ID              shift and go to state 23


state 18

    (4) main -> INTTYPE . MAIN LPAREN RPAREN add_jump_to_main block

    MAIN            shift and go to state 24


state 19

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main . endProgram
    (2) endProgram -> .

    $end            reduce using rule 2 (endProgram -> .)

    endProgram                     shift and go to state 25

state 20

    (88) function -> FUNCTION functiontype . ID store_function LPAREN parameter RPAREN vars block end_process function

    ID              shift and go to state 26


state 21

    (90) functiontype -> VOID .

    ID              reduce using rule 90 (functiontype -> VOID .)


state 22

    (91) functiontype -> type .

    ID              reduce using rule 91 (functiontype -> type .)


state 23

    (23) vars -> VAR type ID . array store_variable SEMICOLON vars
    (26) array -> . LBRACKET sexpression RBRACKET
    (27) array -> . empty
    (123) empty -> .

    LBRACKET        shift and go to state 27
    SEMICOLON       reduce using rule 123 (empty -> .)

    array                          shift and go to state 28
    empty                          shift and go to state 29

state 24

    (4) main -> INTTYPE MAIN . LPAREN RPAREN add_jump_to_main block

    LPAREN          shift and go to state 30


state 25

    (1) program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram .

    $end            reduce using rule 1 (program -> PROGRAM ID add_global_function SEMICOLON goto_main vars function main endProgram .)


state 26

    (88) function -> FUNCTION functiontype ID . store_function LPAREN parameter RPAREN vars block end_process function
    (92) store_function -> .

    LPAREN          reduce using rule 92 (store_function -> .)

    store_function                 shift and go to state 31

state 27

    (26) array -> LBRACKET . sexpression RBRACKET
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 33
    empty                          shift and go to state 35

state 28

    (23) vars -> VAR type ID array . store_variable SEMICOLON vars
    (25) store_variable -> .

    SEMICOLON       reduce using rule 25 (store_variable -> .)

    store_variable                 shift and go to state 36

state 29

    (27) array -> empty .

    SEMICOLON       reduce using rule 27 (array -> empty .)


state 30

    (4) main -> INTTYPE MAIN LPAREN . RPAREN add_jump_to_main block

    RPAREN          shift and go to state 37


state 31

    (88) function -> FUNCTION functiontype ID store_function . LPAREN parameter RPAREN vars block end_process function

    LPAREN          shift and go to state 38


state 32

    (37) sexpression -> negation . expression do_not_operation
    (41) expression -> . expression relationaloperators push_operator exp do_relational_operation
    (42) expression -> . exp
    (52) exp -> . exp mathoperators1 push_operator term do_math_operation1
    (53) exp -> . term
    (57) term -> . term mathoperators2 push_operator factor do_math_operation2
    (58) term -> . factor
    (62) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (63) factor -> . varConst
    (66) varConst -> . ID push_id_operand
    (67) varConst -> . FLOAT push_float_operand
    (68) varConst -> . INT push_int_operand
    (69) varConst -> . bool push_bool_operand
    (70) varConst -> . STRING push_string_operand
    (71) varConst -> . predefined
    (72) varConst -> . functioncall
    (73) bool -> . TRUE
    (74) bool -> . FALSE
    (111) predefined -> . drawline
    (112) predefined -> . drawsquare
    (113) predefined -> . drawtriangle
    (114) predefined -> . drawcircle
    (115) predefined -> . drawcurve
    (116) predefined -> . drawpolygon
    (79) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (117) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (121) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (122) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 61
    STRING          shift and go to state 46
    TRUE            shift and go to state 44
    FALSE           shift and go to state 50
    DRAWLINE        shift and go to state 45
    DRAWSQUARE      shift and go to state 56
    DRAWTRIANGLE    shift and go to state 41
    DRAWCIRCLE      shift and go to state 48
    DRAWCURVE       shift and go to state 63
    DRAWPOLYGON     shift and go to state 60

    drawtriangle                   shift and go to state 39
    varConst                       shift and go to state 40
    drawcurve                      shift and go to state 42
    predefined                     shift and go to state 47
    drawline                       shift and go to state 49
    bool                           shift and go to state 51
    factor                         shift and go to state 52
    drawcircle                     shift and go to state 53
    exp                            shift and go to state 54
    drawpolygon                    shift and go to state 55
    term                           shift and go to state 59
    expression                     shift and go to state 65
    drawsquare                     shift and go to state 43
    functioncall                   shift and go to state 64

state 33

    (26) array -> LBRACKET sexpression . RBRACKET

    RBRACKET        shift and go to state 66


state 34

    (38) negation -> NOT . push_operator
    (34) push_operator -> .

    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)
    DRAWLINE        reduce using rule 34 (push_operator -> .)
    DRAWSQUARE      reduce using rule 34 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 34 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 34 (push_operator -> .)
    DRAWCURVE       reduce using rule 34 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 67

state 35

    (39) negation -> empty .

    LPAREN          reduce using rule 39 (negation -> empty .)
    ID              reduce using rule 39 (negation -> empty .)
    FLOAT           reduce using rule 39 (negation -> empty .)
    INT             reduce using rule 39 (negation -> empty .)
    STRING          reduce using rule 39 (negation -> empty .)
    TRUE            reduce using rule 39 (negation -> empty .)
    FALSE           reduce using rule 39 (negation -> empty .)
    DRAWLINE        reduce using rule 39 (negation -> empty .)
    DRAWSQUARE      reduce using rule 39 (negation -> empty .)
    DRAWTRIANGLE    reduce using rule 39 (negation -> empty .)
    DRAWCIRCLE      reduce using rule 39 (negation -> empty .)
    DRAWCURVE       reduce using rule 39 (negation -> empty .)
    DRAWPOLYGON     reduce using rule 39 (negation -> empty .)


state 36

    (23) vars -> VAR type ID array store_variable . SEMICOLON vars

    SEMICOLON       shift and go to state 68


state 37

    (4) main -> INTTYPE MAIN LPAREN RPAREN . add_jump_to_main block
    (6) add_jump_to_main -> .

    LBRACE          reduce using rule 6 (add_jump_to_main -> .)

    add_jump_to_main               shift and go to state 69

state 38

    (88) function -> FUNCTION functiontype ID store_function LPAREN . parameter RPAREN vars block end_process function
    (95) parameter -> . type ID store_parameter parameterprima
    (96) parameter -> . empty
    (28) type -> . INTTYPE
    (29) type -> . FLOATTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . BOOLTYPE
    (123) empty -> .

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13
    RPAREN          reduce using rule 123 (empty -> .)

    empty                          shift and go to state 70
    type                           shift and go to state 71
    parameter                      shift and go to state 72

state 39

    (113) predefined -> drawtriangle .

    TIMES           reduce using rule 113 (predefined -> drawtriangle .)
    DEVIDE          reduce using rule 113 (predefined -> drawtriangle .)
    PLUS            reduce using rule 113 (predefined -> drawtriangle .)
    MINUS           reduce using rule 113 (predefined -> drawtriangle .)
    LESSER          reduce using rule 113 (predefined -> drawtriangle .)
    GREATER         reduce using rule 113 (predefined -> drawtriangle .)
    EQUAL           reduce using rule 113 (predefined -> drawtriangle .)
    NOTEQUAL        reduce using rule 113 (predefined -> drawtriangle .)
    LESSEROREQUAL   reduce using rule 113 (predefined -> drawtriangle .)
    GREATEROREQUAL  reduce using rule 113 (predefined -> drawtriangle .)
    AND             reduce using rule 113 (predefined -> drawtriangle .)
    OR              reduce using rule 113 (predefined -> drawtriangle .)
    RBRACKET        reduce using rule 113 (predefined -> drawtriangle .)
    COMMA           reduce using rule 113 (predefined -> drawtriangle .)
    RPAREN          reduce using rule 113 (predefined -> drawtriangle .)
    SEMICOLON       reduce using rule 113 (predefined -> drawtriangle .)
    ID              reduce using rule 113 (predefined -> drawtriangle .)
    IF              reduce using rule 113 (predefined -> drawtriangle .)
    PRINT           reduce using rule 113 (predefined -> drawtriangle .)
    WHILE           reduce using rule 113 (predefined -> drawtriangle .)
    RETURN          reduce using rule 113 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 113 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 113 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 113 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 113 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 113 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 113 (predefined -> drawtriangle .)
    RBRACE          reduce using rule 113 (predefined -> drawtriangle .)


state 40

    (63) factor -> varConst .

    TIMES           reduce using rule 63 (factor -> varConst .)
    DEVIDE          reduce using rule 63 (factor -> varConst .)
    PLUS            reduce using rule 63 (factor -> varConst .)
    MINUS           reduce using rule 63 (factor -> varConst .)
    LESSER          reduce using rule 63 (factor -> varConst .)
    GREATER         reduce using rule 63 (factor -> varConst .)
    EQUAL           reduce using rule 63 (factor -> varConst .)
    NOTEQUAL        reduce using rule 63 (factor -> varConst .)
    LESSEROREQUAL   reduce using rule 63 (factor -> varConst .)
    GREATEROREQUAL  reduce using rule 63 (factor -> varConst .)
    AND             reduce using rule 63 (factor -> varConst .)
    OR              reduce using rule 63 (factor -> varConst .)
    RBRACKET        reduce using rule 63 (factor -> varConst .)
    COMMA           reduce using rule 63 (factor -> varConst .)
    RPAREN          reduce using rule 63 (factor -> varConst .)
    SEMICOLON       reduce using rule 63 (factor -> varConst .)


state 41

    (119) drawtriangle -> DRAWTRIANGLE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 73


state 42

    (115) predefined -> drawcurve .

    TIMES           reduce using rule 115 (predefined -> drawcurve .)
    DEVIDE          reduce using rule 115 (predefined -> drawcurve .)
    PLUS            reduce using rule 115 (predefined -> drawcurve .)
    MINUS           reduce using rule 115 (predefined -> drawcurve .)
    LESSER          reduce using rule 115 (predefined -> drawcurve .)
    GREATER         reduce using rule 115 (predefined -> drawcurve .)
    EQUAL           reduce using rule 115 (predefined -> drawcurve .)
    NOTEQUAL        reduce using rule 115 (predefined -> drawcurve .)
    LESSEROREQUAL   reduce using rule 115 (predefined -> drawcurve .)
    GREATEROREQUAL  reduce using rule 115 (predefined -> drawcurve .)
    AND             reduce using rule 115 (predefined -> drawcurve .)
    OR              reduce using rule 115 (predefined -> drawcurve .)
    RBRACKET        reduce using rule 115 (predefined -> drawcurve .)
    COMMA           reduce using rule 115 (predefined -> drawcurve .)
    RPAREN          reduce using rule 115 (predefined -> drawcurve .)
    SEMICOLON       reduce using rule 115 (predefined -> drawcurve .)
    ID              reduce using rule 115 (predefined -> drawcurve .)
    IF              reduce using rule 115 (predefined -> drawcurve .)
    PRINT           reduce using rule 115 (predefined -> drawcurve .)
    WHILE           reduce using rule 115 (predefined -> drawcurve .)
    RETURN          reduce using rule 115 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 115 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 115 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 115 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 115 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 115 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 115 (predefined -> drawcurve .)
    RBRACE          reduce using rule 115 (predefined -> drawcurve .)


state 43

    (112) predefined -> drawsquare .

    TIMES           reduce using rule 112 (predefined -> drawsquare .)
    DEVIDE          reduce using rule 112 (predefined -> drawsquare .)
    PLUS            reduce using rule 112 (predefined -> drawsquare .)
    MINUS           reduce using rule 112 (predefined -> drawsquare .)
    LESSER          reduce using rule 112 (predefined -> drawsquare .)
    GREATER         reduce using rule 112 (predefined -> drawsquare .)
    EQUAL           reduce using rule 112 (predefined -> drawsquare .)
    NOTEQUAL        reduce using rule 112 (predefined -> drawsquare .)
    LESSEROREQUAL   reduce using rule 112 (predefined -> drawsquare .)
    GREATEROREQUAL  reduce using rule 112 (predefined -> drawsquare .)
    AND             reduce using rule 112 (predefined -> drawsquare .)
    OR              reduce using rule 112 (predefined -> drawsquare .)
    RBRACKET        reduce using rule 112 (predefined -> drawsquare .)
    COMMA           reduce using rule 112 (predefined -> drawsquare .)
    RPAREN          reduce using rule 112 (predefined -> drawsquare .)
    SEMICOLON       reduce using rule 112 (predefined -> drawsquare .)
    ID              reduce using rule 112 (predefined -> drawsquare .)
    IF              reduce using rule 112 (predefined -> drawsquare .)
    PRINT           reduce using rule 112 (predefined -> drawsquare .)
    WHILE           reduce using rule 112 (predefined -> drawsquare .)
    RETURN          reduce using rule 112 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 112 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 112 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 112 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 112 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 112 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 112 (predefined -> drawsquare .)
    RBRACE          reduce using rule 112 (predefined -> drawsquare .)


state 44

    (73) bool -> TRUE .

    TIMES           reduce using rule 73 (bool -> TRUE .)
    DEVIDE          reduce using rule 73 (bool -> TRUE .)
    PLUS            reduce using rule 73 (bool -> TRUE .)
    MINUS           reduce using rule 73 (bool -> TRUE .)
    LESSER          reduce using rule 73 (bool -> TRUE .)
    GREATER         reduce using rule 73 (bool -> TRUE .)
    EQUAL           reduce using rule 73 (bool -> TRUE .)
    NOTEQUAL        reduce using rule 73 (bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 73 (bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 73 (bool -> TRUE .)
    AND             reduce using rule 73 (bool -> TRUE .)
    OR              reduce using rule 73 (bool -> TRUE .)
    RBRACKET        reduce using rule 73 (bool -> TRUE .)
    COMMA           reduce using rule 73 (bool -> TRUE .)
    RPAREN          reduce using rule 73 (bool -> TRUE .)
    SEMICOLON       reduce using rule 73 (bool -> TRUE .)


state 45

    (117) drawline -> DRAWLINE . LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 46

    (70) varConst -> STRING . push_string_operand
    (78) push_string_operand -> .

    TIMES           reduce using rule 78 (push_string_operand -> .)
    DEVIDE          reduce using rule 78 (push_string_operand -> .)
    PLUS            reduce using rule 78 (push_string_operand -> .)
    MINUS           reduce using rule 78 (push_string_operand -> .)
    LESSER          reduce using rule 78 (push_string_operand -> .)
    GREATER         reduce using rule 78 (push_string_operand -> .)
    EQUAL           reduce using rule 78 (push_string_operand -> .)
    NOTEQUAL        reduce using rule 78 (push_string_operand -> .)
    LESSEROREQUAL   reduce using rule 78 (push_string_operand -> .)
    GREATEROREQUAL  reduce using rule 78 (push_string_operand -> .)
    AND             reduce using rule 78 (push_string_operand -> .)
    OR              reduce using rule 78 (push_string_operand -> .)
    RBRACKET        reduce using rule 78 (push_string_operand -> .)
    COMMA           reduce using rule 78 (push_string_operand -> .)
    RPAREN          reduce using rule 78 (push_string_operand -> .)
    SEMICOLON       reduce using rule 78 (push_string_operand -> .)

    push_string_operand            shift and go to state 75

state 47

    (71) varConst -> predefined .

    TIMES           reduce using rule 71 (varConst -> predefined .)
    DEVIDE          reduce using rule 71 (varConst -> predefined .)
    PLUS            reduce using rule 71 (varConst -> predefined .)
    MINUS           reduce using rule 71 (varConst -> predefined .)
    LESSER          reduce using rule 71 (varConst -> predefined .)
    GREATER         reduce using rule 71 (varConst -> predefined .)
    EQUAL           reduce using rule 71 (varConst -> predefined .)
    NOTEQUAL        reduce using rule 71 (varConst -> predefined .)
    LESSEROREQUAL   reduce using rule 71 (varConst -> predefined .)
    GREATEROREQUAL  reduce using rule 71 (varConst -> predefined .)
    AND             reduce using rule 71 (varConst -> predefined .)
    OR              reduce using rule 71 (varConst -> predefined .)
    RBRACKET        reduce using rule 71 (varConst -> predefined .)
    COMMA           reduce using rule 71 (varConst -> predefined .)
    RPAREN          reduce using rule 71 (varConst -> predefined .)
    SEMICOLON       reduce using rule 71 (varConst -> predefined .)


state 48

    (120) drawcircle -> DRAWCIRCLE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 76


state 49

    (111) predefined -> drawline .

    TIMES           reduce using rule 111 (predefined -> drawline .)
    DEVIDE          reduce using rule 111 (predefined -> drawline .)
    PLUS            reduce using rule 111 (predefined -> drawline .)
    MINUS           reduce using rule 111 (predefined -> drawline .)
    LESSER          reduce using rule 111 (predefined -> drawline .)
    GREATER         reduce using rule 111 (predefined -> drawline .)
    EQUAL           reduce using rule 111 (predefined -> drawline .)
    NOTEQUAL        reduce using rule 111 (predefined -> drawline .)
    LESSEROREQUAL   reduce using rule 111 (predefined -> drawline .)
    GREATEROREQUAL  reduce using rule 111 (predefined -> drawline .)
    AND             reduce using rule 111 (predefined -> drawline .)
    OR              reduce using rule 111 (predefined -> drawline .)
    RBRACKET        reduce using rule 111 (predefined -> drawline .)
    COMMA           reduce using rule 111 (predefined -> drawline .)
    RPAREN          reduce using rule 111 (predefined -> drawline .)
    SEMICOLON       reduce using rule 111 (predefined -> drawline .)
    ID              reduce using rule 111 (predefined -> drawline .)
    IF              reduce using rule 111 (predefined -> drawline .)
    PRINT           reduce using rule 111 (predefined -> drawline .)
    WHILE           reduce using rule 111 (predefined -> drawline .)
    RETURN          reduce using rule 111 (predefined -> drawline .)
    DRAWLINE        reduce using rule 111 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 111 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 111 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 111 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 111 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 111 (predefined -> drawline .)
    RBRACE          reduce using rule 111 (predefined -> drawline .)


state 50

    (74) bool -> FALSE .

    TIMES           reduce using rule 74 (bool -> FALSE .)
    DEVIDE          reduce using rule 74 (bool -> FALSE .)
    PLUS            reduce using rule 74 (bool -> FALSE .)
    MINUS           reduce using rule 74 (bool -> FALSE .)
    LESSER          reduce using rule 74 (bool -> FALSE .)
    GREATER         reduce using rule 74 (bool -> FALSE .)
    EQUAL           reduce using rule 74 (bool -> FALSE .)
    NOTEQUAL        reduce using rule 74 (bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 74 (bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 74 (bool -> FALSE .)
    AND             reduce using rule 74 (bool -> FALSE .)
    OR              reduce using rule 74 (bool -> FALSE .)
    RBRACKET        reduce using rule 74 (bool -> FALSE .)
    COMMA           reduce using rule 74 (bool -> FALSE .)
    RPAREN          reduce using rule 74 (bool -> FALSE .)
    SEMICOLON       reduce using rule 74 (bool -> FALSE .)


state 51

    (69) varConst -> bool . push_bool_operand
    (77) push_bool_operand -> .

    TIMES           reduce using rule 77 (push_bool_operand -> .)
    DEVIDE          reduce using rule 77 (push_bool_operand -> .)
    PLUS            reduce using rule 77 (push_bool_operand -> .)
    MINUS           reduce using rule 77 (push_bool_operand -> .)
    LESSER          reduce using rule 77 (push_bool_operand -> .)
    GREATER         reduce using rule 77 (push_bool_operand -> .)
    EQUAL           reduce using rule 77 (push_bool_operand -> .)
    NOTEQUAL        reduce using rule 77 (push_bool_operand -> .)
    LESSEROREQUAL   reduce using rule 77 (push_bool_operand -> .)
    GREATEROREQUAL  reduce using rule 77 (push_bool_operand -> .)
    AND             reduce using rule 77 (push_bool_operand -> .)
    OR              reduce using rule 77 (push_bool_operand -> .)
    RBRACKET        reduce using rule 77 (push_bool_operand -> .)
    COMMA           reduce using rule 77 (push_bool_operand -> .)
    RPAREN          reduce using rule 77 (push_bool_operand -> .)
    SEMICOLON       reduce using rule 77 (push_bool_operand -> .)

    push_bool_operand              shift and go to state 77

state 52

    (58) term -> factor .

    TIMES           reduce using rule 58 (term -> factor .)
    DEVIDE          reduce using rule 58 (term -> factor .)
    PLUS            reduce using rule 58 (term -> factor .)
    MINUS           reduce using rule 58 (term -> factor .)
    LESSER          reduce using rule 58 (term -> factor .)
    GREATER         reduce using rule 58 (term -> factor .)
    EQUAL           reduce using rule 58 (term -> factor .)
    NOTEQUAL        reduce using rule 58 (term -> factor .)
    LESSEROREQUAL   reduce using rule 58 (term -> factor .)
    GREATEROREQUAL  reduce using rule 58 (term -> factor .)
    AND             reduce using rule 58 (term -> factor .)
    OR              reduce using rule 58 (term -> factor .)
    RBRACKET        reduce using rule 58 (term -> factor .)
    COMMA           reduce using rule 58 (term -> factor .)
    RPAREN          reduce using rule 58 (term -> factor .)
    SEMICOLON       reduce using rule 58 (term -> factor .)


state 53

    (114) predefined -> drawcircle .

    TIMES           reduce using rule 114 (predefined -> drawcircle .)
    DEVIDE          reduce using rule 114 (predefined -> drawcircle .)
    PLUS            reduce using rule 114 (predefined -> drawcircle .)
    MINUS           reduce using rule 114 (predefined -> drawcircle .)
    LESSER          reduce using rule 114 (predefined -> drawcircle .)
    GREATER         reduce using rule 114 (predefined -> drawcircle .)
    EQUAL           reduce using rule 114 (predefined -> drawcircle .)
    NOTEQUAL        reduce using rule 114 (predefined -> drawcircle .)
    LESSEROREQUAL   reduce using rule 114 (predefined -> drawcircle .)
    GREATEROREQUAL  reduce using rule 114 (predefined -> drawcircle .)
    AND             reduce using rule 114 (predefined -> drawcircle .)
    OR              reduce using rule 114 (predefined -> drawcircle .)
    RBRACKET        reduce using rule 114 (predefined -> drawcircle .)
    COMMA           reduce using rule 114 (predefined -> drawcircle .)
    RPAREN          reduce using rule 114 (predefined -> drawcircle .)
    SEMICOLON       reduce using rule 114 (predefined -> drawcircle .)
    ID              reduce using rule 114 (predefined -> drawcircle .)
    IF              reduce using rule 114 (predefined -> drawcircle .)
    PRINT           reduce using rule 114 (predefined -> drawcircle .)
    WHILE           reduce using rule 114 (predefined -> drawcircle .)
    RETURN          reduce using rule 114 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 114 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 114 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 114 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 114 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 114 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 114 (predefined -> drawcircle .)
    RBRACE          reduce using rule 114 (predefined -> drawcircle .)


state 54

    (42) expression -> exp .
    (52) exp -> exp . mathoperators1 push_operator term do_math_operation1
    (54) mathoperators1 -> . PLUS
    (55) mathoperators1 -> . MINUS

    LESSER          reduce using rule 42 (expression -> exp .)
    GREATER         reduce using rule 42 (expression -> exp .)
    EQUAL           reduce using rule 42 (expression -> exp .)
    NOTEQUAL        reduce using rule 42 (expression -> exp .)
    LESSEROREQUAL   reduce using rule 42 (expression -> exp .)
    GREATEROREQUAL  reduce using rule 42 (expression -> exp .)
    AND             reduce using rule 42 (expression -> exp .)
    OR              reduce using rule 42 (expression -> exp .)
    RBRACKET        reduce using rule 42 (expression -> exp .)
    COMMA           reduce using rule 42 (expression -> exp .)
    RPAREN          reduce using rule 42 (expression -> exp .)
    SEMICOLON       reduce using rule 42 (expression -> exp .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80

    mathoperators1                 shift and go to state 79

state 55

    (116) predefined -> drawpolygon .

    TIMES           reduce using rule 116 (predefined -> drawpolygon .)
    DEVIDE          reduce using rule 116 (predefined -> drawpolygon .)
    PLUS            reduce using rule 116 (predefined -> drawpolygon .)
    MINUS           reduce using rule 116 (predefined -> drawpolygon .)
    LESSER          reduce using rule 116 (predefined -> drawpolygon .)
    GREATER         reduce using rule 116 (predefined -> drawpolygon .)
    EQUAL           reduce using rule 116 (predefined -> drawpolygon .)
    NOTEQUAL        reduce using rule 116 (predefined -> drawpolygon .)
    LESSEROREQUAL   reduce using rule 116 (predefined -> drawpolygon .)
    GREATEROREQUAL  reduce using rule 116 (predefined -> drawpolygon .)
    AND             reduce using rule 116 (predefined -> drawpolygon .)
    OR              reduce using rule 116 (predefined -> drawpolygon .)
    RBRACKET        reduce using rule 116 (predefined -> drawpolygon .)
    COMMA           reduce using rule 116 (predefined -> drawpolygon .)
    RPAREN          reduce using rule 116 (predefined -> drawpolygon .)
    SEMICOLON       reduce using rule 116 (predefined -> drawpolygon .)
    ID              reduce using rule 116 (predefined -> drawpolygon .)
    IF              reduce using rule 116 (predefined -> drawpolygon .)
    PRINT           reduce using rule 116 (predefined -> drawpolygon .)
    WHILE           reduce using rule 116 (predefined -> drawpolygon .)
    RETURN          reduce using rule 116 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 116 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 116 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 116 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 116 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 116 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 116 (predefined -> drawpolygon .)
    RBRACE          reduce using rule 116 (predefined -> drawpolygon .)


state 56

    (118) drawsquare -> DRAWSQUARE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 81


state 57

    (62) factor -> LPAREN . push_false_bottom sexpression RPAREN pop_false_bottom
    (64) push_false_bottom -> .

    NOT             reduce using rule 64 (push_false_bottom -> .)
    LPAREN          reduce using rule 64 (push_false_bottom -> .)
    ID              reduce using rule 64 (push_false_bottom -> .)
    FLOAT           reduce using rule 64 (push_false_bottom -> .)
    INT             reduce using rule 64 (push_false_bottom -> .)
    STRING          reduce using rule 64 (push_false_bottom -> .)
    TRUE            reduce using rule 64 (push_false_bottom -> .)
    FALSE           reduce using rule 64 (push_false_bottom -> .)
    DRAWLINE        reduce using rule 64 (push_false_bottom -> .)
    DRAWSQUARE      reduce using rule 64 (push_false_bottom -> .)
    DRAWTRIANGLE    reduce using rule 64 (push_false_bottom -> .)
    DRAWCIRCLE      reduce using rule 64 (push_false_bottom -> .)
    DRAWCURVE       reduce using rule 64 (push_false_bottom -> .)
    DRAWPOLYGON     reduce using rule 64 (push_false_bottom -> .)

    push_false_bottom              shift and go to state 82

state 58

    (66) varConst -> ID . push_id_operand
    (79) functioncall -> ID . check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (33) push_id_operand -> .
    (80) check_function_existance -> .

    TIMES           reduce using rule 33 (push_id_operand -> .)
    DEVIDE          reduce using rule 33 (push_id_operand -> .)
    PLUS            reduce using rule 33 (push_id_operand -> .)
    MINUS           reduce using rule 33 (push_id_operand -> .)
    LESSER          reduce using rule 33 (push_id_operand -> .)
    GREATER         reduce using rule 33 (push_id_operand -> .)
    EQUAL           reduce using rule 33 (push_id_operand -> .)
    NOTEQUAL        reduce using rule 33 (push_id_operand -> .)
    LESSEROREQUAL   reduce using rule 33 (push_id_operand -> .)
    GREATEROREQUAL  reduce using rule 33 (push_id_operand -> .)
    AND             reduce using rule 33 (push_id_operand -> .)
    OR              reduce using rule 33 (push_id_operand -> .)
    RBRACKET        reduce using rule 33 (push_id_operand -> .)
    COMMA           reduce using rule 33 (push_id_operand -> .)
    RPAREN          reduce using rule 33 (push_id_operand -> .)
    SEMICOLON       reduce using rule 33 (push_id_operand -> .)
    LPAREN          reduce using rule 80 (check_function_existance -> .)

    push_id_operand                shift and go to state 84
    check_function_existance       shift and go to state 83

state 59

    (53) exp -> term .
    (57) term -> term . mathoperators2 push_operator factor do_math_operation2
    (59) mathoperators2 -> . TIMES
    (60) mathoperators2 -> . DEVIDE

    PLUS            reduce using rule 53 (exp -> term .)
    MINUS           reduce using rule 53 (exp -> term .)
    LESSER          reduce using rule 53 (exp -> term .)
    GREATER         reduce using rule 53 (exp -> term .)
    EQUAL           reduce using rule 53 (exp -> term .)
    NOTEQUAL        reduce using rule 53 (exp -> term .)
    LESSEROREQUAL   reduce using rule 53 (exp -> term .)
    GREATEROREQUAL  reduce using rule 53 (exp -> term .)
    AND             reduce using rule 53 (exp -> term .)
    OR              reduce using rule 53 (exp -> term .)
    RBRACKET        reduce using rule 53 (exp -> term .)
    COMMA           reduce using rule 53 (exp -> term .)
    RPAREN          reduce using rule 53 (exp -> term .)
    SEMICOLON       reduce using rule 53 (exp -> term .)
    TIMES           shift and go to state 86
    DEVIDE          shift and go to state 85

    mathoperators2                 shift and go to state 87

state 60

    (122) drawpolygon -> DRAWPOLYGON . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 88


state 61

    (68) varConst -> INT . push_int_operand
    (76) push_int_operand -> .

    TIMES           reduce using rule 76 (push_int_operand -> .)
    DEVIDE          reduce using rule 76 (push_int_operand -> .)
    PLUS            reduce using rule 76 (push_int_operand -> .)
    MINUS           reduce using rule 76 (push_int_operand -> .)
    LESSER          reduce using rule 76 (push_int_operand -> .)
    GREATER         reduce using rule 76 (push_int_operand -> .)
    EQUAL           reduce using rule 76 (push_int_operand -> .)
    NOTEQUAL        reduce using rule 76 (push_int_operand -> .)
    LESSEROREQUAL   reduce using rule 76 (push_int_operand -> .)
    GREATEROREQUAL  reduce using rule 76 (push_int_operand -> .)
    AND             reduce using rule 76 (push_int_operand -> .)
    OR              reduce using rule 76 (push_int_operand -> .)
    RBRACKET        reduce using rule 76 (push_int_operand -> .)
    COMMA           reduce using rule 76 (push_int_operand -> .)
    RPAREN          reduce using rule 76 (push_int_operand -> .)
    SEMICOLON       reduce using rule 76 (push_int_operand -> .)

    push_int_operand               shift and go to state 89

state 62

    (67) varConst -> FLOAT . push_float_operand
    (75) push_float_operand -> .

    TIMES           reduce using rule 75 (push_float_operand -> .)
    DEVIDE          reduce using rule 75 (push_float_operand -> .)
    PLUS            reduce using rule 75 (push_float_operand -> .)
    MINUS           reduce using rule 75 (push_float_operand -> .)
    LESSER          reduce using rule 75 (push_float_operand -> .)
    GREATER         reduce using rule 75 (push_float_operand -> .)
    EQUAL           reduce using rule 75 (push_float_operand -> .)
    NOTEQUAL        reduce using rule 75 (push_float_operand -> .)
    LESSEROREQUAL   reduce using rule 75 (push_float_operand -> .)
    GREATEROREQUAL  reduce using rule 75 (push_float_operand -> .)
    AND             reduce using rule 75 (push_float_operand -> .)
    OR              reduce using rule 75 (push_float_operand -> .)
    RBRACKET        reduce using rule 75 (push_float_operand -> .)
    COMMA           reduce using rule 75 (push_float_operand -> .)
    RPAREN          reduce using rule 75 (push_float_operand -> .)
    SEMICOLON       reduce using rule 75 (push_float_operand -> .)

    push_float_operand             shift and go to state 90

state 63

    (121) drawcurve -> DRAWCURVE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 91


state 64

    (72) varConst -> functioncall .

    TIMES           reduce using rule 72 (varConst -> functioncall .)
    DEVIDE          reduce using rule 72 (varConst -> functioncall .)
    PLUS            reduce using rule 72 (varConst -> functioncall .)
    MINUS           reduce using rule 72 (varConst -> functioncall .)
    LESSER          reduce using rule 72 (varConst -> functioncall .)
    GREATER         reduce using rule 72 (varConst -> functioncall .)
    EQUAL           reduce using rule 72 (varConst -> functioncall .)
    NOTEQUAL        reduce using rule 72 (varConst -> functioncall .)
    LESSEROREQUAL   reduce using rule 72 (varConst -> functioncall .)
    GREATEROREQUAL  reduce using rule 72 (varConst -> functioncall .)
    AND             reduce using rule 72 (varConst -> functioncall .)
    OR              reduce using rule 72 (varConst -> functioncall .)
    RBRACKET        reduce using rule 72 (varConst -> functioncall .)
    COMMA           reduce using rule 72 (varConst -> functioncall .)
    RPAREN          reduce using rule 72 (varConst -> functioncall .)
    SEMICOLON       reduce using rule 72 (varConst -> functioncall .)


state 65

    (37) sexpression -> negation expression . do_not_operation
    (41) expression -> expression . relationaloperators push_operator exp do_relational_operation
    (40) do_not_operation -> .
    (43) relationaloperators -> . LESSER
    (44) relationaloperators -> . GREATER
    (45) relationaloperators -> . EQUAL
    (46) relationaloperators -> . NOTEQUAL
    (47) relationaloperators -> . LESSEROREQUAL
    (48) relationaloperators -> . GREATEROREQUAL
    (49) relationaloperators -> . AND
    (50) relationaloperators -> . OR

    RBRACKET        reduce using rule 40 (do_not_operation -> .)
    COMMA           reduce using rule 40 (do_not_operation -> .)
    RPAREN          reduce using rule 40 (do_not_operation -> .)
    SEMICOLON       reduce using rule 40 (do_not_operation -> .)
    LESSER          shift and go to state 99
    GREATER         shift and go to state 95
    EQUAL           shift and go to state 98
    NOTEQUAL        shift and go to state 96
    LESSEROREQUAL   shift and go to state 97
    GREATEROREQUAL  shift and go to state 100
    AND             shift and go to state 92
    OR              shift and go to state 101

    relationaloperators            shift and go to state 93
    do_not_operation               shift and go to state 94

state 66

    (26) array -> LBRACKET sexpression RBRACKET .

    SEMICOLON       reduce using rule 26 (array -> LBRACKET sexpression RBRACKET .)


state 67

    (38) negation -> NOT push_operator .

    LPAREN          reduce using rule 38 (negation -> NOT push_operator .)
    ID              reduce using rule 38 (negation -> NOT push_operator .)
    FLOAT           reduce using rule 38 (negation -> NOT push_operator .)
    INT             reduce using rule 38 (negation -> NOT push_operator .)
    STRING          reduce using rule 38 (negation -> NOT push_operator .)
    TRUE            reduce using rule 38 (negation -> NOT push_operator .)
    FALSE           reduce using rule 38 (negation -> NOT push_operator .)
    DRAWLINE        reduce using rule 38 (negation -> NOT push_operator .)
    DRAWSQUARE      reduce using rule 38 (negation -> NOT push_operator .)
    DRAWTRIANGLE    reduce using rule 38 (negation -> NOT push_operator .)
    DRAWCIRCLE      reduce using rule 38 (negation -> NOT push_operator .)
    DRAWCURVE       reduce using rule 38 (negation -> NOT push_operator .)
    DRAWPOLYGON     reduce using rule 38 (negation -> NOT push_operator .)


state 68

    (23) vars -> VAR type ID array store_variable SEMICOLON . vars
    (23) vars -> . VAR type ID array store_variable SEMICOLON vars
    (24) vars -> . empty
    (123) empty -> .

    VAR             shift and go to state 8
    FUNCTION        reduce using rule 123 (empty -> .)
    INTTYPE         reduce using rule 123 (empty -> .)
    LBRACE          reduce using rule 123 (empty -> .)

    empty                          shift and go to state 9
    vars                           shift and go to state 102

state 69

    (4) main -> INTTYPE MAIN LPAREN RPAREN add_jump_to_main . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 103

    block                          shift and go to state 104

state 70

    (96) parameter -> empty .

    RPAREN          reduce using rule 96 (parameter -> empty .)


state 71

    (95) parameter -> type . ID store_parameter parameterprima

    ID              shift and go to state 105


state 72

    (88) function -> FUNCTION functiontype ID store_function LPAREN parameter . RPAREN vars block end_process function

    RPAREN          shift and go to state 106


state 73

    (119) drawtriangle -> DRAWTRIANGLE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 107
    empty                          shift and go to state 35

state 74

    (117) drawline -> DRAWLINE LPAREN . sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 108
    empty                          shift and go to state 35

state 75

    (70) varConst -> STRING push_string_operand .

    TIMES           reduce using rule 70 (varConst -> STRING push_string_operand .)
    DEVIDE          reduce using rule 70 (varConst -> STRING push_string_operand .)
    PLUS            reduce using rule 70 (varConst -> STRING push_string_operand .)
    MINUS           reduce using rule 70 (varConst -> STRING push_string_operand .)
    LESSER          reduce using rule 70 (varConst -> STRING push_string_operand .)
    GREATER         reduce using rule 70 (varConst -> STRING push_string_operand .)
    EQUAL           reduce using rule 70 (varConst -> STRING push_string_operand .)
    NOTEQUAL        reduce using rule 70 (varConst -> STRING push_string_operand .)
    LESSEROREQUAL   reduce using rule 70 (varConst -> STRING push_string_operand .)
    GREATEROREQUAL  reduce using rule 70 (varConst -> STRING push_string_operand .)
    AND             reduce using rule 70 (varConst -> STRING push_string_operand .)
    OR              reduce using rule 70 (varConst -> STRING push_string_operand .)
    RBRACKET        reduce using rule 70 (varConst -> STRING push_string_operand .)
    COMMA           reduce using rule 70 (varConst -> STRING push_string_operand .)
    RPAREN          reduce using rule 70 (varConst -> STRING push_string_operand .)
    SEMICOLON       reduce using rule 70 (varConst -> STRING push_string_operand .)


state 76

    (120) drawcircle -> DRAWCIRCLE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 109
    empty                          shift and go to state 35

state 77

    (69) varConst -> bool push_bool_operand .

    TIMES           reduce using rule 69 (varConst -> bool push_bool_operand .)
    DEVIDE          reduce using rule 69 (varConst -> bool push_bool_operand .)
    PLUS            reduce using rule 69 (varConst -> bool push_bool_operand .)
    MINUS           reduce using rule 69 (varConst -> bool push_bool_operand .)
    LESSER          reduce using rule 69 (varConst -> bool push_bool_operand .)
    GREATER         reduce using rule 69 (varConst -> bool push_bool_operand .)
    EQUAL           reduce using rule 69 (varConst -> bool push_bool_operand .)
    NOTEQUAL        reduce using rule 69 (varConst -> bool push_bool_operand .)
    LESSEROREQUAL   reduce using rule 69 (varConst -> bool push_bool_operand .)
    GREATEROREQUAL  reduce using rule 69 (varConst -> bool push_bool_operand .)
    AND             reduce using rule 69 (varConst -> bool push_bool_operand .)
    OR              reduce using rule 69 (varConst -> bool push_bool_operand .)
    RBRACKET        reduce using rule 69 (varConst -> bool push_bool_operand .)
    COMMA           reduce using rule 69 (varConst -> bool push_bool_operand .)
    RPAREN          reduce using rule 69 (varConst -> bool push_bool_operand .)
    SEMICOLON       reduce using rule 69 (varConst -> bool push_bool_operand .)


state 78

    (54) mathoperators1 -> PLUS .

    LPAREN          reduce using rule 54 (mathoperators1 -> PLUS .)
    ID              reduce using rule 54 (mathoperators1 -> PLUS .)
    FLOAT           reduce using rule 54 (mathoperators1 -> PLUS .)
    INT             reduce using rule 54 (mathoperators1 -> PLUS .)
    STRING          reduce using rule 54 (mathoperators1 -> PLUS .)
    TRUE            reduce using rule 54 (mathoperators1 -> PLUS .)
    FALSE           reduce using rule 54 (mathoperators1 -> PLUS .)
    DRAWLINE        reduce using rule 54 (mathoperators1 -> PLUS .)
    DRAWSQUARE      reduce using rule 54 (mathoperators1 -> PLUS .)
    DRAWTRIANGLE    reduce using rule 54 (mathoperators1 -> PLUS .)
    DRAWCIRCLE      reduce using rule 54 (mathoperators1 -> PLUS .)
    DRAWCURVE       reduce using rule 54 (mathoperators1 -> PLUS .)
    DRAWPOLYGON     reduce using rule 54 (mathoperators1 -> PLUS .)


state 79

    (52) exp -> exp mathoperators1 . push_operator term do_math_operation1
    (34) push_operator -> .

    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)
    DRAWLINE        reduce using rule 34 (push_operator -> .)
    DRAWSQUARE      reduce using rule 34 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 34 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 34 (push_operator -> .)
    DRAWCURVE       reduce using rule 34 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 110

state 80

    (55) mathoperators1 -> MINUS .

    LPAREN          reduce using rule 55 (mathoperators1 -> MINUS .)
    ID              reduce using rule 55 (mathoperators1 -> MINUS .)
    FLOAT           reduce using rule 55 (mathoperators1 -> MINUS .)
    INT             reduce using rule 55 (mathoperators1 -> MINUS .)
    STRING          reduce using rule 55 (mathoperators1 -> MINUS .)
    TRUE            reduce using rule 55 (mathoperators1 -> MINUS .)
    FALSE           reduce using rule 55 (mathoperators1 -> MINUS .)
    DRAWLINE        reduce using rule 55 (mathoperators1 -> MINUS .)
    DRAWSQUARE      reduce using rule 55 (mathoperators1 -> MINUS .)
    DRAWTRIANGLE    reduce using rule 55 (mathoperators1 -> MINUS .)
    DRAWCIRCLE      reduce using rule 55 (mathoperators1 -> MINUS .)
    DRAWCURVE       reduce using rule 55 (mathoperators1 -> MINUS .)
    DRAWPOLYGON     reduce using rule 55 (mathoperators1 -> MINUS .)


state 81

    (118) drawsquare -> DRAWSQUARE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 111
    empty                          shift and go to state 35

state 82

    (62) factor -> LPAREN push_false_bottom . sexpression RPAREN pop_false_bottom
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    sexpression                    shift and go to state 112
    negation                       shift and go to state 32
    empty                          shift and go to state 35

state 83

    (79) functioncall -> ID check_function_existance . LPAREN generate_era funcargum RPAREN validate_arguments

    LPAREN          shift and go to state 113


state 84

    (66) varConst -> ID push_id_operand .

    TIMES           reduce using rule 66 (varConst -> ID push_id_operand .)
    DEVIDE          reduce using rule 66 (varConst -> ID push_id_operand .)
    PLUS            reduce using rule 66 (varConst -> ID push_id_operand .)
    MINUS           reduce using rule 66 (varConst -> ID push_id_operand .)
    LESSER          reduce using rule 66 (varConst -> ID push_id_operand .)
    GREATER         reduce using rule 66 (varConst -> ID push_id_operand .)
    EQUAL           reduce using rule 66 (varConst -> ID push_id_operand .)
    NOTEQUAL        reduce using rule 66 (varConst -> ID push_id_operand .)
    LESSEROREQUAL   reduce using rule 66 (varConst -> ID push_id_operand .)
    GREATEROREQUAL  reduce using rule 66 (varConst -> ID push_id_operand .)
    AND             reduce using rule 66 (varConst -> ID push_id_operand .)
    OR              reduce using rule 66 (varConst -> ID push_id_operand .)
    RBRACKET        reduce using rule 66 (varConst -> ID push_id_operand .)
    COMMA           reduce using rule 66 (varConst -> ID push_id_operand .)
    RPAREN          reduce using rule 66 (varConst -> ID push_id_operand .)
    SEMICOLON       reduce using rule 66 (varConst -> ID push_id_operand .)


state 85

    (60) mathoperators2 -> DEVIDE .

    LPAREN          reduce using rule 60 (mathoperators2 -> DEVIDE .)
    ID              reduce using rule 60 (mathoperators2 -> DEVIDE .)
    FLOAT           reduce using rule 60 (mathoperators2 -> DEVIDE .)
    INT             reduce using rule 60 (mathoperators2 -> DEVIDE .)
    STRING          reduce using rule 60 (mathoperators2 -> DEVIDE .)
    TRUE            reduce using rule 60 (mathoperators2 -> DEVIDE .)
    FALSE           reduce using rule 60 (mathoperators2 -> DEVIDE .)
    DRAWLINE        reduce using rule 60 (mathoperators2 -> DEVIDE .)
    DRAWSQUARE      reduce using rule 60 (mathoperators2 -> DEVIDE .)
    DRAWTRIANGLE    reduce using rule 60 (mathoperators2 -> DEVIDE .)
    DRAWCIRCLE      reduce using rule 60 (mathoperators2 -> DEVIDE .)
    DRAWCURVE       reduce using rule 60 (mathoperators2 -> DEVIDE .)
    DRAWPOLYGON     reduce using rule 60 (mathoperators2 -> DEVIDE .)


state 86

    (59) mathoperators2 -> TIMES .

    LPAREN          reduce using rule 59 (mathoperators2 -> TIMES .)
    ID              reduce using rule 59 (mathoperators2 -> TIMES .)
    FLOAT           reduce using rule 59 (mathoperators2 -> TIMES .)
    INT             reduce using rule 59 (mathoperators2 -> TIMES .)
    STRING          reduce using rule 59 (mathoperators2 -> TIMES .)
    TRUE            reduce using rule 59 (mathoperators2 -> TIMES .)
    FALSE           reduce using rule 59 (mathoperators2 -> TIMES .)
    DRAWLINE        reduce using rule 59 (mathoperators2 -> TIMES .)
    DRAWSQUARE      reduce using rule 59 (mathoperators2 -> TIMES .)
    DRAWTRIANGLE    reduce using rule 59 (mathoperators2 -> TIMES .)
    DRAWCIRCLE      reduce using rule 59 (mathoperators2 -> TIMES .)
    DRAWCURVE       reduce using rule 59 (mathoperators2 -> TIMES .)
    DRAWPOLYGON     reduce using rule 59 (mathoperators2 -> TIMES .)


state 87

    (57) term -> term mathoperators2 . push_operator factor do_math_operation2
    (34) push_operator -> .

    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)
    DRAWLINE        reduce using rule 34 (push_operator -> .)
    DRAWSQUARE      reduce using rule 34 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 34 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 34 (push_operator -> .)
    DRAWCURVE       reduce using rule 34 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 114

state 88

    (122) drawpolygon -> DRAWPOLYGON LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 115
    empty                          shift and go to state 35

state 89

    (68) varConst -> INT push_int_operand .

    TIMES           reduce using rule 68 (varConst -> INT push_int_operand .)
    DEVIDE          reduce using rule 68 (varConst -> INT push_int_operand .)
    PLUS            reduce using rule 68 (varConst -> INT push_int_operand .)
    MINUS           reduce using rule 68 (varConst -> INT push_int_operand .)
    LESSER          reduce using rule 68 (varConst -> INT push_int_operand .)
    GREATER         reduce using rule 68 (varConst -> INT push_int_operand .)
    EQUAL           reduce using rule 68 (varConst -> INT push_int_operand .)
    NOTEQUAL        reduce using rule 68 (varConst -> INT push_int_operand .)
    LESSEROREQUAL   reduce using rule 68 (varConst -> INT push_int_operand .)
    GREATEROREQUAL  reduce using rule 68 (varConst -> INT push_int_operand .)
    AND             reduce using rule 68 (varConst -> INT push_int_operand .)
    OR              reduce using rule 68 (varConst -> INT push_int_operand .)
    RBRACKET        reduce using rule 68 (varConst -> INT push_int_operand .)
    COMMA           reduce using rule 68 (varConst -> INT push_int_operand .)
    RPAREN          reduce using rule 68 (varConst -> INT push_int_operand .)
    SEMICOLON       reduce using rule 68 (varConst -> INT push_int_operand .)


state 90

    (67) varConst -> FLOAT push_float_operand .

    TIMES           reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    DEVIDE          reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    PLUS            reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    MINUS           reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    LESSER          reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    GREATER         reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    EQUAL           reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    NOTEQUAL        reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    LESSEROREQUAL   reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    GREATEROREQUAL  reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    AND             reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    OR              reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    RBRACKET        reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    COMMA           reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    RPAREN          reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    SEMICOLON       reduce using rule 67 (varConst -> FLOAT push_float_operand .)


state 91

    (121) drawcurve -> DRAWCURVE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 116
    empty                          shift and go to state 35

state 92

    (49) relationaloperators -> AND .

    LPAREN          reduce using rule 49 (relationaloperators -> AND .)
    ID              reduce using rule 49 (relationaloperators -> AND .)
    FLOAT           reduce using rule 49 (relationaloperators -> AND .)
    INT             reduce using rule 49 (relationaloperators -> AND .)
    STRING          reduce using rule 49 (relationaloperators -> AND .)
    TRUE            reduce using rule 49 (relationaloperators -> AND .)
    FALSE           reduce using rule 49 (relationaloperators -> AND .)
    DRAWLINE        reduce using rule 49 (relationaloperators -> AND .)
    DRAWSQUARE      reduce using rule 49 (relationaloperators -> AND .)
    DRAWTRIANGLE    reduce using rule 49 (relationaloperators -> AND .)
    DRAWCIRCLE      reduce using rule 49 (relationaloperators -> AND .)
    DRAWCURVE       reduce using rule 49 (relationaloperators -> AND .)
    DRAWPOLYGON     reduce using rule 49 (relationaloperators -> AND .)


state 93

    (41) expression -> expression relationaloperators . push_operator exp do_relational_operation
    (34) push_operator -> .

    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)
    DRAWLINE        reduce using rule 34 (push_operator -> .)
    DRAWSQUARE      reduce using rule 34 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 34 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 34 (push_operator -> .)
    DRAWCURVE       reduce using rule 34 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 117

state 94

    (37) sexpression -> negation expression do_not_operation .

    COMMA           reduce using rule 37 (sexpression -> negation expression do_not_operation .)
    RPAREN          reduce using rule 37 (sexpression -> negation expression do_not_operation .)
    RBRACKET        reduce using rule 37 (sexpression -> negation expression do_not_operation .)
    SEMICOLON       reduce using rule 37 (sexpression -> negation expression do_not_operation .)


state 95

    (44) relationaloperators -> GREATER .

    LPAREN          reduce using rule 44 (relationaloperators -> GREATER .)
    ID              reduce using rule 44 (relationaloperators -> GREATER .)
    FLOAT           reduce using rule 44 (relationaloperators -> GREATER .)
    INT             reduce using rule 44 (relationaloperators -> GREATER .)
    STRING          reduce using rule 44 (relationaloperators -> GREATER .)
    TRUE            reduce using rule 44 (relationaloperators -> GREATER .)
    FALSE           reduce using rule 44 (relationaloperators -> GREATER .)
    DRAWLINE        reduce using rule 44 (relationaloperators -> GREATER .)
    DRAWSQUARE      reduce using rule 44 (relationaloperators -> GREATER .)
    DRAWTRIANGLE    reduce using rule 44 (relationaloperators -> GREATER .)
    DRAWCIRCLE      reduce using rule 44 (relationaloperators -> GREATER .)
    DRAWCURVE       reduce using rule 44 (relationaloperators -> GREATER .)
    DRAWPOLYGON     reduce using rule 44 (relationaloperators -> GREATER .)


state 96

    (46) relationaloperators -> NOTEQUAL .

    LPAREN          reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    ID              reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    FLOAT           reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    INT             reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    STRING          reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    TRUE            reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    FALSE           reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    DRAWLINE        reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    DRAWSQUARE      reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    DRAWTRIANGLE    reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    DRAWCIRCLE      reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    DRAWCURVE       reduce using rule 46 (relationaloperators -> NOTEQUAL .)
    DRAWPOLYGON     reduce using rule 46 (relationaloperators -> NOTEQUAL .)


state 97

    (47) relationaloperators -> LESSEROREQUAL .

    LPAREN          reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    ID              reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    FLOAT           reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    INT             reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    STRING          reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    TRUE            reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    FALSE           reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    DRAWLINE        reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    DRAWSQUARE      reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    DRAWTRIANGLE    reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    DRAWCIRCLE      reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    DRAWCURVE       reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)
    DRAWPOLYGON     reduce using rule 47 (relationaloperators -> LESSEROREQUAL .)


state 98

    (45) relationaloperators -> EQUAL .

    LPAREN          reduce using rule 45 (relationaloperators -> EQUAL .)
    ID              reduce using rule 45 (relationaloperators -> EQUAL .)
    FLOAT           reduce using rule 45 (relationaloperators -> EQUAL .)
    INT             reduce using rule 45 (relationaloperators -> EQUAL .)
    STRING          reduce using rule 45 (relationaloperators -> EQUAL .)
    TRUE            reduce using rule 45 (relationaloperators -> EQUAL .)
    FALSE           reduce using rule 45 (relationaloperators -> EQUAL .)
    DRAWLINE        reduce using rule 45 (relationaloperators -> EQUAL .)
    DRAWSQUARE      reduce using rule 45 (relationaloperators -> EQUAL .)
    DRAWTRIANGLE    reduce using rule 45 (relationaloperators -> EQUAL .)
    DRAWCIRCLE      reduce using rule 45 (relationaloperators -> EQUAL .)
    DRAWCURVE       reduce using rule 45 (relationaloperators -> EQUAL .)
    DRAWPOLYGON     reduce using rule 45 (relationaloperators -> EQUAL .)


state 99

    (43) relationaloperators -> LESSER .

    LPAREN          reduce using rule 43 (relationaloperators -> LESSER .)
    ID              reduce using rule 43 (relationaloperators -> LESSER .)
    FLOAT           reduce using rule 43 (relationaloperators -> LESSER .)
    INT             reduce using rule 43 (relationaloperators -> LESSER .)
    STRING          reduce using rule 43 (relationaloperators -> LESSER .)
    TRUE            reduce using rule 43 (relationaloperators -> LESSER .)
    FALSE           reduce using rule 43 (relationaloperators -> LESSER .)
    DRAWLINE        reduce using rule 43 (relationaloperators -> LESSER .)
    DRAWSQUARE      reduce using rule 43 (relationaloperators -> LESSER .)
    DRAWTRIANGLE    reduce using rule 43 (relationaloperators -> LESSER .)
    DRAWCIRCLE      reduce using rule 43 (relationaloperators -> LESSER .)
    DRAWCURVE       reduce using rule 43 (relationaloperators -> LESSER .)
    DRAWPOLYGON     reduce using rule 43 (relationaloperators -> LESSER .)


state 100

    (48) relationaloperators -> GREATEROREQUAL .

    LPAREN          reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    ID              reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    FLOAT           reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    INT             reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    STRING          reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    TRUE            reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    FALSE           reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    DRAWLINE        reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    DRAWSQUARE      reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    DRAWTRIANGLE    reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    DRAWCIRCLE      reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    DRAWCURVE       reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)
    DRAWPOLYGON     reduce using rule 48 (relationaloperators -> GREATEROREQUAL .)


state 101

    (50) relationaloperators -> OR .

    LPAREN          reduce using rule 50 (relationaloperators -> OR .)
    ID              reduce using rule 50 (relationaloperators -> OR .)
    FLOAT           reduce using rule 50 (relationaloperators -> OR .)
    INT             reduce using rule 50 (relationaloperators -> OR .)
    STRING          reduce using rule 50 (relationaloperators -> OR .)
    TRUE            reduce using rule 50 (relationaloperators -> OR .)
    FALSE           reduce using rule 50 (relationaloperators -> OR .)
    DRAWLINE        reduce using rule 50 (relationaloperators -> OR .)
    DRAWSQUARE      reduce using rule 50 (relationaloperators -> OR .)
    DRAWTRIANGLE    reduce using rule 50 (relationaloperators -> OR .)
    DRAWCIRCLE      reduce using rule 50 (relationaloperators -> OR .)
    DRAWCURVE       reduce using rule 50 (relationaloperators -> OR .)
    DRAWPOLYGON     reduce using rule 50 (relationaloperators -> OR .)


state 102

    (23) vars -> VAR type ID array store_variable SEMICOLON vars .

    LBRACE          reduce using rule 23 (vars -> VAR type ID array store_variable SEMICOLON vars .)
    FUNCTION        reduce using rule 23 (vars -> VAR type ID array store_variable SEMICOLON vars .)
    INTTYPE         reduce using rule 23 (vars -> VAR type ID array store_variable SEMICOLON vars .)


state 103

    (7) block -> LBRACE . blockprima RBRACE
    (8) blockprima -> . statute blockprima
    (9) blockprima -> . empty
    (10) statute -> . assignment
    (11) statute -> . condition
    (12) statute -> . write
    (13) statute -> . read
    (14) statute -> . cycle
    (15) statute -> . functioncall
    (16) statute -> . predefined
    (17) statute -> . return
    (123) empty -> .
    (32) assignment -> . ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (18) condition -> . IF LPAREN sexpression RPAREN do_condition_operation block else
    (100) write -> . PRINT LPAREN sexpression RPAREN SEMICOLON
    (101) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (102) cycle -> . WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (79) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (111) predefined -> . drawline
    (112) predefined -> . drawsquare
    (113) predefined -> . drawtriangle
    (114) predefined -> . drawcircle
    (115) predefined -> . drawcurve
    (116) predefined -> . drawpolygon
    (94) return -> . RETURN sexpression SEMICOLON
    (117) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (121) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (122) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 123 (empty -> .)
    ID              shift and go to state 129
    IF              shift and go to state 131
    PRINT           shift and go to state 120
    WHILE           shift and go to state 119
    RETURN          shift and go to state 118
    DRAWLINE        shift and go to state 45
    DRAWSQUARE      shift and go to state 56
    DRAWTRIANGLE    shift and go to state 41
    DRAWCIRCLE      shift and go to state 48
    DRAWCURVE       shift and go to state 63
    DRAWPOLYGON     shift and go to state 60

    drawtriangle                   shift and go to state 39
    drawcurve                      shift and go to state 42
    predefined                     shift and go to state 121
    blockprima                     shift and go to state 122
    drawline                       shift and go to state 49
    write                          shift and go to state 123
    empty                          shift and go to state 125
    return                         shift and go to state 126
    drawpolygon                    shift and go to state 55
    read                           shift and go to state 127
    assignment                     shift and go to state 128
    condition                      shift and go to state 130
    cycle                          shift and go to state 124
    statute                        shift and go to state 132
    drawcircle                     shift and go to state 53
    drawsquare                     shift and go to state 43
    functioncall                   shift and go to state 133

state 104

    (4) main -> INTTYPE MAIN LPAREN RPAREN add_jump_to_main block .

    $end            reduce using rule 4 (main -> INTTYPE MAIN LPAREN RPAREN add_jump_to_main block .)


state 105

    (95) parameter -> type ID . store_parameter parameterprima
    (99) store_parameter -> .

    COMMA           reduce using rule 99 (store_parameter -> .)
    RPAREN          reduce using rule 99 (store_parameter -> .)

    store_parameter                shift and go to state 134

state 106

    (88) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN . vars block end_process function
    (23) vars -> . VAR type ID array store_variable SEMICOLON vars
    (24) vars -> . empty
    (123) empty -> .

    VAR             shift and go to state 8
    LBRACE          reduce using rule 123 (empty -> .)

    vars                           shift and go to state 135
    empty                          shift and go to state 9

state 107

    (119) drawtriangle -> DRAWTRIANGLE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 136


state 108

    (117) drawline -> DRAWLINE LPAREN sexpression . COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 137


state 109

    (120) drawcircle -> DRAWCIRCLE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 138


state 110

    (52) exp -> exp mathoperators1 push_operator . term do_math_operation1
    (57) term -> . term mathoperators2 push_operator factor do_math_operation2
    (58) term -> . factor
    (62) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (63) factor -> . varConst
    (66) varConst -> . ID push_id_operand
    (67) varConst -> . FLOAT push_float_operand
    (68) varConst -> . INT push_int_operand
    (69) varConst -> . bool push_bool_operand
    (70) varConst -> . STRING push_string_operand
    (71) varConst -> . predefined
    (72) varConst -> . functioncall
    (73) bool -> . TRUE
    (74) bool -> . FALSE
    (111) predefined -> . drawline
    (112) predefined -> . drawsquare
    (113) predefined -> . drawtriangle
    (114) predefined -> . drawcircle
    (115) predefined -> . drawcurve
    (116) predefined -> . drawpolygon
    (79) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (117) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (121) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (122) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 61
    STRING          shift and go to state 46
    TRUE            shift and go to state 44
    FALSE           shift and go to state 50
    DRAWLINE        shift and go to state 45
    DRAWSQUARE      shift and go to state 56
    DRAWTRIANGLE    shift and go to state 41
    DRAWCIRCLE      shift and go to state 48
    DRAWCURVE       shift and go to state 63
    DRAWPOLYGON     shift and go to state 60

    drawtriangle                   shift and go to state 39
    varConst                       shift and go to state 40
    drawcurve                      shift and go to state 42
    predefined                     shift and go to state 47
    drawline                       shift and go to state 49
    bool                           shift and go to state 51
    factor                         shift and go to state 52
    drawcircle                     shift and go to state 53
    drawpolygon                    shift and go to state 55
    term                           shift and go to state 139
    drawsquare                     shift and go to state 43
    functioncall                   shift and go to state 64

state 111

    (118) drawsquare -> DRAWSQUARE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 140


state 112

    (62) factor -> LPAREN push_false_bottom sexpression . RPAREN pop_false_bottom

    RPAREN          shift and go to state 141


state 113

    (79) functioncall -> ID check_function_existance LPAREN . generate_era funcargum RPAREN validate_arguments
    (81) generate_era -> .

    NOT             reduce using rule 81 (generate_era -> .)
    RPAREN          reduce using rule 81 (generate_era -> .)
    LPAREN          reduce using rule 81 (generate_era -> .)
    ID              reduce using rule 81 (generate_era -> .)
    FLOAT           reduce using rule 81 (generate_era -> .)
    INT             reduce using rule 81 (generate_era -> .)
    STRING          reduce using rule 81 (generate_era -> .)
    TRUE            reduce using rule 81 (generate_era -> .)
    FALSE           reduce using rule 81 (generate_era -> .)
    DRAWLINE        reduce using rule 81 (generate_era -> .)
    DRAWSQUARE      reduce using rule 81 (generate_era -> .)
    DRAWTRIANGLE    reduce using rule 81 (generate_era -> .)
    DRAWCIRCLE      reduce using rule 81 (generate_era -> .)
    DRAWCURVE       reduce using rule 81 (generate_era -> .)
    DRAWPOLYGON     reduce using rule 81 (generate_era -> .)

    generate_era                   shift and go to state 142

state 114

    (57) term -> term mathoperators2 push_operator . factor do_math_operation2
    (62) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (63) factor -> . varConst
    (66) varConst -> . ID push_id_operand
    (67) varConst -> . FLOAT push_float_operand
    (68) varConst -> . INT push_int_operand
    (69) varConst -> . bool push_bool_operand
    (70) varConst -> . STRING push_string_operand
    (71) varConst -> . predefined
    (72) varConst -> . functioncall
    (73) bool -> . TRUE
    (74) bool -> . FALSE
    (111) predefined -> . drawline
    (112) predefined -> . drawsquare
    (113) predefined -> . drawtriangle
    (114) predefined -> . drawcircle
    (115) predefined -> . drawcurve
    (116) predefined -> . drawpolygon
    (79) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (117) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (121) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (122) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 61
    STRING          shift and go to state 46
    TRUE            shift and go to state 44
    FALSE           shift and go to state 50
    DRAWLINE        shift and go to state 45
    DRAWSQUARE      shift and go to state 56
    DRAWTRIANGLE    shift and go to state 41
    DRAWCIRCLE      shift and go to state 48
    DRAWCURVE       shift and go to state 63
    DRAWPOLYGON     shift and go to state 60

    drawtriangle                   shift and go to state 39
    varConst                       shift and go to state 40
    drawcurve                      shift and go to state 42
    predefined                     shift and go to state 47
    drawline                       shift and go to state 49
    bool                           shift and go to state 51
    factor                         shift and go to state 143
    functioncall                   shift and go to state 64
    drawpolygon                    shift and go to state 55
    drawsquare                     shift and go to state 43
    drawcircle                     shift and go to state 53

state 115

    (122) drawpolygon -> DRAWPOLYGON LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 144


state 116

    (121) drawcurve -> DRAWCURVE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 145


state 117

    (41) expression -> expression relationaloperators push_operator . exp do_relational_operation
    (52) exp -> . exp mathoperators1 push_operator term do_math_operation1
    (53) exp -> . term
    (57) term -> . term mathoperators2 push_operator factor do_math_operation2
    (58) term -> . factor
    (62) factor -> . LPAREN push_false_bottom sexpression RPAREN pop_false_bottom
    (63) factor -> . varConst
    (66) varConst -> . ID push_id_operand
    (67) varConst -> . FLOAT push_float_operand
    (68) varConst -> . INT push_int_operand
    (69) varConst -> . bool push_bool_operand
    (70) varConst -> . STRING push_string_operand
    (71) varConst -> . predefined
    (72) varConst -> . functioncall
    (73) bool -> . TRUE
    (74) bool -> . FALSE
    (111) predefined -> . drawline
    (112) predefined -> . drawsquare
    (113) predefined -> . drawtriangle
    (114) predefined -> . drawcircle
    (115) predefined -> . drawcurve
    (116) predefined -> . drawpolygon
    (79) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (117) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (121) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (122) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 57
    ID              shift and go to state 58
    FLOAT           shift and go to state 62
    INT             shift and go to state 61
    STRING          shift and go to state 46
    TRUE            shift and go to state 44
    FALSE           shift and go to state 50
    DRAWLINE        shift and go to state 45
    DRAWSQUARE      shift and go to state 56
    DRAWTRIANGLE    shift and go to state 41
    DRAWCIRCLE      shift and go to state 48
    DRAWCURVE       shift and go to state 63
    DRAWPOLYGON     shift and go to state 60

    drawtriangle                   shift and go to state 39
    varConst                       shift and go to state 40
    drawcurve                      shift and go to state 42
    predefined                     shift and go to state 47
    drawline                       shift and go to state 49
    bool                           shift and go to state 51
    factor                         shift and go to state 52
    drawcircle                     shift and go to state 53
    exp                            shift and go to state 146
    drawpolygon                    shift and go to state 55
    term                           shift and go to state 59
    drawsquare                     shift and go to state 43
    functioncall                   shift and go to state 64

state 118

    (94) return -> RETURN . sexpression SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 147
    empty                          shift and go to state 35

state 119

    (102) cycle -> WHILE . push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (103) push_cycle_jump -> .

    LPAREN          reduce using rule 103 (push_cycle_jump -> .)

    push_cycle_jump                shift and go to state 148

state 120

    (100) write -> PRINT . LPAREN sexpression RPAREN SEMICOLON

    LPAREN          shift and go to state 149


state 121

    (16) statute -> predefined .

    ID              reduce using rule 16 (statute -> predefined .)
    IF              reduce using rule 16 (statute -> predefined .)
    PRINT           reduce using rule 16 (statute -> predefined .)
    WHILE           reduce using rule 16 (statute -> predefined .)
    RETURN          reduce using rule 16 (statute -> predefined .)
    DRAWLINE        reduce using rule 16 (statute -> predefined .)
    DRAWSQUARE      reduce using rule 16 (statute -> predefined .)
    DRAWTRIANGLE    reduce using rule 16 (statute -> predefined .)
    DRAWCIRCLE      reduce using rule 16 (statute -> predefined .)
    DRAWCURVE       reduce using rule 16 (statute -> predefined .)
    DRAWPOLYGON     reduce using rule 16 (statute -> predefined .)
    RBRACE          reduce using rule 16 (statute -> predefined .)


state 122

    (7) block -> LBRACE blockprima . RBRACE

    RBRACE          shift and go to state 150


state 123

    (12) statute -> write .

    ID              reduce using rule 12 (statute -> write .)
    IF              reduce using rule 12 (statute -> write .)
    PRINT           reduce using rule 12 (statute -> write .)
    WHILE           reduce using rule 12 (statute -> write .)
    RETURN          reduce using rule 12 (statute -> write .)
    DRAWLINE        reduce using rule 12 (statute -> write .)
    DRAWSQUARE      reduce using rule 12 (statute -> write .)
    DRAWTRIANGLE    reduce using rule 12 (statute -> write .)
    DRAWCIRCLE      reduce using rule 12 (statute -> write .)
    DRAWCURVE       reduce using rule 12 (statute -> write .)
    DRAWPOLYGON     reduce using rule 12 (statute -> write .)
    RBRACE          reduce using rule 12 (statute -> write .)


state 124

    (14) statute -> cycle .

    ID              reduce using rule 14 (statute -> cycle .)
    IF              reduce using rule 14 (statute -> cycle .)
    PRINT           reduce using rule 14 (statute -> cycle .)
    WHILE           reduce using rule 14 (statute -> cycle .)
    RETURN          reduce using rule 14 (statute -> cycle .)
    DRAWLINE        reduce using rule 14 (statute -> cycle .)
    DRAWSQUARE      reduce using rule 14 (statute -> cycle .)
    DRAWTRIANGLE    reduce using rule 14 (statute -> cycle .)
    DRAWCIRCLE      reduce using rule 14 (statute -> cycle .)
    DRAWCURVE       reduce using rule 14 (statute -> cycle .)
    DRAWPOLYGON     reduce using rule 14 (statute -> cycle .)
    RBRACE          reduce using rule 14 (statute -> cycle .)


state 125

    (9) blockprima -> empty .

    RBRACE          reduce using rule 9 (blockprima -> empty .)


state 126

    (17) statute -> return .

    ID              reduce using rule 17 (statute -> return .)
    IF              reduce using rule 17 (statute -> return .)
    PRINT           reduce using rule 17 (statute -> return .)
    WHILE           reduce using rule 17 (statute -> return .)
    RETURN          reduce using rule 17 (statute -> return .)
    DRAWLINE        reduce using rule 17 (statute -> return .)
    DRAWSQUARE      reduce using rule 17 (statute -> return .)
    DRAWTRIANGLE    reduce using rule 17 (statute -> return .)
    DRAWCIRCLE      reduce using rule 17 (statute -> return .)
    DRAWCURVE       reduce using rule 17 (statute -> return .)
    DRAWPOLYGON     reduce using rule 17 (statute -> return .)
    RBRACE          reduce using rule 17 (statute -> return .)


state 127

    (13) statute -> read .

    ID              reduce using rule 13 (statute -> read .)
    IF              reduce using rule 13 (statute -> read .)
    PRINT           reduce using rule 13 (statute -> read .)
    WHILE           reduce using rule 13 (statute -> read .)
    RETURN          reduce using rule 13 (statute -> read .)
    DRAWLINE        reduce using rule 13 (statute -> read .)
    DRAWSQUARE      reduce using rule 13 (statute -> read .)
    DRAWTRIANGLE    reduce using rule 13 (statute -> read .)
    DRAWCIRCLE      reduce using rule 13 (statute -> read .)
    DRAWCURVE       reduce using rule 13 (statute -> read .)
    DRAWPOLYGON     reduce using rule 13 (statute -> read .)
    RBRACE          reduce using rule 13 (statute -> read .)


state 128

    (10) statute -> assignment .

    ID              reduce using rule 10 (statute -> assignment .)
    IF              reduce using rule 10 (statute -> assignment .)
    PRINT           reduce using rule 10 (statute -> assignment .)
    WHILE           reduce using rule 10 (statute -> assignment .)
    RETURN          reduce using rule 10 (statute -> assignment .)
    DRAWLINE        reduce using rule 10 (statute -> assignment .)
    DRAWSQUARE      reduce using rule 10 (statute -> assignment .)
    DRAWTRIANGLE    reduce using rule 10 (statute -> assignment .)
    DRAWCIRCLE      reduce using rule 10 (statute -> assignment .)
    DRAWCURVE       reduce using rule 10 (statute -> assignment .)
    DRAWPOLYGON     reduce using rule 10 (statute -> assignment .)
    RBRACE          reduce using rule 10 (statute -> assignment .)


state 129

    (32) assignment -> ID . push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (101) read -> ID . push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (79) functioncall -> ID . check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (33) push_id_operand -> .
    (80) check_function_existance -> .

    ASSIGN          reduce using rule 33 (push_id_operand -> .)
    LPAREN          reduce using rule 80 (check_function_existance -> .)

    check_function_existance       shift and go to state 83
    push_id_operand                shift and go to state 151

state 130

    (11) statute -> condition .

    ID              reduce using rule 11 (statute -> condition .)
    IF              reduce using rule 11 (statute -> condition .)
    PRINT           reduce using rule 11 (statute -> condition .)
    WHILE           reduce using rule 11 (statute -> condition .)
    RETURN          reduce using rule 11 (statute -> condition .)
    DRAWLINE        reduce using rule 11 (statute -> condition .)
    DRAWSQUARE      reduce using rule 11 (statute -> condition .)
    DRAWTRIANGLE    reduce using rule 11 (statute -> condition .)
    DRAWCIRCLE      reduce using rule 11 (statute -> condition .)
    DRAWCURVE       reduce using rule 11 (statute -> condition .)
    DRAWPOLYGON     reduce using rule 11 (statute -> condition .)
    RBRACE          reduce using rule 11 (statute -> condition .)


state 131

    (18) condition -> IF . LPAREN sexpression RPAREN do_condition_operation block else

    LPAREN          shift and go to state 152


state 132

    (8) blockprima -> statute . blockprima
    (8) blockprima -> . statute blockprima
    (9) blockprima -> . empty
    (10) statute -> . assignment
    (11) statute -> . condition
    (12) statute -> . write
    (13) statute -> . read
    (14) statute -> . cycle
    (15) statute -> . functioncall
    (16) statute -> . predefined
    (17) statute -> . return
    (123) empty -> .
    (32) assignment -> . ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (18) condition -> . IF LPAREN sexpression RPAREN do_condition_operation block else
    (100) write -> . PRINT LPAREN sexpression RPAREN SEMICOLON
    (101) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (102) cycle -> . WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block
    (79) functioncall -> . ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments
    (111) predefined -> . drawline
    (112) predefined -> . drawsquare
    (113) predefined -> . drawtriangle
    (114) predefined -> . drawcircle
    (115) predefined -> . drawcurve
    (116) predefined -> . drawpolygon
    (94) return -> . RETURN sexpression SEMICOLON
    (117) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (118) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (119) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (120) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (121) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (122) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 123 (empty -> .)
    ID              shift and go to state 129
    IF              shift and go to state 131
    PRINT           shift and go to state 120
    WHILE           shift and go to state 119
    RETURN          shift and go to state 118
    DRAWLINE        shift and go to state 45
    DRAWSQUARE      shift and go to state 56
    DRAWTRIANGLE    shift and go to state 41
    DRAWCIRCLE      shift and go to state 48
    DRAWCURVE       shift and go to state 63
    DRAWPOLYGON     shift and go to state 60

    drawtriangle                   shift and go to state 39
    drawcurve                      shift and go to state 42
    predefined                     shift and go to state 121
    blockprima                     shift and go to state 153
    drawline                       shift and go to state 49
    write                          shift and go to state 123
    empty                          shift and go to state 125
    return                         shift and go to state 126
    drawpolygon                    shift and go to state 55
    read                           shift and go to state 127
    assignment                     shift and go to state 128
    condition                      shift and go to state 130
    cycle                          shift and go to state 124
    statute                        shift and go to state 132
    drawcircle                     shift and go to state 53
    drawsquare                     shift and go to state 43
    functioncall                   shift and go to state 133

state 133

    (15) statute -> functioncall .

    ID              reduce using rule 15 (statute -> functioncall .)
    IF              reduce using rule 15 (statute -> functioncall .)
    PRINT           reduce using rule 15 (statute -> functioncall .)
    WHILE           reduce using rule 15 (statute -> functioncall .)
    RETURN          reduce using rule 15 (statute -> functioncall .)
    DRAWLINE        reduce using rule 15 (statute -> functioncall .)
    DRAWSQUARE      reduce using rule 15 (statute -> functioncall .)
    DRAWTRIANGLE    reduce using rule 15 (statute -> functioncall .)
    DRAWCIRCLE      reduce using rule 15 (statute -> functioncall .)
    DRAWCURVE       reduce using rule 15 (statute -> functioncall .)
    DRAWPOLYGON     reduce using rule 15 (statute -> functioncall .)
    RBRACE          reduce using rule 15 (statute -> functioncall .)


state 134

    (95) parameter -> type ID store_parameter . parameterprima
    (97) parameterprima -> . COMMA type ID store_parameter parameterprima
    (98) parameterprima -> . empty
    (123) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 123 (empty -> .)

    parameterprima                 shift and go to state 155
    empty                          shift and go to state 156

state 135

    (88) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars . block end_process function
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 103

    block                          shift and go to state 157

state 136

    (119) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 158
    empty                          shift and go to state 35

state 137

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA . sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 159
    empty                          shift and go to state 35

state 138

    (120) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 160
    empty                          shift and go to state 35

state 139

    (52) exp -> exp mathoperators1 push_operator term . do_math_operation1
    (57) term -> term . mathoperators2 push_operator factor do_math_operation2
    (56) do_math_operation1 -> .
    (59) mathoperators2 -> . TIMES
    (60) mathoperators2 -> . DEVIDE

    PLUS            reduce using rule 56 (do_math_operation1 -> .)
    MINUS           reduce using rule 56 (do_math_operation1 -> .)
    LESSER          reduce using rule 56 (do_math_operation1 -> .)
    GREATER         reduce using rule 56 (do_math_operation1 -> .)
    EQUAL           reduce using rule 56 (do_math_operation1 -> .)
    NOTEQUAL        reduce using rule 56 (do_math_operation1 -> .)
    LESSEROREQUAL   reduce using rule 56 (do_math_operation1 -> .)
    GREATEROREQUAL  reduce using rule 56 (do_math_operation1 -> .)
    AND             reduce using rule 56 (do_math_operation1 -> .)
    OR              reduce using rule 56 (do_math_operation1 -> .)
    RBRACKET        reduce using rule 56 (do_math_operation1 -> .)
    COMMA           reduce using rule 56 (do_math_operation1 -> .)
    RPAREN          reduce using rule 56 (do_math_operation1 -> .)
    SEMICOLON       reduce using rule 56 (do_math_operation1 -> .)
    TIMES           shift and go to state 86
    DEVIDE          shift and go to state 85

    do_math_operation1             shift and go to state 161
    mathoperators2                 shift and go to state 87

state 140

    (118) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 162
    empty                          shift and go to state 35

state 141

    (62) factor -> LPAREN push_false_bottom sexpression RPAREN . pop_false_bottom
    (65) pop_false_bottom -> .

    TIMES           reduce using rule 65 (pop_false_bottom -> .)
    DEVIDE          reduce using rule 65 (pop_false_bottom -> .)
    PLUS            reduce using rule 65 (pop_false_bottom -> .)
    MINUS           reduce using rule 65 (pop_false_bottom -> .)
    LESSER          reduce using rule 65 (pop_false_bottom -> .)
    GREATER         reduce using rule 65 (pop_false_bottom -> .)
    EQUAL           reduce using rule 65 (pop_false_bottom -> .)
    NOTEQUAL        reduce using rule 65 (pop_false_bottom -> .)
    LESSEROREQUAL   reduce using rule 65 (pop_false_bottom -> .)
    GREATEROREQUAL  reduce using rule 65 (pop_false_bottom -> .)
    AND             reduce using rule 65 (pop_false_bottom -> .)
    OR              reduce using rule 65 (pop_false_bottom -> .)
    RBRACKET        reduce using rule 65 (pop_false_bottom -> .)
    COMMA           reduce using rule 65 (pop_false_bottom -> .)
    RPAREN          reduce using rule 65 (pop_false_bottom -> .)
    SEMICOLON       reduce using rule 65 (pop_false_bottom -> .)

    pop_false_bottom               shift and go to state 163

state 142

    (79) functioncall -> ID check_function_existance LPAREN generate_era . funcargum RPAREN validate_arguments
    (83) funcargum -> . sexpression store_argument funcargumprima
    (84) funcargum -> . empty
    (37) sexpression -> . negation expression do_not_operation
    (123) empty -> .
    (38) negation -> . NOT push_operator
    (39) negation -> . empty

    RPAREN          reduce using rule 123 (empty -> .)
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)
    NOT             shift and go to state 34

    negation                       shift and go to state 32
    sexpression                    shift and go to state 164
    funcargum                      shift and go to state 165
    empty                          shift and go to state 166

state 143

    (57) term -> term mathoperators2 push_operator factor . do_math_operation2
    (61) do_math_operation2 -> .

    TIMES           reduce using rule 61 (do_math_operation2 -> .)
    DEVIDE          reduce using rule 61 (do_math_operation2 -> .)
    PLUS            reduce using rule 61 (do_math_operation2 -> .)
    MINUS           reduce using rule 61 (do_math_operation2 -> .)
    LESSER          reduce using rule 61 (do_math_operation2 -> .)
    GREATER         reduce using rule 61 (do_math_operation2 -> .)
    EQUAL           reduce using rule 61 (do_math_operation2 -> .)
    NOTEQUAL        reduce using rule 61 (do_math_operation2 -> .)
    LESSEROREQUAL   reduce using rule 61 (do_math_operation2 -> .)
    GREATEROREQUAL  reduce using rule 61 (do_math_operation2 -> .)
    AND             reduce using rule 61 (do_math_operation2 -> .)
    OR              reduce using rule 61 (do_math_operation2 -> .)
    RBRACKET        reduce using rule 61 (do_math_operation2 -> .)
    COMMA           reduce using rule 61 (do_math_operation2 -> .)
    RPAREN          reduce using rule 61 (do_math_operation2 -> .)
    SEMICOLON       reduce using rule 61 (do_math_operation2 -> .)

    do_math_operation2             shift and go to state 167

state 144

    (122) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 168
    empty                          shift and go to state 35

state 145

    (121) drawcurve -> DRAWCURVE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 169
    empty                          shift and go to state 35

state 146

    (41) expression -> expression relationaloperators push_operator exp . do_relational_operation
    (52) exp -> exp . mathoperators1 push_operator term do_math_operation1
    (51) do_relational_operation -> .
    (54) mathoperators1 -> . PLUS
    (55) mathoperators1 -> . MINUS

    LESSER          reduce using rule 51 (do_relational_operation -> .)
    GREATER         reduce using rule 51 (do_relational_operation -> .)
    EQUAL           reduce using rule 51 (do_relational_operation -> .)
    NOTEQUAL        reduce using rule 51 (do_relational_operation -> .)
    LESSEROREQUAL   reduce using rule 51 (do_relational_operation -> .)
    GREATEROREQUAL  reduce using rule 51 (do_relational_operation -> .)
    AND             reduce using rule 51 (do_relational_operation -> .)
    OR              reduce using rule 51 (do_relational_operation -> .)
    RBRACKET        reduce using rule 51 (do_relational_operation -> .)
    COMMA           reduce using rule 51 (do_relational_operation -> .)
    RPAREN          reduce using rule 51 (do_relational_operation -> .)
    SEMICOLON       reduce using rule 51 (do_relational_operation -> .)
    PLUS            shift and go to state 78
    MINUS           shift and go to state 80

    do_relational_operation        shift and go to state 170
    mathoperators1                 shift and go to state 79

state 147

    (94) return -> RETURN sexpression . SEMICOLON

    SEMICOLON       shift and go to state 171


state 148

    (102) cycle -> WHILE push_cycle_jump . LPAREN sexpression RPAREN do_while_operation block

    LPAREN          shift and go to state 172


state 149

    (100) write -> PRINT LPAREN . sexpression RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 173
    empty                          shift and go to state 35

state 150

    (7) block -> LBRACE blockprima RBRACE .

    ID              reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    IF              reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    PRINT           reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    WHILE           reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    RETURN          reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWLINE        reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWSQUARE      reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWTRIANGLE    reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWCIRCLE      reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWCURVE       reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWPOLYGON     reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    RBRACE          reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    FUNCTION        reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    INTTYPE         reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    $end            reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    ELSE            reduce using rule 7 (block -> LBRACE blockprima RBRACE .)


state 151

    (32) assignment -> ID push_id_operand . ASSIGN push_operator sexpression SEMICOLON
    (101) read -> ID push_id_operand . ASSIGN push_operator INPUT SEMICOLON

    ASSIGN          shift and go to state 174


state 152

    (18) condition -> IF LPAREN . sexpression RPAREN do_condition_operation block else
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 175
    empty                          shift and go to state 35

state 153

    (8) blockprima -> statute blockprima .

    RBRACE          reduce using rule 8 (blockprima -> statute blockprima .)


state 154

    (97) parameterprima -> COMMA . type ID store_parameter parameterprima
    (28) type -> . INTTYPE
    (29) type -> . FLOATTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . BOOLTYPE

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 15
    STRINGTYPE      shift and go to state 14
    BOOLTYPE        shift and go to state 13

    type                           shift and go to state 176

state 155

    (95) parameter -> type ID store_parameter parameterprima .

    RPAREN          reduce using rule 95 (parameter -> type ID store_parameter parameterprima .)


state 156

    (98) parameterprima -> empty .

    RPAREN          reduce using rule 98 (parameterprima -> empty .)


state 157

    (88) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars block . end_process function
    (93) end_process -> .

    FUNCTION        reduce using rule 93 (end_process -> .)
    INTTYPE         reduce using rule 93 (end_process -> .)

    end_process                    shift and go to state 177

state 158

    (119) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 178


state 159

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression . COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 179


state 160

    (120) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 180


state 161

    (52) exp -> exp mathoperators1 push_operator term do_math_operation1 .

    PLUS            reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    MINUS           reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    LESSER          reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    GREATER         reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    EQUAL           reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    NOTEQUAL        reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    LESSEROREQUAL   reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    GREATEROREQUAL  reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    AND             reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    OR              reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    RBRACKET        reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    COMMA           reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    RPAREN          reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    SEMICOLON       reduce using rule 52 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)


state 162

    (118) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 181


state 163

    (62) factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .

    TIMES           reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    DEVIDE          reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    PLUS            reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    MINUS           reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    LESSER          reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    GREATER         reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    EQUAL           reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    NOTEQUAL        reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    LESSEROREQUAL   reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    GREATEROREQUAL  reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    AND             reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    OR              reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    RBRACKET        reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    COMMA           reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    RPAREN          reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)
    SEMICOLON       reduce using rule 62 (factor -> LPAREN push_false_bottom sexpression RPAREN pop_false_bottom .)


state 164

    (83) funcargum -> sexpression . store_argument funcargumprima
    (87) store_argument -> .

    COMMA           reduce using rule 87 (store_argument -> .)
    RPAREN          reduce using rule 87 (store_argument -> .)

    store_argument                 shift and go to state 182

state 165

    (79) functioncall -> ID check_function_existance LPAREN generate_era funcargum . RPAREN validate_arguments

    RPAREN          shift and go to state 183


state 166

    (84) funcargum -> empty .
    (39) negation -> empty .

    RPAREN          reduce using rule 84 (funcargum -> empty .)
    LPAREN          reduce using rule 39 (negation -> empty .)
    ID              reduce using rule 39 (negation -> empty .)
    FLOAT           reduce using rule 39 (negation -> empty .)
    INT             reduce using rule 39 (negation -> empty .)
    STRING          reduce using rule 39 (negation -> empty .)
    TRUE            reduce using rule 39 (negation -> empty .)
    FALSE           reduce using rule 39 (negation -> empty .)
    DRAWLINE        reduce using rule 39 (negation -> empty .)
    DRAWSQUARE      reduce using rule 39 (negation -> empty .)
    DRAWTRIANGLE    reduce using rule 39 (negation -> empty .)
    DRAWCIRCLE      reduce using rule 39 (negation -> empty .)
    DRAWCURVE       reduce using rule 39 (negation -> empty .)
    DRAWPOLYGON     reduce using rule 39 (negation -> empty .)


state 167

    (57) term -> term mathoperators2 push_operator factor do_math_operation2 .

    TIMES           reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    DEVIDE          reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    PLUS            reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    MINUS           reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    LESSER          reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    GREATER         reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    EQUAL           reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    NOTEQUAL        reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    LESSEROREQUAL   reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    GREATEROREQUAL  reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    AND             reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    OR              reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    RBRACKET        reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    COMMA           reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    RPAREN          reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    SEMICOLON       reduce using rule 57 (term -> term mathoperators2 push_operator factor do_math_operation2 .)


state 168

    (122) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 184


state 169

    (121) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 185


state 170

    (41) expression -> expression relationaloperators push_operator exp do_relational_operation .

    LESSER          reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    GREATER         reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    EQUAL           reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    NOTEQUAL        reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    LESSEROREQUAL   reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    GREATEROREQUAL  reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    AND             reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    OR              reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    RBRACKET        reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    COMMA           reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    RPAREN          reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    SEMICOLON       reduce using rule 41 (expression -> expression relationaloperators push_operator exp do_relational_operation .)


state 171

    (94) return -> RETURN sexpression SEMICOLON .

    ID              reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    IF              reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    PRINT           reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    WHILE           reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    RETURN          reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    DRAWLINE        reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)
    RBRACE          reduce using rule 94 (return -> RETURN sexpression SEMICOLON .)


state 172

    (102) cycle -> WHILE push_cycle_jump LPAREN . sexpression RPAREN do_while_operation block
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 186
    empty                          shift and go to state 35

state 173

    (100) write -> PRINT LPAREN sexpression . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 174

    (32) assignment -> ID push_id_operand ASSIGN . push_operator sexpression SEMICOLON
    (101) read -> ID push_id_operand ASSIGN . push_operator INPUT SEMICOLON
    (34) push_operator -> .

    INPUT           reduce using rule 34 (push_operator -> .)
    NOT             reduce using rule 34 (push_operator -> .)
    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)
    DRAWLINE        reduce using rule 34 (push_operator -> .)
    DRAWSQUARE      reduce using rule 34 (push_operator -> .)
    DRAWTRIANGLE    reduce using rule 34 (push_operator -> .)
    DRAWCIRCLE      reduce using rule 34 (push_operator -> .)
    DRAWCURVE       reduce using rule 34 (push_operator -> .)
    DRAWPOLYGON     reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 188

state 175

    (18) condition -> IF LPAREN sexpression . RPAREN do_condition_operation block else

    RPAREN          shift and go to state 189


state 176

    (97) parameterprima -> COMMA type . ID store_parameter parameterprima

    ID              shift and go to state 190


state 177

    (88) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars block end_process . function
    (88) function -> . FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars block end_process function
    (89) function -> . empty
    (123) empty -> .

    FUNCTION        shift and go to state 11
    INTTYPE         reduce using rule 123 (empty -> .)

    function                       shift and go to state 191
    empty                          shift and go to state 12

state 178

    (119) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (105) color -> . BLUE
    (106) color -> . GREEN
    (107) color -> . RED
    (108) color -> . YELLOW
    (109) color -> . BROWN
    (110) color -> . BLACK

    BLUE            shift and go to state 192
    GREEN           shift and go to state 196
    RED             shift and go to state 198
    YELLOW          shift and go to state 195
    BROWN           shift and go to state 193
    BLACK           shift and go to state 197

    color                          shift and go to state 194

state 179

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 199
    empty                          shift and go to state 35

state 180

    (120) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (105) color -> . BLUE
    (106) color -> . GREEN
    (107) color -> . RED
    (108) color -> . YELLOW
    (109) color -> . BROWN
    (110) color -> . BLACK

    BLUE            shift and go to state 192
    GREEN           shift and go to state 196
    RED             shift and go to state 198
    YELLOW          shift and go to state 195
    BROWN           shift and go to state 193
    BLACK           shift and go to state 197

    color                          shift and go to state 200

state 181

    (118) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (105) color -> . BLUE
    (106) color -> . GREEN
    (107) color -> . RED
    (108) color -> . YELLOW
    (109) color -> . BROWN
    (110) color -> . BLACK

    BLUE            shift and go to state 192
    GREEN           shift and go to state 196
    RED             shift and go to state 198
    YELLOW          shift and go to state 195
    BROWN           shift and go to state 193
    BLACK           shift and go to state 197

    color                          shift and go to state 201

state 182

    (83) funcargum -> sexpression store_argument . funcargumprima
    (85) funcargumprima -> . COMMA sexpression store_argument funcargumprima
    (86) funcargumprima -> . empty
    (123) empty -> .

    COMMA           shift and go to state 203
    RPAREN          reduce using rule 123 (empty -> .)

    funcargumprima                 shift and go to state 202
    empty                          shift and go to state 204

state 183

    (79) functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN . validate_arguments
    (82) validate_arguments -> .

    TIMES           reduce using rule 82 (validate_arguments -> .)
    DEVIDE          reduce using rule 82 (validate_arguments -> .)
    PLUS            reduce using rule 82 (validate_arguments -> .)
    MINUS           reduce using rule 82 (validate_arguments -> .)
    LESSER          reduce using rule 82 (validate_arguments -> .)
    GREATER         reduce using rule 82 (validate_arguments -> .)
    EQUAL           reduce using rule 82 (validate_arguments -> .)
    NOTEQUAL        reduce using rule 82 (validate_arguments -> .)
    LESSEROREQUAL   reduce using rule 82 (validate_arguments -> .)
    GREATEROREQUAL  reduce using rule 82 (validate_arguments -> .)
    AND             reduce using rule 82 (validate_arguments -> .)
    OR              reduce using rule 82 (validate_arguments -> .)
    RBRACKET        reduce using rule 82 (validate_arguments -> .)
    COMMA           reduce using rule 82 (validate_arguments -> .)
    RPAREN          reduce using rule 82 (validate_arguments -> .)
    SEMICOLON       reduce using rule 82 (validate_arguments -> .)
    ID              reduce using rule 82 (validate_arguments -> .)
    IF              reduce using rule 82 (validate_arguments -> .)
    PRINT           reduce using rule 82 (validate_arguments -> .)
    WHILE           reduce using rule 82 (validate_arguments -> .)
    RETURN          reduce using rule 82 (validate_arguments -> .)
    DRAWLINE        reduce using rule 82 (validate_arguments -> .)
    DRAWSQUARE      reduce using rule 82 (validate_arguments -> .)
    DRAWTRIANGLE    reduce using rule 82 (validate_arguments -> .)
    DRAWCIRCLE      reduce using rule 82 (validate_arguments -> .)
    DRAWCURVE       reduce using rule 82 (validate_arguments -> .)
    DRAWPOLYGON     reduce using rule 82 (validate_arguments -> .)
    RBRACE          reduce using rule 82 (validate_arguments -> .)

    validate_arguments             shift and go to state 205

state 184

    (122) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (105) color -> . BLUE
    (106) color -> . GREEN
    (107) color -> . RED
    (108) color -> . YELLOW
    (109) color -> . BROWN
    (110) color -> . BLACK

    BLUE            shift and go to state 192
    GREEN           shift and go to state 196
    RED             shift and go to state 198
    YELLOW          shift and go to state 195
    BROWN           shift and go to state 193
    BLACK           shift and go to state 197

    color                          shift and go to state 206

state 185

    (121) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (105) color -> . BLUE
    (106) color -> . GREEN
    (107) color -> . RED
    (108) color -> . YELLOW
    (109) color -> . BROWN
    (110) color -> . BLACK

    BLUE            shift and go to state 192
    GREEN           shift and go to state 196
    RED             shift and go to state 198
    YELLOW          shift and go to state 195
    BROWN           shift and go to state 193
    BLACK           shift and go to state 197

    color                          shift and go to state 207

state 186

    (102) cycle -> WHILE push_cycle_jump LPAREN sexpression . RPAREN do_while_operation block

    RPAREN          shift and go to state 208


state 187

    (100) write -> PRINT LPAREN sexpression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 209


state 188

    (32) assignment -> ID push_id_operand ASSIGN push_operator . sexpression SEMICOLON
    (101) read -> ID push_id_operand ASSIGN push_operator . INPUT SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    INPUT           shift and go to state 211
    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 210
    empty                          shift and go to state 35

state 189

    (18) condition -> IF LPAREN sexpression RPAREN . do_condition_operation block else
    (19) do_condition_operation -> .

    LBRACE          reduce using rule 19 (do_condition_operation -> .)

    do_condition_operation         shift and go to state 212

state 190

    (97) parameterprima -> COMMA type ID . store_parameter parameterprima
    (99) store_parameter -> .

    COMMA           reduce using rule 99 (store_parameter -> .)
    RPAREN          reduce using rule 99 (store_parameter -> .)

    store_parameter                shift and go to state 213

state 191

    (88) function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars block end_process function .

    INTTYPE         reduce using rule 88 (function -> FUNCTION functiontype ID store_function LPAREN parameter RPAREN vars block end_process function .)


state 192

    (105) color -> BLUE .

    RPAREN          reduce using rule 105 (color -> BLUE .)


state 193

    (109) color -> BROWN .

    RPAREN          reduce using rule 109 (color -> BROWN .)


state 194

    (119) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 214


state 195

    (108) color -> YELLOW .

    RPAREN          reduce using rule 108 (color -> YELLOW .)


state 196

    (106) color -> GREEN .

    RPAREN          reduce using rule 106 (color -> GREEN .)


state 197

    (110) color -> BLACK .

    RPAREN          reduce using rule 110 (color -> BLACK .)


state 198

    (107) color -> RED .

    RPAREN          reduce using rule 107 (color -> RED .)


state 199

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 215


state 200

    (120) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 216


state 201

    (118) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 217


state 202

    (83) funcargum -> sexpression store_argument funcargumprima .

    RPAREN          reduce using rule 83 (funcargum -> sexpression store_argument funcargumprima .)


state 203

    (85) funcargumprima -> COMMA . sexpression store_argument funcargumprima
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 218
    empty                          shift and go to state 35

state 204

    (86) funcargumprima -> empty .

    RPAREN          reduce using rule 86 (funcargumprima -> empty .)


state 205

    (79) functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .

    TIMES           reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    DEVIDE          reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    PLUS            reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    MINUS           reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    LESSER          reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    GREATER         reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    EQUAL           reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    NOTEQUAL        reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    LESSEROREQUAL   reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    GREATEROREQUAL  reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    AND             reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    OR              reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    RBRACKET        reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    COMMA           reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    RPAREN          reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    SEMICOLON       reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    ID              reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    IF              reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    PRINT           reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    WHILE           reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    RETURN          reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    DRAWLINE        reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    DRAWSQUARE      reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    DRAWTRIANGLE    reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    DRAWCIRCLE      reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    DRAWCURVE       reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    DRAWPOLYGON     reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)
    RBRACE          reduce using rule 79 (functioncall -> ID check_function_existance LPAREN generate_era funcargum RPAREN validate_arguments .)


state 206

    (122) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 219


state 207

    (121) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 220


state 208

    (102) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN . do_while_operation block
    (104) do_while_operation -> .

    LBRACE          reduce using rule 104 (do_while_operation -> .)

    do_while_operation             shift and go to state 221

state 209

    (100) write -> PRINT LPAREN sexpression RPAREN SEMICOLON .

    ID              reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    IF              reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    PRINT           reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    WHILE           reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    RETURN          reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 100 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)


state 210

    (32) assignment -> ID push_id_operand ASSIGN push_operator sexpression . SEMICOLON

    SEMICOLON       shift and go to state 222


state 211

    (101) read -> ID push_id_operand ASSIGN push_operator INPUT . SEMICOLON

    SEMICOLON       shift and go to state 223


state 212

    (18) condition -> IF LPAREN sexpression RPAREN do_condition_operation . block else
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 103

    block                          shift and go to state 224

state 213

    (97) parameterprima -> COMMA type ID store_parameter . parameterprima
    (97) parameterprima -> . COMMA type ID store_parameter parameterprima
    (98) parameterprima -> . empty
    (123) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 123 (empty -> .)

    parameterprima                 shift and go to state 225
    empty                          shift and go to state 156

state 214

    (119) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 215

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (37) sexpression -> . negation expression do_not_operation
    (38) negation -> . NOT push_operator
    (39) negation -> . empty
    (123) empty -> .

    NOT             shift and go to state 34
    LPAREN          reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    STRING          reduce using rule 123 (empty -> .)
    TRUE            reduce using rule 123 (empty -> .)
    FALSE           reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)

    negation                       shift and go to state 32
    sexpression                    shift and go to state 227
    empty                          shift and go to state 35

state 216

    (120) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 217

    (118) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 218

    (85) funcargumprima -> COMMA sexpression . store_argument funcargumprima
    (87) store_argument -> .

    COMMA           reduce using rule 87 (store_argument -> .)
    RPAREN          reduce using rule 87 (store_argument -> .)

    store_argument                 shift and go to state 230

state 219

    (122) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 220

    (121) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 232


state 221

    (102) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 103

    block                          shift and go to state 233

state 222

    (32) assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .

    ID              reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    IF              reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    PRINT           reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    WHILE           reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    RETURN          reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWLINE        reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    RBRACE          reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)


state 223

    (101) read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .

    ID              reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    IF              reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    PRINT           reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    WHILE           reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RETURN          reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RBRACE          reduce using rule 101 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)


state 224

    (18) condition -> IF LPAREN sexpression RPAREN do_condition_operation block . else
    (20) else -> . ELSE do_else_operation block
    (21) else -> . empty
    (123) empty -> .

    ELSE            shift and go to state 236
    ID              reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    PRINT           reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    RETURN          reduce using rule 123 (empty -> .)
    DRAWLINE        reduce using rule 123 (empty -> .)
    DRAWSQUARE      reduce using rule 123 (empty -> .)
    DRAWTRIANGLE    reduce using rule 123 (empty -> .)
    DRAWCIRCLE      reduce using rule 123 (empty -> .)
    DRAWCURVE       reduce using rule 123 (empty -> .)
    DRAWPOLYGON     reduce using rule 123 (empty -> .)
    RBRACE          reduce using rule 123 (empty -> .)

    else                           shift and go to state 234
    empty                          shift and go to state 235

state 225

    (97) parameterprima -> COMMA type ID store_parameter parameterprima .

    RPAREN          reduce using rule 97 (parameterprima -> COMMA type ID store_parameter parameterprima .)


state 226

    (119) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 119 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 227

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 237


state 228

    (120) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    TIMES           reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 120 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 229

    (118) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 118 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 230

    (85) funcargumprima -> COMMA sexpression store_argument . funcargumprima
    (85) funcargumprima -> . COMMA sexpression store_argument funcargumprima
    (86) funcargumprima -> . empty
    (123) empty -> .

    COMMA           shift and go to state 203
    RPAREN          reduce using rule 123 (empty -> .)

    funcargumprima                 shift and go to state 238
    empty                          shift and go to state 204

state 231

    (122) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 122 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 232

    (121) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    TIMES           reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    ID              reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 121 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 233

    (102) cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .

    ID              reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    IF              reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    PRINT           reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    WHILE           reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    RETURN          reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWLINE        reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWSQUARE      reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWTRIANGLE    reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWCIRCLE      reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWCURVE       reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    DRAWPOLYGON     reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)
    RBRACE          reduce using rule 102 (cycle -> WHILE push_cycle_jump LPAREN sexpression RPAREN do_while_operation block .)


state 234

    (18) condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .

    ID              reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    IF              reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    PRINT           reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    WHILE           reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    RETURN          reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWLINE        reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWSQUARE      reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWTRIANGLE    reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWCIRCLE      reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWCURVE       reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    DRAWPOLYGON     reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)
    RBRACE          reduce using rule 18 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block else .)


state 235

    (21) else -> empty .

    ID              reduce using rule 21 (else -> empty .)
    IF              reduce using rule 21 (else -> empty .)
    PRINT           reduce using rule 21 (else -> empty .)
    WHILE           reduce using rule 21 (else -> empty .)
    RETURN          reduce using rule 21 (else -> empty .)
    DRAWLINE        reduce using rule 21 (else -> empty .)
    DRAWSQUARE      reduce using rule 21 (else -> empty .)
    DRAWTRIANGLE    reduce using rule 21 (else -> empty .)
    DRAWCIRCLE      reduce using rule 21 (else -> empty .)
    DRAWCURVE       reduce using rule 21 (else -> empty .)
    DRAWPOLYGON     reduce using rule 21 (else -> empty .)
    RBRACE          reduce using rule 21 (else -> empty .)


state 236

    (20) else -> ELSE . do_else_operation block
    (22) do_else_operation -> .

    LBRACE          reduce using rule 22 (do_else_operation -> .)

    do_else_operation              shift and go to state 239

state 237

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (105) color -> . BLUE
    (106) color -> . GREEN
    (107) color -> . RED
    (108) color -> . YELLOW
    (109) color -> . BROWN
    (110) color -> . BLACK

    BLUE            shift and go to state 192
    GREEN           shift and go to state 196
    RED             shift and go to state 198
    YELLOW          shift and go to state 195
    BROWN           shift and go to state 193
    BLACK           shift and go to state 197

    color                          shift and go to state 240

state 238

    (85) funcargumprima -> COMMA sexpression store_argument funcargumprima .

    RPAREN          reduce using rule 85 (funcargumprima -> COMMA sexpression store_argument funcargumprima .)


state 239

    (20) else -> ELSE do_else_operation . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 103

    block                          shift and go to state 241

state 240

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 242


state 241

    (20) else -> ELSE do_else_operation block .

    ID              reduce using rule 20 (else -> ELSE do_else_operation block .)
    IF              reduce using rule 20 (else -> ELSE do_else_operation block .)
    PRINT           reduce using rule 20 (else -> ELSE do_else_operation block .)
    WHILE           reduce using rule 20 (else -> ELSE do_else_operation block .)
    RETURN          reduce using rule 20 (else -> ELSE do_else_operation block .)
    DRAWLINE        reduce using rule 20 (else -> ELSE do_else_operation block .)
    DRAWSQUARE      reduce using rule 20 (else -> ELSE do_else_operation block .)
    DRAWTRIANGLE    reduce using rule 20 (else -> ELSE do_else_operation block .)
    DRAWCIRCLE      reduce using rule 20 (else -> ELSE do_else_operation block .)
    DRAWCURVE       reduce using rule 20 (else -> ELSE do_else_operation block .)
    DRAWPOLYGON     reduce using rule 20 (else -> ELSE do_else_operation block .)
    RBRACE          reduce using rule 20 (else -> ELSE do_else_operation block .)


state 242

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 243


state 243

    (117) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    TIMES           reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DEVIDE          reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PLUS            reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    MINUS           reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSER          reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATER         reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    EQUAL           reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    AND             reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    OR              reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    COMMA           reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RPAREN          reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 117 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)

