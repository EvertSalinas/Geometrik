Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    TRUE
    STRING
    BREAK
    ELSE
    FALSE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM MAIN SEMICOLON programvars programfunction block
Rule 2     program -> condition
Rule 3     programvars -> vars programvars
Rule 4     programvars -> empty
Rule 5     programfunction -> function programfunction
Rule 6     programfunction -> empty
Rule 7     block -> LBRACE blockprima RBRACE
Rule 8     blockprima -> statute blockprima
Rule 9     blockprima -> empty
Rule 10    statute -> assignment
Rule 11    statute -> condition
Rule 12    statute -> write
Rule 13    statute -> read
Rule 14    statute -> cycle
Rule 15    statute -> functioncall
Rule 16    statute -> predefined
Rule 17    statute -> return
Rule 18    condition -> IF LPAREN conditionprima RPAREN block
Rule 19    conditionprima -> condprimaaux
Rule 20    conditionprima -> NOT condprimaaux
Rule 21    condprimaaux -> functioncall
Rule 22    condprimaaux -> singularexp2
Rule 23    vars -> VAR type varsprima SEMICOLON
Rule 24    varsprima -> ID
Rule 25    varsprima -> ID COMMA varsprima
Rule 26    varsprima -> empty
Rule 27    type -> INTTYPE
Rule 28    type -> FLOATTYPE
Rule 29    type -> STRINGTYPE
Rule 30    type -> BOOLEANTYPE
Rule 31    type -> array
Rule 32    array -> INTTYPE arrayprima
Rule 33    array -> FLOATTYPE arrayprima
Rule 34    array -> STRINGTYPE arrayprima
Rule 35    arrayprima -> LBRACKET INT RBRACKET
Rule 36    assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON
Rule 37    assignmentarray -> empty
Rule 38    assignmentarray -> LBRACKET singularexp2 RBRACKET
Rule 39    assignmentprima -> functioncall
Rule 40    assignmentprima -> singularexp2
Rule 41    singularexp2 -> singularexp
Rule 42    singularexp2 -> NOT singularexp
Rule 43    singularexp -> singularexp AND expression
Rule 44    singularexp -> singularexp OR expression
Rule 45    singularexp -> expression
Rule 46    expression -> expression LESSER exp
Rule 47    expression -> expression GREATER exp
Rule 48    expression -> expression EQUAL exp
Rule 49    expression -> expression NOTEQUAL exp
Rule 50    expression -> expression LESSEROREQUAL exp
Rule 51    expression -> expression GREATEROREQUAL exp
Rule 52    expression -> exp
Rule 53    exp -> exp PLUS term
Rule 54    exp -> exp MINUS term
Rule 55    exp -> term
Rule 56    term -> term TIMES factor
Rule 57    term -> term DEVIDE factor
Rule 58    term -> factor
Rule 59    factor -> LPAREN singularexp2 RPAREN
Rule 60    factor -> PLUS constant
Rule 61    factor -> MINUS constant
Rule 62    factor -> constant
Rule 63    constant -> ID constantprima
Rule 64    constant -> FLOAT
Rule 65    constant -> INT
Rule 66    constantprima -> empty
Rule 67    constantprima -> LBRACKET singularexp2 RBRACKET
Rule 68    functioncall -> ID LPAREN funcparam RPAREN SEMICOLON
Rule 69    funcparam -> empty
Rule 70    funcparam -> singularexp2
Rule 71    funcparam -> singularexp COMMA funcparam
Rule 72    function -> FUNCTION VOID ID LPAREN parameter RPAREN block
Rule 73    function -> FUNCTION type ID LPAREN parameter RPAREN block
Rule 74    return -> RETURN singularexp2 SEMICOLON
Rule 75    parameter -> empty
Rule 76    parameter -> parameterprima
Rule 77    parameterprima -> type ID
Rule 78    parameterprima -> type ID COMMA parameterprima
Rule 79    write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON
Rule 80    read -> ID ASSIGN INPUT SEMICOLON
Rule 81    cycle -> WHILE LPAREN singularexp2 RPAREN block
Rule 82    color -> BLUE
Rule 83    color -> GREEN
Rule 84    color -> RED
Rule 85    color -> YELLOW
Rule 86    color -> BROWN
Rule 87    color -> BLACK
Rule 88    predefined -> drawline
Rule 89    predefined -> drawsquare
Rule 90    predefined -> drawtriangle
Rule 91    predefined -> drawcircle
Rule 92    predefined -> drawcurve
Rule 93    predefined -> drawpolygon
Rule 94    drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 95    drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 96    drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 97    drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 98    drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 99    drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 100   empty -> <empty>

Terminals, with rules where they appear

AND                  : 43
ASSIGN               : 36 80
BLACK                : 87
BLUE                 : 82
BOOLEANTYPE          : 30
BREAK                : 
BROWN                : 86
COLON                : 
COMMA                : 25 71 78 94 94 94 94 95 95 96 96 97 97 98 98 99 99
DEVIDE               : 57
DRAWCIRCLE           : 97
DRAWCURVE            : 98
DRAWLINE             : 94
DRAWPOLYGON          : 99
DRAWSQUARE           : 95
DRAWTRIANGLE         : 96
ELSE                 : 
EQUAL                : 48
FALSE                : 
FLOAT                : 64
FLOATTYPE            : 28 33
FUNCTION             : 72 73
GREATER              : 47
GREATEROREQUAL       : 51
GREEN                : 83
ID                   : 24 25 36 63 68 72 73 77 78 80
IF                   : 18
INPUT                : 80
INT                  : 35 65
INTTYPE              : 27 32
LBRACE               : 7
LBRACKET             : 35 38 67
LESSER               : 46
LESSEROREQUAL        : 50
LPAREN               : 18 59 68 72 73 79 81 94 95 96 97 98 99
MAIN                 : 1
MINUS                : 54 61
NOT                  : 20 42
NOTEQUAL             : 49
OR                   : 44
PLUS                 : 53 60
PRINT                : 79
PROGRAM              : 1
RBRACE               : 7
RBRACKET             : 35 38 67
RED                  : 84
RETURN               : 74
RPAREN               : 18 59 68 72 73 79 81 94 95 96 97 98 99
SEMICOLON            : 1 23 36 68 74 79 80 94 95 96 97 98 99
STRING               : 
STRINGTYPE           : 29 34
TIMES                : 56
TRUE                 : 
VAR                  : 23
VOID                 : 72
WHILE                : 81
YELLOW               : 85
error                : 

Nonterminals, with rules where they appear

array                : 31
arrayprima           : 32 33 34
assignment           : 10
assignmentarray      : 36
assignmentprima      : 36
block                : 1 18 72 73 81
blockprima           : 7 8
color                : 94 95 96 97 98 99
condition            : 2 11
conditionprima       : 18
condprimaaux         : 19 20
constant             : 60 61 62
constantprima        : 63
cycle                : 14
drawcircle           : 91
drawcurve            : 92
drawline             : 88
drawpolygon          : 93
drawsquare           : 89
drawtriangle         : 90
empty                : 4 6 9 26 37 66 69 75
exp                  : 46 47 48 49 50 51 52 53 54
expression           : 43 44 45 46 47 48 49 50 51
factor               : 56 57 58
funcparam            : 68 71
function             : 5
functioncall         : 15 21 39
parameter            : 72 73
parameterprima       : 76 78
predefined           : 16
program              : 0
programfunction      : 1 5
programvars          : 1 3
read                 : 13
return               : 17
singularexp          : 41 42 43 44 71
singularexp2         : 22 38 40 59 67 70 74 79 81 94 94 94 94 95 95 96 96 97 97 98 98 99 99
statute              : 8
term                 : 53 54 55 56 57
type                 : 23 73 77 78
vars                 : 3
varsprima            : 23 25
write                : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM MAIN SEMICOLON programvars programfunction block
    (2) program -> . condition
    (18) condition -> . IF LPAREN conditionprima RPAREN block

    PROGRAM         shift and go to state 3
    IF              shift and go to state 4

    program                        shift and go to state 1
    condition                      shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (2) program -> condition .

    $end            reduce using rule 2 (program -> condition .)


state 3

    (1) program -> PROGRAM . MAIN SEMICOLON programvars programfunction block

    MAIN            shift and go to state 5


state 4

    (18) condition -> IF . LPAREN conditionprima RPAREN block

    LPAREN          shift and go to state 6


state 5

    (1) program -> PROGRAM MAIN . SEMICOLON programvars programfunction block

    SEMICOLON       shift and go to state 7


state 6

    (18) condition -> IF LPAREN . conditionprima RPAREN block
    (19) conditionprima -> . condprimaaux
    (20) conditionprima -> . NOT condprimaaux
    (21) condprimaaux -> . functioncall
    (22) condprimaaux -> . singularexp2
    (68) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 23
    ID              shift and go to state 16
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    singularexp2                   shift and go to state 9
    functioncall                   shift and go to state 21
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    constant                       shift and go to state 8
    conditionprima                 shift and go to state 10
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24
    condprimaaux                   shift and go to state 20

state 7

    (1) program -> PROGRAM MAIN SEMICOLON . programvars programfunction block
    (3) programvars -> . vars programvars
    (4) programvars -> . empty
    (23) vars -> . VAR type varsprima SEMICOLON
    (100) empty -> .

    VAR             shift and go to state 27
    FUNCTION        reduce using rule 100 (empty -> .)
    LBRACE          reduce using rule 100 (empty -> .)

    vars                           shift and go to state 25
    programvars                    shift and go to state 28
    empty                          shift and go to state 26

state 8

    (62) factor -> constant .

    TIMES           reduce using rule 62 (factor -> constant .)
    DEVIDE          reduce using rule 62 (factor -> constant .)
    PLUS            reduce using rule 62 (factor -> constant .)
    MINUS           reduce using rule 62 (factor -> constant .)
    LESSER          reduce using rule 62 (factor -> constant .)
    GREATER         reduce using rule 62 (factor -> constant .)
    EQUAL           reduce using rule 62 (factor -> constant .)
    NOTEQUAL        reduce using rule 62 (factor -> constant .)
    LESSEROREQUAL   reduce using rule 62 (factor -> constant .)
    GREATEROREQUAL  reduce using rule 62 (factor -> constant .)
    AND             reduce using rule 62 (factor -> constant .)
    OR              reduce using rule 62 (factor -> constant .)
    COMMA           reduce using rule 62 (factor -> constant .)
    RBRACKET        reduce using rule 62 (factor -> constant .)
    RPAREN          reduce using rule 62 (factor -> constant .)
    SEMICOLON       reduce using rule 62 (factor -> constant .)


state 9

    (22) condprimaaux -> singularexp2 .

    RPAREN          reduce using rule 22 (condprimaaux -> singularexp2 .)


state 10

    (18) condition -> IF LPAREN conditionprima . RPAREN block

    RPAREN          shift and go to state 29


state 11

    (41) singularexp2 -> singularexp .
    (43) singularexp -> singularexp . AND expression
    (44) singularexp -> singularexp . OR expression

    COMMA           reduce using rule 41 (singularexp2 -> singularexp .)
    RBRACKET        reduce using rule 41 (singularexp2 -> singularexp .)
    SEMICOLON       reduce using rule 41 (singularexp2 -> singularexp .)
    RPAREN          reduce using rule 41 (singularexp2 -> singularexp .)
    AND             shift and go to state 30
    OR              shift and go to state 31


state 12

    (61) factor -> MINUS . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    constant                       shift and go to state 32

state 13

    (60) factor -> PLUS . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    constant                       shift and go to state 34

state 14

    (58) term -> factor .

    TIMES           reduce using rule 58 (term -> factor .)
    DEVIDE          reduce using rule 58 (term -> factor .)
    PLUS            reduce using rule 58 (term -> factor .)
    MINUS           reduce using rule 58 (term -> factor .)
    LESSER          reduce using rule 58 (term -> factor .)
    GREATER         reduce using rule 58 (term -> factor .)
    EQUAL           reduce using rule 58 (term -> factor .)
    NOTEQUAL        reduce using rule 58 (term -> factor .)
    LESSEROREQUAL   reduce using rule 58 (term -> factor .)
    GREATEROREQUAL  reduce using rule 58 (term -> factor .)
    AND             reduce using rule 58 (term -> factor .)
    OR              reduce using rule 58 (term -> factor .)
    RPAREN          reduce using rule 58 (term -> factor .)
    COMMA           reduce using rule 58 (term -> factor .)
    RBRACKET        reduce using rule 58 (term -> factor .)
    SEMICOLON       reduce using rule 58 (term -> factor .)


state 15

    (59) factor -> LPAREN . singularexp2 RPAREN
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 35
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 16

    (68) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (63) constant -> ID . constantprima
    (66) constantprima -> . empty
    (67) constantprima -> . LBRACKET singularexp2 RBRACKET
    (100) empty -> .

    LPAREN          shift and go to state 39
    LBRACKET        shift and go to state 38
    TIMES           reduce using rule 100 (empty -> .)
    DEVIDE          reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    LESSER          reduce using rule 100 (empty -> .)
    GREATER         reduce using rule 100 (empty -> .)
    EQUAL           reduce using rule 100 (empty -> .)
    NOTEQUAL        reduce using rule 100 (empty -> .)
    LESSEROREQUAL   reduce using rule 100 (empty -> .)
    GREATEROREQUAL  reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)

    constantprima                  shift and go to state 37
    empty                          shift and go to state 40

state 17

    (55) exp -> term .
    (56) term -> term . TIMES factor
    (57) term -> term . DEVIDE factor

    PLUS            reduce using rule 55 (exp -> term .)
    MINUS           reduce using rule 55 (exp -> term .)
    LESSER          reduce using rule 55 (exp -> term .)
    GREATER         reduce using rule 55 (exp -> term .)
    EQUAL           reduce using rule 55 (exp -> term .)
    NOTEQUAL        reduce using rule 55 (exp -> term .)
    LESSEROREQUAL   reduce using rule 55 (exp -> term .)
    GREATEROREQUAL  reduce using rule 55 (exp -> term .)
    AND             reduce using rule 55 (exp -> term .)
    OR              reduce using rule 55 (exp -> term .)
    RPAREN          reduce using rule 55 (exp -> term .)
    RBRACKET        reduce using rule 55 (exp -> term .)
    SEMICOLON       reduce using rule 55 (exp -> term .)
    COMMA           reduce using rule 55 (exp -> term .)
    TIMES           shift and go to state 42
    DEVIDE          shift and go to state 41


state 18

    (65) constant -> INT .

    TIMES           reduce using rule 65 (constant -> INT .)
    DEVIDE          reduce using rule 65 (constant -> INT .)
    PLUS            reduce using rule 65 (constant -> INT .)
    MINUS           reduce using rule 65 (constant -> INT .)
    LESSER          reduce using rule 65 (constant -> INT .)
    GREATER         reduce using rule 65 (constant -> INT .)
    EQUAL           reduce using rule 65 (constant -> INT .)
    NOTEQUAL        reduce using rule 65 (constant -> INT .)
    LESSEROREQUAL   reduce using rule 65 (constant -> INT .)
    GREATEROREQUAL  reduce using rule 65 (constant -> INT .)
    AND             reduce using rule 65 (constant -> INT .)
    OR              reduce using rule 65 (constant -> INT .)
    RPAREN          reduce using rule 65 (constant -> INT .)
    RBRACKET        reduce using rule 65 (constant -> INT .)
    SEMICOLON       reduce using rule 65 (constant -> INT .)
    COMMA           reduce using rule 65 (constant -> INT .)


state 19

    (64) constant -> FLOAT .

    TIMES           reduce using rule 64 (constant -> FLOAT .)
    DEVIDE          reduce using rule 64 (constant -> FLOAT .)
    PLUS            reduce using rule 64 (constant -> FLOAT .)
    MINUS           reduce using rule 64 (constant -> FLOAT .)
    LESSER          reduce using rule 64 (constant -> FLOAT .)
    GREATER         reduce using rule 64 (constant -> FLOAT .)
    EQUAL           reduce using rule 64 (constant -> FLOAT .)
    NOTEQUAL        reduce using rule 64 (constant -> FLOAT .)
    LESSEROREQUAL   reduce using rule 64 (constant -> FLOAT .)
    GREATEROREQUAL  reduce using rule 64 (constant -> FLOAT .)
    AND             reduce using rule 64 (constant -> FLOAT .)
    OR              reduce using rule 64 (constant -> FLOAT .)
    RPAREN          reduce using rule 64 (constant -> FLOAT .)
    RBRACKET        reduce using rule 64 (constant -> FLOAT .)
    SEMICOLON       reduce using rule 64 (constant -> FLOAT .)
    COMMA           reduce using rule 64 (constant -> FLOAT .)


state 20

    (19) conditionprima -> condprimaaux .

    RPAREN          reduce using rule 19 (conditionprima -> condprimaaux .)


state 21

    (21) condprimaaux -> functioncall .

    RPAREN          reduce using rule 21 (condprimaaux -> functioncall .)


state 22

    (52) expression -> exp .
    (53) exp -> exp . PLUS term
    (54) exp -> exp . MINUS term

    LESSER          reduce using rule 52 (expression -> exp .)
    GREATER         reduce using rule 52 (expression -> exp .)
    EQUAL           reduce using rule 52 (expression -> exp .)
    NOTEQUAL        reduce using rule 52 (expression -> exp .)
    LESSEROREQUAL   reduce using rule 52 (expression -> exp .)
    GREATEROREQUAL  reduce using rule 52 (expression -> exp .)
    AND             reduce using rule 52 (expression -> exp .)
    OR              reduce using rule 52 (expression -> exp .)
    COMMA           reduce using rule 52 (expression -> exp .)
    RPAREN          reduce using rule 52 (expression -> exp .)
    RBRACKET        reduce using rule 52 (expression -> exp .)
    SEMICOLON       reduce using rule 52 (expression -> exp .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 23

    (20) conditionprima -> NOT . condprimaaux
    (42) singularexp2 -> NOT . singularexp
    (21) condprimaaux -> . functioncall
    (22) condprimaaux -> . singularexp2
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (68) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    ID              shift and go to state 16
    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    singularexp2                   shift and go to state 9
    functioncall                   shift and go to state 21
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    constant                       shift and go to state 8
    singularexp                    shift and go to state 45
    expression                     shift and go to state 24
    condprimaaux                   shift and go to state 46

state 24

    (45) singularexp -> expression .
    (46) expression -> expression . LESSER exp
    (47) expression -> expression . GREATER exp
    (48) expression -> expression . EQUAL exp
    (49) expression -> expression . NOTEQUAL exp
    (50) expression -> expression . LESSEROREQUAL exp
    (51) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 45 (singularexp -> expression .)
    OR              reduce using rule 45 (singularexp -> expression .)
    SEMICOLON       reduce using rule 45 (singularexp -> expression .)
    COMMA           reduce using rule 45 (singularexp -> expression .)
    RPAREN          reduce using rule 45 (singularexp -> expression .)
    RBRACKET        reduce using rule 45 (singularexp -> expression .)
    LESSER          shift and go to state 51
    GREATER         shift and go to state 48
    EQUAL           shift and go to state 50
    NOTEQUAL        shift and go to state 47
    LESSEROREQUAL   shift and go to state 49
    GREATEROREQUAL  shift and go to state 52


state 25

    (3) programvars -> vars . programvars
    (3) programvars -> . vars programvars
    (4) programvars -> . empty
    (23) vars -> . VAR type varsprima SEMICOLON
    (100) empty -> .

    VAR             shift and go to state 27
    FUNCTION        reduce using rule 100 (empty -> .)
    LBRACE          reduce using rule 100 (empty -> .)

    empty                          shift and go to state 26
    programvars                    shift and go to state 53
    vars                           shift and go to state 25

state 26

    (4) programvars -> empty .

    FUNCTION        reduce using rule 4 (programvars -> empty .)
    LBRACE          reduce using rule 4 (programvars -> empty .)


state 27

    (23) vars -> VAR . type varsprima SEMICOLON
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE arrayprima
    (33) array -> . FLOATTYPE arrayprima
    (34) array -> . STRINGTYPE arrayprima

    INTTYPE         shift and go to state 55
    FLOATTYPE       shift and go to state 56
    STRINGTYPE      shift and go to state 54
    BOOLEANTYPE     shift and go to state 57

    type                           shift and go to state 58
    array                          shift and go to state 59

state 28

    (1) program -> PROGRAM MAIN SEMICOLON programvars . programfunction block
    (5) programfunction -> . function programfunction
    (6) programfunction -> . empty
    (72) function -> . FUNCTION VOID ID LPAREN parameter RPAREN block
    (73) function -> . FUNCTION type ID LPAREN parameter RPAREN block
    (100) empty -> .

    FUNCTION        shift and go to state 61
    LBRACE          reduce using rule 100 (empty -> .)

    function                       shift and go to state 60
    programfunction                shift and go to state 63
    empty                          shift and go to state 62

state 29

    (18) condition -> IF LPAREN conditionprima RPAREN . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 64

    block                          shift and go to state 65

state 30

    (43) singularexp -> singularexp AND . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    expression                     shift and go to state 66

state 31

    (44) singularexp -> singularexp OR . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    expression                     shift and go to state 67

state 32

    (61) factor -> MINUS constant .

    TIMES           reduce using rule 61 (factor -> MINUS constant .)
    DEVIDE          reduce using rule 61 (factor -> MINUS constant .)
    PLUS            reduce using rule 61 (factor -> MINUS constant .)
    MINUS           reduce using rule 61 (factor -> MINUS constant .)
    LESSER          reduce using rule 61 (factor -> MINUS constant .)
    GREATER         reduce using rule 61 (factor -> MINUS constant .)
    EQUAL           reduce using rule 61 (factor -> MINUS constant .)
    NOTEQUAL        reduce using rule 61 (factor -> MINUS constant .)
    LESSEROREQUAL   reduce using rule 61 (factor -> MINUS constant .)
    GREATEROREQUAL  reduce using rule 61 (factor -> MINUS constant .)
    AND             reduce using rule 61 (factor -> MINUS constant .)
    OR              reduce using rule 61 (factor -> MINUS constant .)
    COMMA           reduce using rule 61 (factor -> MINUS constant .)
    RBRACKET        reduce using rule 61 (factor -> MINUS constant .)
    RPAREN          reduce using rule 61 (factor -> MINUS constant .)
    SEMICOLON       reduce using rule 61 (factor -> MINUS constant .)


state 33

    (63) constant -> ID . constantprima
    (66) constantprima -> . empty
    (67) constantprima -> . LBRACKET singularexp2 RBRACKET
    (100) empty -> .

    LBRACKET        shift and go to state 38
    TIMES           reduce using rule 100 (empty -> .)
    DEVIDE          reduce using rule 100 (empty -> .)
    PLUS            reduce using rule 100 (empty -> .)
    MINUS           reduce using rule 100 (empty -> .)
    LESSER          reduce using rule 100 (empty -> .)
    GREATER         reduce using rule 100 (empty -> .)
    EQUAL           reduce using rule 100 (empty -> .)
    NOTEQUAL        reduce using rule 100 (empty -> .)
    LESSEROREQUAL   reduce using rule 100 (empty -> .)
    GREATEROREQUAL  reduce using rule 100 (empty -> .)
    AND             reduce using rule 100 (empty -> .)
    OR              reduce using rule 100 (empty -> .)
    RPAREN          reduce using rule 100 (empty -> .)
    RBRACKET        reduce using rule 100 (empty -> .)
    SEMICOLON       reduce using rule 100 (empty -> .)
    COMMA           reduce using rule 100 (empty -> .)

    constantprima                  shift and go to state 37
    empty                          shift and go to state 40

state 34

    (60) factor -> PLUS constant .

    TIMES           reduce using rule 60 (factor -> PLUS constant .)
    DEVIDE          reduce using rule 60 (factor -> PLUS constant .)
    PLUS            reduce using rule 60 (factor -> PLUS constant .)
    MINUS           reduce using rule 60 (factor -> PLUS constant .)
    LESSER          reduce using rule 60 (factor -> PLUS constant .)
    GREATER         reduce using rule 60 (factor -> PLUS constant .)
    EQUAL           reduce using rule 60 (factor -> PLUS constant .)
    NOTEQUAL        reduce using rule 60 (factor -> PLUS constant .)
    LESSEROREQUAL   reduce using rule 60 (factor -> PLUS constant .)
    GREATEROREQUAL  reduce using rule 60 (factor -> PLUS constant .)
    AND             reduce using rule 60 (factor -> PLUS constant .)
    OR              reduce using rule 60 (factor -> PLUS constant .)
    COMMA           reduce using rule 60 (factor -> PLUS constant .)
    RBRACKET        reduce using rule 60 (factor -> PLUS constant .)
    RPAREN          reduce using rule 60 (factor -> PLUS constant .)
    SEMICOLON       reduce using rule 60 (factor -> PLUS constant .)


state 35

    (59) factor -> LPAREN singularexp2 . RPAREN

    RPAREN          shift and go to state 68


state 36

    (42) singularexp2 -> NOT . singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 69
    expression                     shift and go to state 24

state 37

    (63) constant -> ID constantprima .

    TIMES           reduce using rule 63 (constant -> ID constantprima .)
    DEVIDE          reduce using rule 63 (constant -> ID constantprima .)
    PLUS            reduce using rule 63 (constant -> ID constantprima .)
    MINUS           reduce using rule 63 (constant -> ID constantprima .)
    LESSER          reduce using rule 63 (constant -> ID constantprima .)
    GREATER         reduce using rule 63 (constant -> ID constantprima .)
    EQUAL           reduce using rule 63 (constant -> ID constantprima .)
    NOTEQUAL        reduce using rule 63 (constant -> ID constantprima .)
    LESSEROREQUAL   reduce using rule 63 (constant -> ID constantprima .)
    GREATEROREQUAL  reduce using rule 63 (constant -> ID constantprima .)
    AND             reduce using rule 63 (constant -> ID constantprima .)
    OR              reduce using rule 63 (constant -> ID constantprima .)
    RPAREN          reduce using rule 63 (constant -> ID constantprima .)
    RBRACKET        reduce using rule 63 (constant -> ID constantprima .)
    SEMICOLON       reduce using rule 63 (constant -> ID constantprima .)
    COMMA           reduce using rule 63 (constant -> ID constantprima .)


state 38

    (67) constantprima -> LBRACKET . singularexp2 RBRACKET
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 70
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 39

    (68) functioncall -> ID LPAREN . funcparam RPAREN SEMICOLON
    (69) funcparam -> . empty
    (70) funcparam -> . singularexp2
    (71) funcparam -> . singularexp COMMA funcparam
    (100) empty -> .
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    RPAREN          reduce using rule 100 (empty -> .)
    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    funcparam                      shift and go to state 74
    singularexp2                   shift and go to state 71
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    constant                       shift and go to state 8
    singularexp                    shift and go to state 72
    expression                     shift and go to state 24
    empty                          shift and go to state 73

state 40

    (66) constantprima -> empty .

    TIMES           reduce using rule 66 (constantprima -> empty .)
    DEVIDE          reduce using rule 66 (constantprima -> empty .)
    PLUS            reduce using rule 66 (constantprima -> empty .)
    MINUS           reduce using rule 66 (constantprima -> empty .)
    LESSER          reduce using rule 66 (constantprima -> empty .)
    GREATER         reduce using rule 66 (constantprima -> empty .)
    EQUAL           reduce using rule 66 (constantprima -> empty .)
    NOTEQUAL        reduce using rule 66 (constantprima -> empty .)
    LESSEROREQUAL   reduce using rule 66 (constantprima -> empty .)
    GREATEROREQUAL  reduce using rule 66 (constantprima -> empty .)
    AND             reduce using rule 66 (constantprima -> empty .)
    OR              reduce using rule 66 (constantprima -> empty .)
    RPAREN          reduce using rule 66 (constantprima -> empty .)
    RBRACKET        reduce using rule 66 (constantprima -> empty .)
    SEMICOLON       reduce using rule 66 (constantprima -> empty .)
    COMMA           reduce using rule 66 (constantprima -> empty .)


state 41

    (57) term -> term DEVIDE . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    constant                       shift and go to state 8
    factor                         shift and go to state 75

state 42

    (56) term -> term TIMES . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    constant                       shift and go to state 8
    factor                         shift and go to state 76

state 43

    (53) exp -> exp PLUS . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 77
    constant                       shift and go to state 8
    factor                         shift and go to state 14

state 44

    (54) exp -> exp MINUS . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 78
    constant                       shift and go to state 8
    factor                         shift and go to state 14

state 45

    (42) singularexp2 -> NOT singularexp .
    (43) singularexp -> singularexp . AND expression
    (44) singularexp -> singularexp . OR expression
    (41) singularexp2 -> singularexp .

  ! reduce/reduce conflict for RPAREN resolved using rule 41 (singularexp2 -> singularexp .)
    AND             shift and go to state 30
    OR              shift and go to state 31
    RPAREN          reduce using rule 41 (singularexp2 -> singularexp .)

  ! RPAREN          [ reduce using rule 42 (singularexp2 -> NOT singularexp .) ]


state 46

    (20) conditionprima -> NOT condprimaaux .

    RPAREN          reduce using rule 20 (conditionprima -> NOT condprimaaux .)


state 47

    (49) expression -> expression NOTEQUAL . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 79
    factor                         shift and go to state 14

state 48

    (47) expression -> expression GREATER . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 80
    factor                         shift and go to state 14

state 49

    (50) expression -> expression LESSEROREQUAL . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 81
    factor                         shift and go to state 14

state 50

    (48) expression -> expression EQUAL . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 82
    factor                         shift and go to state 14

state 51

    (46) expression -> expression LESSER . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 83
    factor                         shift and go to state 14

state 52

    (51) expression -> expression GREATEROREQUAL . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    exp                            shift and go to state 84
    factor                         shift and go to state 14

state 53

    (3) programvars -> vars programvars .

    FUNCTION        reduce using rule 3 (programvars -> vars programvars .)
    LBRACE          reduce using rule 3 (programvars -> vars programvars .)


state 54

    (29) type -> STRINGTYPE .
    (34) array -> STRINGTYPE . arrayprima
    (35) arrayprima -> . LBRACKET INT RBRACKET

    ID              reduce using rule 29 (type -> STRINGTYPE .)
    SEMICOLON       reduce using rule 29 (type -> STRINGTYPE .)
    LBRACKET        shift and go to state 85

    arrayprima                     shift and go to state 86

state 55

    (27) type -> INTTYPE .
    (32) array -> INTTYPE . arrayprima
    (35) arrayprima -> . LBRACKET INT RBRACKET

    ID              reduce using rule 27 (type -> INTTYPE .)
    SEMICOLON       reduce using rule 27 (type -> INTTYPE .)
    LBRACKET        shift and go to state 85

    arrayprima                     shift and go to state 87

state 56

    (28) type -> FLOATTYPE .
    (33) array -> FLOATTYPE . arrayprima
    (35) arrayprima -> . LBRACKET INT RBRACKET

    ID              reduce using rule 28 (type -> FLOATTYPE .)
    SEMICOLON       reduce using rule 28 (type -> FLOATTYPE .)
    LBRACKET        shift and go to state 85

    arrayprima                     shift and go to state 88

state 57

    (30) type -> BOOLEANTYPE .

    ID              reduce using rule 30 (type -> BOOLEANTYPE .)
    SEMICOLON       reduce using rule 30 (type -> BOOLEANTYPE .)


state 58

    (23) vars -> VAR type . varsprima SEMICOLON
    (24) varsprima -> . ID
    (25) varsprima -> . ID COMMA varsprima
    (26) varsprima -> . empty
    (100) empty -> .

    ID              shift and go to state 90
    SEMICOLON       reduce using rule 100 (empty -> .)

    varsprima                      shift and go to state 89
    empty                          shift and go to state 91

state 59

    (31) type -> array .

    ID              reduce using rule 31 (type -> array .)
    SEMICOLON       reduce using rule 31 (type -> array .)


state 60

    (5) programfunction -> function . programfunction
    (5) programfunction -> . function programfunction
    (6) programfunction -> . empty
    (72) function -> . FUNCTION VOID ID LPAREN parameter RPAREN block
    (73) function -> . FUNCTION type ID LPAREN parameter RPAREN block
    (100) empty -> .

    FUNCTION        shift and go to state 61
    LBRACE          reduce using rule 100 (empty -> .)

    function                       shift and go to state 60
    programfunction                shift and go to state 92
    empty                          shift and go to state 62

state 61

    (72) function -> FUNCTION . VOID ID LPAREN parameter RPAREN block
    (73) function -> FUNCTION . type ID LPAREN parameter RPAREN block
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE arrayprima
    (33) array -> . FLOATTYPE arrayprima
    (34) array -> . STRINGTYPE arrayprima

    VOID            shift and go to state 94
    INTTYPE         shift and go to state 55
    FLOATTYPE       shift and go to state 56
    STRINGTYPE      shift and go to state 54
    BOOLEANTYPE     shift and go to state 57

    type                           shift and go to state 93
    array                          shift and go to state 59

state 62

    (6) programfunction -> empty .

    LBRACE          reduce using rule 6 (programfunction -> empty .)


state 63

    (1) program -> PROGRAM MAIN SEMICOLON programvars programfunction . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 64

    block                          shift and go to state 95

state 64

    (7) block -> LBRACE . blockprima RBRACE
    (8) blockprima -> . statute blockprima
    (9) blockprima -> . empty
    (10) statute -> . assignment
    (11) statute -> . condition
    (12) statute -> . write
    (13) statute -> . read
    (14) statute -> . cycle
    (15) statute -> . functioncall
    (16) statute -> . predefined
    (17) statute -> . return
    (100) empty -> .
    (36) assignment -> . ID assignmentarray ASSIGN assignmentprima SEMICOLON
    (18) condition -> . IF LPAREN conditionprima RPAREN block
    (79) write -> . PRINT LPAREN singularexp2 RPAREN SEMICOLON
    (80) read -> . ID ASSIGN INPUT SEMICOLON
    (81) cycle -> . WHILE LPAREN singularexp2 RPAREN block
    (68) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (88) predefined -> . drawline
    (89) predefined -> . drawsquare
    (90) predefined -> . drawtriangle
    (91) predefined -> . drawcircle
    (92) predefined -> . drawcurve
    (93) predefined -> . drawpolygon
    (74) return -> . RETURN singularexp2 SEMICOLON
    (94) drawline -> . DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (95) drawsquare -> . DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (96) drawtriangle -> . DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (97) drawcircle -> . DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (98) drawcurve -> . DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (99) drawpolygon -> . DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 116
    IF              shift and go to state 4
    PRINT           shift and go to state 100
    WHILE           shift and go to state 99
    RETURN          shift and go to state 97
    DRAWLINE        shift and go to state 115
    DRAWSQUARE      shift and go to state 106
    DRAWTRIANGLE    shift and go to state 98
    DRAWCIRCLE      shift and go to state 103
    DRAWCURVE       shift and go to state 120
    DRAWPOLYGON     shift and go to state 119

    drawtriangle                   shift and go to state 96
    drawcurve                      shift and go to state 114
    predefined                     shift and go to state 101
    blockprima                     shift and go to state 102
    drawline                       shift and go to state 104
    write                          shift and go to state 105
    drawcircle                     shift and go to state 107
    empty                          shift and go to state 109
    return                         shift and go to state 110
    drawpolygon                    shift and go to state 111
    read                           shift and go to state 112
    assignment                     shift and go to state 113
    condition                      shift and go to state 117
    cycle                          shift and go to state 108
    statute                        shift and go to state 118
    drawsquare                     shift and go to state 121
    functioncall                   shift and go to state 122

state 65

    (18) condition -> IF LPAREN conditionprima RPAREN block .

    $end            reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    ID              reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    IF              reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    PRINT           reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    WHILE           reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    RETURN          reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWLINE        reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWSQUARE      reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWTRIANGLE    reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWCIRCLE      reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWCURVE       reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWPOLYGON     reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)
    RBRACE          reduce using rule 18 (condition -> IF LPAREN conditionprima RPAREN block .)


state 66

    (43) singularexp -> singularexp AND expression .
    (46) expression -> expression . LESSER exp
    (47) expression -> expression . GREATER exp
    (48) expression -> expression . EQUAL exp
    (49) expression -> expression . NOTEQUAL exp
    (50) expression -> expression . LESSEROREQUAL exp
    (51) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 43 (singularexp -> singularexp AND expression .)
    OR              reduce using rule 43 (singularexp -> singularexp AND expression .)
    SEMICOLON       reduce using rule 43 (singularexp -> singularexp AND expression .)
    COMMA           reduce using rule 43 (singularexp -> singularexp AND expression .)
    RPAREN          reduce using rule 43 (singularexp -> singularexp AND expression .)
    RBRACKET        reduce using rule 43 (singularexp -> singularexp AND expression .)
    LESSER          shift and go to state 51
    GREATER         shift and go to state 48
    EQUAL           shift and go to state 50
    NOTEQUAL        shift and go to state 47
    LESSEROREQUAL   shift and go to state 49
    GREATEROREQUAL  shift and go to state 52


state 67

    (44) singularexp -> singularexp OR expression .
    (46) expression -> expression . LESSER exp
    (47) expression -> expression . GREATER exp
    (48) expression -> expression . EQUAL exp
    (49) expression -> expression . NOTEQUAL exp
    (50) expression -> expression . LESSEROREQUAL exp
    (51) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 44 (singularexp -> singularexp OR expression .)
    OR              reduce using rule 44 (singularexp -> singularexp OR expression .)
    SEMICOLON       reduce using rule 44 (singularexp -> singularexp OR expression .)
    COMMA           reduce using rule 44 (singularexp -> singularexp OR expression .)
    RPAREN          reduce using rule 44 (singularexp -> singularexp OR expression .)
    RBRACKET        reduce using rule 44 (singularexp -> singularexp OR expression .)
    LESSER          shift and go to state 51
    GREATER         shift and go to state 48
    EQUAL           shift and go to state 50
    NOTEQUAL        shift and go to state 47
    LESSEROREQUAL   shift and go to state 49
    GREATEROREQUAL  shift and go to state 52


state 68

    (59) factor -> LPAREN singularexp2 RPAREN .

    TIMES           reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    DEVIDE          reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    PLUS            reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    MINUS           reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    LESSER          reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    GREATER         reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    EQUAL           reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    NOTEQUAL        reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    LESSEROREQUAL   reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    GREATEROREQUAL  reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    AND             reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    OR              reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    COMMA           reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    RBRACKET        reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    RPAREN          reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)
    SEMICOLON       reduce using rule 59 (factor -> LPAREN singularexp2 RPAREN .)


state 69

    (42) singularexp2 -> NOT singularexp .
    (43) singularexp -> singularexp . AND expression
    (44) singularexp -> singularexp . OR expression

    COMMA           reduce using rule 42 (singularexp2 -> NOT singularexp .)
    RBRACKET        reduce using rule 42 (singularexp2 -> NOT singularexp .)
    RPAREN          reduce using rule 42 (singularexp2 -> NOT singularexp .)
    SEMICOLON       reduce using rule 42 (singularexp2 -> NOT singularexp .)
    AND             shift and go to state 30
    OR              shift and go to state 31


state 70

    (67) constantprima -> LBRACKET singularexp2 . RBRACKET

    RBRACKET        shift and go to state 123


state 71

    (70) funcparam -> singularexp2 .

    RPAREN          reduce using rule 70 (funcparam -> singularexp2 .)


state 72

    (71) funcparam -> singularexp . COMMA funcparam
    (41) singularexp2 -> singularexp .
    (43) singularexp -> singularexp . AND expression
    (44) singularexp -> singularexp . OR expression

    COMMA           shift and go to state 124
    RPAREN          reduce using rule 41 (singularexp2 -> singularexp .)
    AND             shift and go to state 30
    OR              shift and go to state 31


state 73

    (69) funcparam -> empty .

    RPAREN          reduce using rule 69 (funcparam -> empty .)


state 74

    (68) functioncall -> ID LPAREN funcparam . RPAREN SEMICOLON

    RPAREN          shift and go to state 125


state 75

    (57) term -> term DEVIDE factor .

    TIMES           reduce using rule 57 (term -> term DEVIDE factor .)
    DEVIDE          reduce using rule 57 (term -> term DEVIDE factor .)
    PLUS            reduce using rule 57 (term -> term DEVIDE factor .)
    MINUS           reduce using rule 57 (term -> term DEVIDE factor .)
    LESSER          reduce using rule 57 (term -> term DEVIDE factor .)
    GREATER         reduce using rule 57 (term -> term DEVIDE factor .)
    EQUAL           reduce using rule 57 (term -> term DEVIDE factor .)
    NOTEQUAL        reduce using rule 57 (term -> term DEVIDE factor .)
    LESSEROREQUAL   reduce using rule 57 (term -> term DEVIDE factor .)
    GREATEROREQUAL  reduce using rule 57 (term -> term DEVIDE factor .)
    AND             reduce using rule 57 (term -> term DEVIDE factor .)
    OR              reduce using rule 57 (term -> term DEVIDE factor .)
    RPAREN          reduce using rule 57 (term -> term DEVIDE factor .)
    COMMA           reduce using rule 57 (term -> term DEVIDE factor .)
    RBRACKET        reduce using rule 57 (term -> term DEVIDE factor .)
    SEMICOLON       reduce using rule 57 (term -> term DEVIDE factor .)


state 76

    (56) term -> term TIMES factor .

    TIMES           reduce using rule 56 (term -> term TIMES factor .)
    DEVIDE          reduce using rule 56 (term -> term TIMES factor .)
    PLUS            reduce using rule 56 (term -> term TIMES factor .)
    MINUS           reduce using rule 56 (term -> term TIMES factor .)
    LESSER          reduce using rule 56 (term -> term TIMES factor .)
    GREATER         reduce using rule 56 (term -> term TIMES factor .)
    EQUAL           reduce using rule 56 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 56 (term -> term TIMES factor .)
    LESSEROREQUAL   reduce using rule 56 (term -> term TIMES factor .)
    GREATEROREQUAL  reduce using rule 56 (term -> term TIMES factor .)
    AND             reduce using rule 56 (term -> term TIMES factor .)
    OR              reduce using rule 56 (term -> term TIMES factor .)
    RPAREN          reduce using rule 56 (term -> term TIMES factor .)
    COMMA           reduce using rule 56 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 56 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 56 (term -> term TIMES factor .)


state 77

    (53) exp -> exp PLUS term .
    (56) term -> term . TIMES factor
    (57) term -> term . DEVIDE factor

    PLUS            reduce using rule 53 (exp -> exp PLUS term .)
    MINUS           reduce using rule 53 (exp -> exp PLUS term .)
    LESSER          reduce using rule 53 (exp -> exp PLUS term .)
    GREATER         reduce using rule 53 (exp -> exp PLUS term .)
    EQUAL           reduce using rule 53 (exp -> exp PLUS term .)
    NOTEQUAL        reduce using rule 53 (exp -> exp PLUS term .)
    LESSEROREQUAL   reduce using rule 53 (exp -> exp PLUS term .)
    GREATEROREQUAL  reduce using rule 53 (exp -> exp PLUS term .)
    AND             reduce using rule 53 (exp -> exp PLUS term .)
    OR              reduce using rule 53 (exp -> exp PLUS term .)
    RPAREN          reduce using rule 53 (exp -> exp PLUS term .)
    RBRACKET        reduce using rule 53 (exp -> exp PLUS term .)
    SEMICOLON       reduce using rule 53 (exp -> exp PLUS term .)
    COMMA           reduce using rule 53 (exp -> exp PLUS term .)
    TIMES           shift and go to state 42
    DEVIDE          shift and go to state 41


state 78

    (54) exp -> exp MINUS term .
    (56) term -> term . TIMES factor
    (57) term -> term . DEVIDE factor

    PLUS            reduce using rule 54 (exp -> exp MINUS term .)
    MINUS           reduce using rule 54 (exp -> exp MINUS term .)
    LESSER          reduce using rule 54 (exp -> exp MINUS term .)
    GREATER         reduce using rule 54 (exp -> exp MINUS term .)
    EQUAL           reduce using rule 54 (exp -> exp MINUS term .)
    NOTEQUAL        reduce using rule 54 (exp -> exp MINUS term .)
    LESSEROREQUAL   reduce using rule 54 (exp -> exp MINUS term .)
    GREATEROREQUAL  reduce using rule 54 (exp -> exp MINUS term .)
    AND             reduce using rule 54 (exp -> exp MINUS term .)
    OR              reduce using rule 54 (exp -> exp MINUS term .)
    RPAREN          reduce using rule 54 (exp -> exp MINUS term .)
    RBRACKET        reduce using rule 54 (exp -> exp MINUS term .)
    SEMICOLON       reduce using rule 54 (exp -> exp MINUS term .)
    COMMA           reduce using rule 54 (exp -> exp MINUS term .)
    TIMES           shift and go to state 42
    DEVIDE          shift and go to state 41


state 79

    (49) expression -> expression NOTEQUAL exp .
    (53) exp -> exp . PLUS term
    (54) exp -> exp . MINUS term

    LESSER          reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    GREATER         reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    EQUAL           reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    NOTEQUAL        reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    LESSEROREQUAL   reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    GREATEROREQUAL  reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    AND             reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    OR              reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    COMMA           reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    RPAREN          reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    RBRACKET        reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    SEMICOLON       reduce using rule 49 (expression -> expression NOTEQUAL exp .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 80

    (47) expression -> expression GREATER exp .
    (53) exp -> exp . PLUS term
    (54) exp -> exp . MINUS term

    LESSER          reduce using rule 47 (expression -> expression GREATER exp .)
    GREATER         reduce using rule 47 (expression -> expression GREATER exp .)
    EQUAL           reduce using rule 47 (expression -> expression GREATER exp .)
    NOTEQUAL        reduce using rule 47 (expression -> expression GREATER exp .)
    LESSEROREQUAL   reduce using rule 47 (expression -> expression GREATER exp .)
    GREATEROREQUAL  reduce using rule 47 (expression -> expression GREATER exp .)
    AND             reduce using rule 47 (expression -> expression GREATER exp .)
    OR              reduce using rule 47 (expression -> expression GREATER exp .)
    COMMA           reduce using rule 47 (expression -> expression GREATER exp .)
    RPAREN          reduce using rule 47 (expression -> expression GREATER exp .)
    RBRACKET        reduce using rule 47 (expression -> expression GREATER exp .)
    SEMICOLON       reduce using rule 47 (expression -> expression GREATER exp .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 81

    (50) expression -> expression LESSEROREQUAL exp .
    (53) exp -> exp . PLUS term
    (54) exp -> exp . MINUS term

    LESSER          reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    GREATER         reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    EQUAL           reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    NOTEQUAL        reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    LESSEROREQUAL   reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    GREATEROREQUAL  reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    AND             reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    OR              reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    COMMA           reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    RPAREN          reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    RBRACKET        reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    SEMICOLON       reduce using rule 50 (expression -> expression LESSEROREQUAL exp .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 82

    (48) expression -> expression EQUAL exp .
    (53) exp -> exp . PLUS term
    (54) exp -> exp . MINUS term

    LESSER          reduce using rule 48 (expression -> expression EQUAL exp .)
    GREATER         reduce using rule 48 (expression -> expression EQUAL exp .)
    EQUAL           reduce using rule 48 (expression -> expression EQUAL exp .)
    NOTEQUAL        reduce using rule 48 (expression -> expression EQUAL exp .)
    LESSEROREQUAL   reduce using rule 48 (expression -> expression EQUAL exp .)
    GREATEROREQUAL  reduce using rule 48 (expression -> expression EQUAL exp .)
    AND             reduce using rule 48 (expression -> expression EQUAL exp .)
    OR              reduce using rule 48 (expression -> expression EQUAL exp .)
    COMMA           reduce using rule 48 (expression -> expression EQUAL exp .)
    RPAREN          reduce using rule 48 (expression -> expression EQUAL exp .)
    RBRACKET        reduce using rule 48 (expression -> expression EQUAL exp .)
    SEMICOLON       reduce using rule 48 (expression -> expression EQUAL exp .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 83

    (46) expression -> expression LESSER exp .
    (53) exp -> exp . PLUS term
    (54) exp -> exp . MINUS term

    LESSER          reduce using rule 46 (expression -> expression LESSER exp .)
    GREATER         reduce using rule 46 (expression -> expression LESSER exp .)
    EQUAL           reduce using rule 46 (expression -> expression LESSER exp .)
    NOTEQUAL        reduce using rule 46 (expression -> expression LESSER exp .)
    LESSEROREQUAL   reduce using rule 46 (expression -> expression LESSER exp .)
    GREATEROREQUAL  reduce using rule 46 (expression -> expression LESSER exp .)
    AND             reduce using rule 46 (expression -> expression LESSER exp .)
    OR              reduce using rule 46 (expression -> expression LESSER exp .)
    COMMA           reduce using rule 46 (expression -> expression LESSER exp .)
    RPAREN          reduce using rule 46 (expression -> expression LESSER exp .)
    RBRACKET        reduce using rule 46 (expression -> expression LESSER exp .)
    SEMICOLON       reduce using rule 46 (expression -> expression LESSER exp .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 84

    (51) expression -> expression GREATEROREQUAL exp .
    (53) exp -> exp . PLUS term
    (54) exp -> exp . MINUS term

    LESSER          reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    GREATER         reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    EQUAL           reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    NOTEQUAL        reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    LESSEROREQUAL   reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    GREATEROREQUAL  reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    AND             reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    OR              reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    COMMA           reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    RPAREN          reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    RBRACKET        reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    SEMICOLON       reduce using rule 51 (expression -> expression GREATEROREQUAL exp .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44


state 85

    (35) arrayprima -> LBRACKET . INT RBRACKET

    INT             shift and go to state 126


state 86

    (34) array -> STRINGTYPE arrayprima .

    ID              reduce using rule 34 (array -> STRINGTYPE arrayprima .)
    SEMICOLON       reduce using rule 34 (array -> STRINGTYPE arrayprima .)


state 87

    (32) array -> INTTYPE arrayprima .

    ID              reduce using rule 32 (array -> INTTYPE arrayprima .)
    SEMICOLON       reduce using rule 32 (array -> INTTYPE arrayprima .)


state 88

    (33) array -> FLOATTYPE arrayprima .

    ID              reduce using rule 33 (array -> FLOATTYPE arrayprima .)
    SEMICOLON       reduce using rule 33 (array -> FLOATTYPE arrayprima .)


state 89

    (23) vars -> VAR type varsprima . SEMICOLON

    SEMICOLON       shift and go to state 127


state 90

    (24) varsprima -> ID .
    (25) varsprima -> ID . COMMA varsprima

    SEMICOLON       reduce using rule 24 (varsprima -> ID .)
    COMMA           shift and go to state 128


state 91

    (26) varsprima -> empty .

    SEMICOLON       reduce using rule 26 (varsprima -> empty .)


state 92

    (5) programfunction -> function programfunction .

    LBRACE          reduce using rule 5 (programfunction -> function programfunction .)


state 93

    (73) function -> FUNCTION type . ID LPAREN parameter RPAREN block

    ID              shift and go to state 129


state 94

    (72) function -> FUNCTION VOID . ID LPAREN parameter RPAREN block

    ID              shift and go to state 130


state 95

    (1) program -> PROGRAM MAIN SEMICOLON programvars programfunction block .

    $end            reduce using rule 1 (program -> PROGRAM MAIN SEMICOLON programvars programfunction block .)


state 96

    (90) predefined -> drawtriangle .

    ID              reduce using rule 90 (predefined -> drawtriangle .)
    IF              reduce using rule 90 (predefined -> drawtriangle .)
    PRINT           reduce using rule 90 (predefined -> drawtriangle .)
    WHILE           reduce using rule 90 (predefined -> drawtriangle .)
    RETURN          reduce using rule 90 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 90 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 90 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 90 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 90 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 90 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 90 (predefined -> drawtriangle .)
    RBRACE          reduce using rule 90 (predefined -> drawtriangle .)


state 97

    (74) return -> RETURN . singularexp2 SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 131
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 98

    (96) drawtriangle -> DRAWTRIANGLE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 132


state 99

    (81) cycle -> WHILE . LPAREN singularexp2 RPAREN block

    LPAREN          shift and go to state 133


state 100

    (79) write -> PRINT . LPAREN singularexp2 RPAREN SEMICOLON

    LPAREN          shift and go to state 134


state 101

    (16) statute -> predefined .

    ID              reduce using rule 16 (statute -> predefined .)
    IF              reduce using rule 16 (statute -> predefined .)
    PRINT           reduce using rule 16 (statute -> predefined .)
    WHILE           reduce using rule 16 (statute -> predefined .)
    RETURN          reduce using rule 16 (statute -> predefined .)
    DRAWLINE        reduce using rule 16 (statute -> predefined .)
    DRAWSQUARE      reduce using rule 16 (statute -> predefined .)
    DRAWTRIANGLE    reduce using rule 16 (statute -> predefined .)
    DRAWCIRCLE      reduce using rule 16 (statute -> predefined .)
    DRAWCURVE       reduce using rule 16 (statute -> predefined .)
    DRAWPOLYGON     reduce using rule 16 (statute -> predefined .)
    RBRACE          reduce using rule 16 (statute -> predefined .)


state 102

    (7) block -> LBRACE blockprima . RBRACE

    RBRACE          shift and go to state 135


state 103

    (97) drawcircle -> DRAWCIRCLE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 136


state 104

    (88) predefined -> drawline .

    ID              reduce using rule 88 (predefined -> drawline .)
    IF              reduce using rule 88 (predefined -> drawline .)
    PRINT           reduce using rule 88 (predefined -> drawline .)
    WHILE           reduce using rule 88 (predefined -> drawline .)
    RETURN          reduce using rule 88 (predefined -> drawline .)
    DRAWLINE        reduce using rule 88 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 88 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 88 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 88 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 88 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 88 (predefined -> drawline .)
    RBRACE          reduce using rule 88 (predefined -> drawline .)


state 105

    (12) statute -> write .

    ID              reduce using rule 12 (statute -> write .)
    IF              reduce using rule 12 (statute -> write .)
    PRINT           reduce using rule 12 (statute -> write .)
    WHILE           reduce using rule 12 (statute -> write .)
    RETURN          reduce using rule 12 (statute -> write .)
    DRAWLINE        reduce using rule 12 (statute -> write .)
    DRAWSQUARE      reduce using rule 12 (statute -> write .)
    DRAWTRIANGLE    reduce using rule 12 (statute -> write .)
    DRAWCIRCLE      reduce using rule 12 (statute -> write .)
    DRAWCURVE       reduce using rule 12 (statute -> write .)
    DRAWPOLYGON     reduce using rule 12 (statute -> write .)
    RBRACE          reduce using rule 12 (statute -> write .)


state 106

    (95) drawsquare -> DRAWSQUARE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 137


state 107

    (91) predefined -> drawcircle .

    ID              reduce using rule 91 (predefined -> drawcircle .)
    IF              reduce using rule 91 (predefined -> drawcircle .)
    PRINT           reduce using rule 91 (predefined -> drawcircle .)
    WHILE           reduce using rule 91 (predefined -> drawcircle .)
    RETURN          reduce using rule 91 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 91 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 91 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 91 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 91 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 91 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 91 (predefined -> drawcircle .)
    RBRACE          reduce using rule 91 (predefined -> drawcircle .)


state 108

    (14) statute -> cycle .

    ID              reduce using rule 14 (statute -> cycle .)
    IF              reduce using rule 14 (statute -> cycle .)
    PRINT           reduce using rule 14 (statute -> cycle .)
    WHILE           reduce using rule 14 (statute -> cycle .)
    RETURN          reduce using rule 14 (statute -> cycle .)
    DRAWLINE        reduce using rule 14 (statute -> cycle .)
    DRAWSQUARE      reduce using rule 14 (statute -> cycle .)
    DRAWTRIANGLE    reduce using rule 14 (statute -> cycle .)
    DRAWCIRCLE      reduce using rule 14 (statute -> cycle .)
    DRAWCURVE       reduce using rule 14 (statute -> cycle .)
    DRAWPOLYGON     reduce using rule 14 (statute -> cycle .)
    RBRACE          reduce using rule 14 (statute -> cycle .)


state 109

    (9) blockprima -> empty .

    RBRACE          reduce using rule 9 (blockprima -> empty .)


state 110

    (17) statute -> return .

    ID              reduce using rule 17 (statute -> return .)
    IF              reduce using rule 17 (statute -> return .)
    PRINT           reduce using rule 17 (statute -> return .)
    WHILE           reduce using rule 17 (statute -> return .)
    RETURN          reduce using rule 17 (statute -> return .)
    DRAWLINE        reduce using rule 17 (statute -> return .)
    DRAWSQUARE      reduce using rule 17 (statute -> return .)
    DRAWTRIANGLE    reduce using rule 17 (statute -> return .)
    DRAWCIRCLE      reduce using rule 17 (statute -> return .)
    DRAWCURVE       reduce using rule 17 (statute -> return .)
    DRAWPOLYGON     reduce using rule 17 (statute -> return .)
    RBRACE          reduce using rule 17 (statute -> return .)


state 111

    (93) predefined -> drawpolygon .

    ID              reduce using rule 93 (predefined -> drawpolygon .)
    IF              reduce using rule 93 (predefined -> drawpolygon .)
    PRINT           reduce using rule 93 (predefined -> drawpolygon .)
    WHILE           reduce using rule 93 (predefined -> drawpolygon .)
    RETURN          reduce using rule 93 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 93 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 93 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 93 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 93 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 93 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 93 (predefined -> drawpolygon .)
    RBRACE          reduce using rule 93 (predefined -> drawpolygon .)


state 112

    (13) statute -> read .

    ID              reduce using rule 13 (statute -> read .)
    IF              reduce using rule 13 (statute -> read .)
    PRINT           reduce using rule 13 (statute -> read .)
    WHILE           reduce using rule 13 (statute -> read .)
    RETURN          reduce using rule 13 (statute -> read .)
    DRAWLINE        reduce using rule 13 (statute -> read .)
    DRAWSQUARE      reduce using rule 13 (statute -> read .)
    DRAWTRIANGLE    reduce using rule 13 (statute -> read .)
    DRAWCIRCLE      reduce using rule 13 (statute -> read .)
    DRAWCURVE       reduce using rule 13 (statute -> read .)
    DRAWPOLYGON     reduce using rule 13 (statute -> read .)
    RBRACE          reduce using rule 13 (statute -> read .)


state 113

    (10) statute -> assignment .

    ID              reduce using rule 10 (statute -> assignment .)
    IF              reduce using rule 10 (statute -> assignment .)
    PRINT           reduce using rule 10 (statute -> assignment .)
    WHILE           reduce using rule 10 (statute -> assignment .)
    RETURN          reduce using rule 10 (statute -> assignment .)
    DRAWLINE        reduce using rule 10 (statute -> assignment .)
    DRAWSQUARE      reduce using rule 10 (statute -> assignment .)
    DRAWTRIANGLE    reduce using rule 10 (statute -> assignment .)
    DRAWCIRCLE      reduce using rule 10 (statute -> assignment .)
    DRAWCURVE       reduce using rule 10 (statute -> assignment .)
    DRAWPOLYGON     reduce using rule 10 (statute -> assignment .)
    RBRACE          reduce using rule 10 (statute -> assignment .)


state 114

    (92) predefined -> drawcurve .

    ID              reduce using rule 92 (predefined -> drawcurve .)
    IF              reduce using rule 92 (predefined -> drawcurve .)
    PRINT           reduce using rule 92 (predefined -> drawcurve .)
    WHILE           reduce using rule 92 (predefined -> drawcurve .)
    RETURN          reduce using rule 92 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 92 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 92 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 92 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 92 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 92 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 92 (predefined -> drawcurve .)
    RBRACE          reduce using rule 92 (predefined -> drawcurve .)


state 115

    (94) drawline -> DRAWLINE . LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 138


state 116

    (36) assignment -> ID . assignmentarray ASSIGN assignmentprima SEMICOLON
    (80) read -> ID . ASSIGN INPUT SEMICOLON
    (68) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (37) assignmentarray -> . empty
    (38) assignmentarray -> . LBRACKET singularexp2 RBRACKET
    (100) empty -> .

  ! shift/reduce conflict for ASSIGN resolved as shift
    ASSIGN          shift and go to state 139
    LPAREN          shift and go to state 39
    LBRACKET        shift and go to state 140

  ! ASSIGN          [ reduce using rule 100 (empty -> .) ]

    assignmentarray                shift and go to state 141
    empty                          shift and go to state 142

state 117

    (11) statute -> condition .

    ID              reduce using rule 11 (statute -> condition .)
    IF              reduce using rule 11 (statute -> condition .)
    PRINT           reduce using rule 11 (statute -> condition .)
    WHILE           reduce using rule 11 (statute -> condition .)
    RETURN          reduce using rule 11 (statute -> condition .)
    DRAWLINE        reduce using rule 11 (statute -> condition .)
    DRAWSQUARE      reduce using rule 11 (statute -> condition .)
    DRAWTRIANGLE    reduce using rule 11 (statute -> condition .)
    DRAWCIRCLE      reduce using rule 11 (statute -> condition .)
    DRAWCURVE       reduce using rule 11 (statute -> condition .)
    DRAWPOLYGON     reduce using rule 11 (statute -> condition .)
    RBRACE          reduce using rule 11 (statute -> condition .)


state 118

    (8) blockprima -> statute . blockprima
    (8) blockprima -> . statute blockprima
    (9) blockprima -> . empty
    (10) statute -> . assignment
    (11) statute -> . condition
    (12) statute -> . write
    (13) statute -> . read
    (14) statute -> . cycle
    (15) statute -> . functioncall
    (16) statute -> . predefined
    (17) statute -> . return
    (100) empty -> .
    (36) assignment -> . ID assignmentarray ASSIGN assignmentprima SEMICOLON
    (18) condition -> . IF LPAREN conditionprima RPAREN block
    (79) write -> . PRINT LPAREN singularexp2 RPAREN SEMICOLON
    (80) read -> . ID ASSIGN INPUT SEMICOLON
    (81) cycle -> . WHILE LPAREN singularexp2 RPAREN block
    (68) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (88) predefined -> . drawline
    (89) predefined -> . drawsquare
    (90) predefined -> . drawtriangle
    (91) predefined -> . drawcircle
    (92) predefined -> . drawcurve
    (93) predefined -> . drawpolygon
    (74) return -> . RETURN singularexp2 SEMICOLON
    (94) drawline -> . DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (95) drawsquare -> . DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (96) drawtriangle -> . DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (97) drawcircle -> . DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (98) drawcurve -> . DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (99) drawpolygon -> . DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 100 (empty -> .)
    ID              shift and go to state 116
    IF              shift and go to state 4
    PRINT           shift and go to state 100
    WHILE           shift and go to state 99
    RETURN          shift and go to state 97
    DRAWLINE        shift and go to state 115
    DRAWSQUARE      shift and go to state 106
    DRAWTRIANGLE    shift and go to state 98
    DRAWCIRCLE      shift and go to state 103
    DRAWCURVE       shift and go to state 120
    DRAWPOLYGON     shift and go to state 119

    drawtriangle                   shift and go to state 96
    drawcurve                      shift and go to state 114
    predefined                     shift and go to state 101
    blockprima                     shift and go to state 143
    drawline                       shift and go to state 104
    write                          shift and go to state 105
    drawcircle                     shift and go to state 107
    empty                          shift and go to state 109
    return                         shift and go to state 110
    drawpolygon                    shift and go to state 111
    read                           shift and go to state 112
    assignment                     shift and go to state 113
    condition                      shift and go to state 117
    cycle                          shift and go to state 108
    statute                        shift and go to state 118
    drawsquare                     shift and go to state 121
    functioncall                   shift and go to state 122

state 119

    (99) drawpolygon -> DRAWPOLYGON . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 144


state 120

    (98) drawcurve -> DRAWCURVE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 145


state 121

    (89) predefined -> drawsquare .

    ID              reduce using rule 89 (predefined -> drawsquare .)
    IF              reduce using rule 89 (predefined -> drawsquare .)
    PRINT           reduce using rule 89 (predefined -> drawsquare .)
    WHILE           reduce using rule 89 (predefined -> drawsquare .)
    RETURN          reduce using rule 89 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 89 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 89 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 89 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 89 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 89 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 89 (predefined -> drawsquare .)
    RBRACE          reduce using rule 89 (predefined -> drawsquare .)


state 122

    (15) statute -> functioncall .

    ID              reduce using rule 15 (statute -> functioncall .)
    IF              reduce using rule 15 (statute -> functioncall .)
    PRINT           reduce using rule 15 (statute -> functioncall .)
    WHILE           reduce using rule 15 (statute -> functioncall .)
    RETURN          reduce using rule 15 (statute -> functioncall .)
    DRAWLINE        reduce using rule 15 (statute -> functioncall .)
    DRAWSQUARE      reduce using rule 15 (statute -> functioncall .)
    DRAWTRIANGLE    reduce using rule 15 (statute -> functioncall .)
    DRAWCIRCLE      reduce using rule 15 (statute -> functioncall .)
    DRAWCURVE       reduce using rule 15 (statute -> functioncall .)
    DRAWPOLYGON     reduce using rule 15 (statute -> functioncall .)
    RBRACE          reduce using rule 15 (statute -> functioncall .)


state 123

    (67) constantprima -> LBRACKET singularexp2 RBRACKET .

    TIMES           reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    DEVIDE          reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    PLUS            reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    MINUS           reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    LESSER          reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    GREATER         reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    EQUAL           reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    NOTEQUAL        reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    LESSEROREQUAL   reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    GREATEROREQUAL  reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    AND             reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    OR              reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    RPAREN          reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    RBRACKET        reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    SEMICOLON       reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    COMMA           reduce using rule 67 (constantprima -> LBRACKET singularexp2 RBRACKET .)


state 124

    (71) funcparam -> singularexp COMMA . funcparam
    (69) funcparam -> . empty
    (70) funcparam -> . singularexp2
    (71) funcparam -> . singularexp COMMA funcparam
    (100) empty -> .
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    RPAREN          reduce using rule 100 (empty -> .)
    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    funcparam                      shift and go to state 146
    singularexp2                   shift and go to state 71
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    constant                       shift and go to state 8
    singularexp                    shift and go to state 72
    expression                     shift and go to state 24
    empty                          shift and go to state 73

state 125

    (68) functioncall -> ID LPAREN funcparam RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 147


state 126

    (35) arrayprima -> LBRACKET INT . RBRACKET

    RBRACKET        shift and go to state 148


state 127

    (23) vars -> VAR type varsprima SEMICOLON .

    VAR             reduce using rule 23 (vars -> VAR type varsprima SEMICOLON .)
    FUNCTION        reduce using rule 23 (vars -> VAR type varsprima SEMICOLON .)
    LBRACE          reduce using rule 23 (vars -> VAR type varsprima SEMICOLON .)


state 128

    (25) varsprima -> ID COMMA . varsprima
    (24) varsprima -> . ID
    (25) varsprima -> . ID COMMA varsprima
    (26) varsprima -> . empty
    (100) empty -> .

    ID              shift and go to state 90
    SEMICOLON       reduce using rule 100 (empty -> .)

    varsprima                      shift and go to state 149
    empty                          shift and go to state 91

state 129

    (73) function -> FUNCTION type ID . LPAREN parameter RPAREN block

    LPAREN          shift and go to state 150


state 130

    (72) function -> FUNCTION VOID ID . LPAREN parameter RPAREN block

    LPAREN          shift and go to state 151


state 131

    (74) return -> RETURN singularexp2 . SEMICOLON

    SEMICOLON       shift and go to state 152


state 132

    (96) drawtriangle -> DRAWTRIANGLE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 153
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 133

    (81) cycle -> WHILE LPAREN . singularexp2 RPAREN block
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 154
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 134

    (79) write -> PRINT LPAREN . singularexp2 RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 155
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 135

    (7) block -> LBRACE blockprima RBRACE .

    $end            reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    FUNCTION        reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    LBRACE          reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    ID              reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    IF              reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    PRINT           reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    WHILE           reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    RETURN          reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWLINE        reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWSQUARE      reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWTRIANGLE    reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWCIRCLE      reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWCURVE       reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    DRAWPOLYGON     reduce using rule 7 (block -> LBRACE blockprima RBRACE .)
    RBRACE          reduce using rule 7 (block -> LBRACE blockprima RBRACE .)


state 136

    (97) drawcircle -> DRAWCIRCLE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 156
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 137

    (95) drawsquare -> DRAWSQUARE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 157
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 138

    (94) drawline -> DRAWLINE LPAREN . singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 158
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 139

    (80) read -> ID ASSIGN . INPUT SEMICOLON

    INPUT           shift and go to state 159


state 140

    (38) assignmentarray -> LBRACKET . singularexp2 RBRACKET
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 160
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 141

    (36) assignment -> ID assignmentarray . ASSIGN assignmentprima SEMICOLON

    ASSIGN          shift and go to state 161


state 142

    (37) assignmentarray -> empty .

    ASSIGN          reduce using rule 37 (assignmentarray -> empty .)


state 143

    (8) blockprima -> statute blockprima .

    RBRACE          reduce using rule 8 (blockprima -> statute blockprima .)


state 144

    (99) drawpolygon -> DRAWPOLYGON LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 162
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 145

    (98) drawcurve -> DRAWCURVE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 163
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 146

    (71) funcparam -> singularexp COMMA funcparam .

    RPAREN          reduce using rule 71 (funcparam -> singularexp COMMA funcparam .)


state 147

    (68) functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .

    ID              reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    IF              reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    PRINT           reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RPAREN          reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 68 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)


state 148

    (35) arrayprima -> LBRACKET INT RBRACKET .

    ID              reduce using rule 35 (arrayprima -> LBRACKET INT RBRACKET .)
    SEMICOLON       reduce using rule 35 (arrayprima -> LBRACKET INT RBRACKET .)


state 149

    (25) varsprima -> ID COMMA varsprima .

    SEMICOLON       reduce using rule 25 (varsprima -> ID COMMA varsprima .)


state 150

    (73) function -> FUNCTION type ID LPAREN . parameter RPAREN block
    (75) parameter -> . empty
    (76) parameter -> . parameterprima
    (100) empty -> .
    (77) parameterprima -> . type ID
    (78) parameterprima -> . type ID COMMA parameterprima
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE arrayprima
    (33) array -> . FLOATTYPE arrayprima
    (34) array -> . STRINGTYPE arrayprima

    RPAREN          reduce using rule 100 (empty -> .)
    INTTYPE         shift and go to state 55
    FLOATTYPE       shift and go to state 56
    STRINGTYPE      shift and go to state 54
    BOOLEANTYPE     shift and go to state 57

    parameter                      shift and go to state 167
    type                           shift and go to state 164
    array                          shift and go to state 59
    parameterprima                 shift and go to state 166
    empty                          shift and go to state 165

state 151

    (72) function -> FUNCTION VOID ID LPAREN . parameter RPAREN block
    (75) parameter -> . empty
    (76) parameter -> . parameterprima
    (100) empty -> .
    (77) parameterprima -> . type ID
    (78) parameterprima -> . type ID COMMA parameterprima
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE arrayprima
    (33) array -> . FLOATTYPE arrayprima
    (34) array -> . STRINGTYPE arrayprima

    RPAREN          reduce using rule 100 (empty -> .)
    INTTYPE         shift and go to state 55
    FLOATTYPE       shift and go to state 56
    STRINGTYPE      shift and go to state 54
    BOOLEANTYPE     shift and go to state 57

    parameter                      shift and go to state 168
    type                           shift and go to state 164
    array                          shift and go to state 59
    parameterprima                 shift and go to state 166
    empty                          shift and go to state 165

state 152

    (74) return -> RETURN singularexp2 SEMICOLON .

    ID              reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    IF              reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    PRINT           reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    WHILE           reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    RETURN          reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWLINE        reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWSQUARE      reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWCIRCLE      reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWCURVE       reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWPOLYGON     reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)
    RBRACE          reduce using rule 74 (return -> RETURN singularexp2 SEMICOLON .)


state 153

    (96) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 169


state 154

    (81) cycle -> WHILE LPAREN singularexp2 . RPAREN block

    RPAREN          shift and go to state 170


state 155

    (79) write -> PRINT LPAREN singularexp2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 171


state 156

    (97) drawcircle -> DRAWCIRCLE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 172


state 157

    (95) drawsquare -> DRAWSQUARE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 173


state 158

    (94) drawline -> DRAWLINE LPAREN singularexp2 . COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 174


state 159

    (80) read -> ID ASSIGN INPUT . SEMICOLON

    SEMICOLON       shift and go to state 175


state 160

    (38) assignmentarray -> LBRACKET singularexp2 . RBRACKET

    RBRACKET        shift and go to state 176


state 161

    (36) assignment -> ID assignmentarray ASSIGN . assignmentprima SEMICOLON
    (39) assignmentprima -> . functioncall
    (40) assignmentprima -> . singularexp2
    (68) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    ID              shift and go to state 16
    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    singularexp2                   shift and go to state 177
    assignmentprima                shift and go to state 178
    functioncall                   shift and go to state 179
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    constant                       shift and go to state 8
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 162

    (99) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 180


state 163

    (98) drawcurve -> DRAWCURVE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 181


state 164

    (77) parameterprima -> type . ID
    (78) parameterprima -> type . ID COMMA parameterprima

    ID              shift and go to state 182


state 165

    (75) parameter -> empty .

    RPAREN          reduce using rule 75 (parameter -> empty .)


state 166

    (76) parameter -> parameterprima .

    RPAREN          reduce using rule 76 (parameter -> parameterprima .)


state 167

    (73) function -> FUNCTION type ID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 183


state 168

    (72) function -> FUNCTION VOID ID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 184


state 169

    (96) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 185
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 170

    (81) cycle -> WHILE LPAREN singularexp2 RPAREN . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 64

    block                          shift and go to state 186

state 171

    (79) write -> PRINT LPAREN singularexp2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 187


state 172

    (97) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 188
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 173

    (95) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 189
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 174

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA . singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 190
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 175

    (80) read -> ID ASSIGN INPUT SEMICOLON .

    ID              reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    IF              reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    PRINT           reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    WHILE           reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    RETURN          reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)
    RBRACE          reduce using rule 80 (read -> ID ASSIGN INPUT SEMICOLON .)


state 176

    (38) assignmentarray -> LBRACKET singularexp2 RBRACKET .

    ASSIGN          reduce using rule 38 (assignmentarray -> LBRACKET singularexp2 RBRACKET .)


state 177

    (40) assignmentprima -> singularexp2 .

    SEMICOLON       reduce using rule 40 (assignmentprima -> singularexp2 .)


state 178

    (36) assignment -> ID assignmentarray ASSIGN assignmentprima . SEMICOLON

    SEMICOLON       shift and go to state 191


state 179

    (39) assignmentprima -> functioncall .

    SEMICOLON       reduce using rule 39 (assignmentprima -> functioncall .)


state 180

    (99) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 192
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 181

    (98) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 193
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 182

    (77) parameterprima -> type ID .
    (78) parameterprima -> type ID . COMMA parameterprima

    RPAREN          reduce using rule 77 (parameterprima -> type ID .)
    COMMA           shift and go to state 194


state 183

    (73) function -> FUNCTION type ID LPAREN parameter RPAREN . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 64

    block                          shift and go to state 195

state 184

    (72) function -> FUNCTION VOID ID LPAREN parameter RPAREN . block
    (7) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 64

    block                          shift and go to state 196

state 185

    (96) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 197


state 186

    (81) cycle -> WHILE LPAREN singularexp2 RPAREN block .

    ID              reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    IF              reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    PRINT           reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    WHILE           reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    RETURN          reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWLINE        reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWSQUARE      reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWTRIANGLE    reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWCIRCLE      reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWCURVE       reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWPOLYGON     reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    RBRACE          reduce using rule 81 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)


state 187

    (79) write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .

    ID              reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    IF              reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    PRINT           reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    RETURN          reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 79 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)


state 188

    (97) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 198


state 189

    (95) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 199


state 190

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 . COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 200


state 191

    (36) assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .

    ID              reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    IF              reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    PRINT           reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    WHILE           reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    RETURN          reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    DRAWLINE        reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    DRAWSQUARE      reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    DRAWCIRCLE      reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    DRAWCURVE       reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    DRAWPOLYGON     reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)
    RBRACE          reduce using rule 36 (assignment -> ID assignmentarray ASSIGN assignmentprima SEMICOLON .)


state 192

    (99) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 201


state 193

    (98) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 202


state 194

    (78) parameterprima -> type ID COMMA . parameterprima
    (77) parameterprima -> . type ID
    (78) parameterprima -> . type ID COMMA parameterprima
    (27) type -> . INTTYPE
    (28) type -> . FLOATTYPE
    (29) type -> . STRINGTYPE
    (30) type -> . BOOLEANTYPE
    (31) type -> . array
    (32) array -> . INTTYPE arrayprima
    (33) array -> . FLOATTYPE arrayprima
    (34) array -> . STRINGTYPE arrayprima

    INTTYPE         shift and go to state 55
    FLOATTYPE       shift and go to state 56
    STRINGTYPE      shift and go to state 54
    BOOLEANTYPE     shift and go to state 57

    parameterprima                 shift and go to state 203
    array                          shift and go to state 59
    type                           shift and go to state 164

state 195

    (73) function -> FUNCTION type ID LPAREN parameter RPAREN block .

    FUNCTION        reduce using rule 73 (function -> FUNCTION type ID LPAREN parameter RPAREN block .)
    LBRACE          reduce using rule 73 (function -> FUNCTION type ID LPAREN parameter RPAREN block .)


state 196

    (72) function -> FUNCTION VOID ID LPAREN parameter RPAREN block .

    FUNCTION        reduce using rule 72 (function -> FUNCTION VOID ID LPAREN parameter RPAREN block .)
    LBRACE          reduce using rule 72 (function -> FUNCTION VOID ID LPAREN parameter RPAREN block .)


state 197

    (96) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (82) color -> . BLUE
    (83) color -> . GREEN
    (84) color -> . RED
    (85) color -> . YELLOW
    (86) color -> . BROWN
    (87) color -> . BLACK

    BLUE            shift and go to state 204
    GREEN           shift and go to state 208
    RED             shift and go to state 210
    YELLOW          shift and go to state 207
    BROWN           shift and go to state 205
    BLACK           shift and go to state 209

    color                          shift and go to state 206

state 198

    (97) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (82) color -> . BLUE
    (83) color -> . GREEN
    (84) color -> . RED
    (85) color -> . YELLOW
    (86) color -> . BROWN
    (87) color -> . BLACK

    BLUE            shift and go to state 204
    GREEN           shift and go to state 208
    RED             shift and go to state 210
    YELLOW          shift and go to state 207
    BROWN           shift and go to state 205
    BLACK           shift and go to state 209

    color                          shift and go to state 211

state 199

    (95) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (82) color -> . BLUE
    (83) color -> . GREEN
    (84) color -> . RED
    (85) color -> . YELLOW
    (86) color -> . BROWN
    (87) color -> . BLACK

    BLUE            shift and go to state 204
    GREEN           shift and go to state 208
    RED             shift and go to state 210
    YELLOW          shift and go to state 207
    BROWN           shift and go to state 205
    BLACK           shift and go to state 209

    color                          shift and go to state 212

state 200

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 213
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 201

    (99) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (82) color -> . BLUE
    (83) color -> . GREEN
    (84) color -> . RED
    (85) color -> . YELLOW
    (86) color -> . BROWN
    (87) color -> . BLACK

    BLUE            shift and go to state 204
    GREEN           shift and go to state 208
    RED             shift and go to state 210
    YELLOW          shift and go to state 207
    BROWN           shift and go to state 205
    BLACK           shift and go to state 209

    color                          shift and go to state 214

state 202

    (98) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (82) color -> . BLUE
    (83) color -> . GREEN
    (84) color -> . RED
    (85) color -> . YELLOW
    (86) color -> . BROWN
    (87) color -> . BLACK

    BLUE            shift and go to state 204
    GREEN           shift and go to state 208
    RED             shift and go to state 210
    YELLOW          shift and go to state 207
    BROWN           shift and go to state 205
    BLACK           shift and go to state 209

    color                          shift and go to state 215

state 203

    (78) parameterprima -> type ID COMMA parameterprima .

    RPAREN          reduce using rule 78 (parameterprima -> type ID COMMA parameterprima .)


state 204

    (82) color -> BLUE .

    RPAREN          reduce using rule 82 (color -> BLUE .)


state 205

    (86) color -> BROWN .

    RPAREN          reduce using rule 86 (color -> BROWN .)


state 206

    (96) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 216


state 207

    (85) color -> YELLOW .

    RPAREN          reduce using rule 85 (color -> YELLOW .)


state 208

    (83) color -> GREEN .

    RPAREN          reduce using rule 83 (color -> GREEN .)


state 209

    (87) color -> BLACK .

    RPAREN          reduce using rule 87 (color -> BLACK .)


state 210

    (84) color -> RED .

    RPAREN          reduce using rule 84 (color -> RED .)


state 211

    (97) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 217


state 212

    (95) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 218


state 213

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 219


state 214

    (99) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 220


state 215

    (98) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 221


state 216

    (96) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 222


state 217

    (97) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 223


state 218

    (95) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 219

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (41) singularexp2 -> . singularexp
    (42) singularexp2 -> . NOT singularexp
    (43) singularexp -> . singularexp AND expression
    (44) singularexp -> . singularexp OR expression
    (45) singularexp -> . expression
    (46) expression -> . expression LESSER exp
    (47) expression -> . expression GREATER exp
    (48) expression -> . expression EQUAL exp
    (49) expression -> . expression NOTEQUAL exp
    (50) expression -> . expression LESSEROREQUAL exp
    (51) expression -> . expression GREATEROREQUAL exp
    (52) expression -> . exp
    (53) exp -> . exp PLUS term
    (54) exp -> . exp MINUS term
    (55) exp -> . term
    (56) term -> . term TIMES factor
    (57) term -> . term DEVIDE factor
    (58) term -> . factor
    (59) factor -> . LPAREN singularexp2 RPAREN
    (60) factor -> . PLUS constant
    (61) factor -> . MINUS constant
    (62) factor -> . constant
    (63) constant -> . ID constantprima
    (64) constant -> . FLOAT
    (65) constant -> . INT

    NOT             shift and go to state 36
    LPAREN          shift and go to state 15
    PLUS            shift and go to state 13
    MINUS           shift and go to state 12
    ID              shift and go to state 33
    FLOAT           shift and go to state 19
    INT             shift and go to state 18

    term                           shift and go to state 17
    constant                       shift and go to state 8
    singularexp2                   shift and go to state 225
    exp                            shift and go to state 22
    factor                         shift and go to state 14
    singularexp                    shift and go to state 11
    expression                     shift and go to state 24

state 220

    (99) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 221

    (98) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 227


state 222

    (96) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 96 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 223

    (97) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 97 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 224

    (95) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 95 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 225

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 228


state 226

    (99) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 99 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 227

    (98) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 98 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 228

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (82) color -> . BLUE
    (83) color -> . GREEN
    (84) color -> . RED
    (85) color -> . YELLOW
    (86) color -> . BROWN
    (87) color -> . BLACK

    BLUE            shift and go to state 204
    GREEN           shift and go to state 208
    RED             shift and go to state 210
    YELLOW          shift and go to state 207
    BROWN           shift and go to state 205
    BLACK           shift and go to state 209

    color                          shift and go to state 229

state 229

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 230


state 230

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 231

    (94) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 94 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASSIGN in state 116 resolved as shift
WARNING: reduce/reduce conflict in state 45 resolved using rule (singularexp2 -> singularexp)
WARNING: rejected rule (singularexp2 -> NOT singularexp) in state 45
