Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    BREAK
    ELSE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID add_global_function SEMICOLON vars function main
Rule 2     program -> sexpression
Rule 3     add_global_function -> <empty>
Rule 4     main -> INTTYPE MAIN LPAREN RPAREN switch_to_global_scope block
Rule 5     switch_to_global_scope -> <empty>
Rule 6     block -> LBRACE blockprima RBRACE
Rule 7     blockprima -> statute blockprima
Rule 8     blockprima -> empty
Rule 9     statute -> assignment
Rule 10    statute -> condition
Rule 11    statute -> write
Rule 12    statute -> read
Rule 13    statute -> cycle
Rule 14    statute -> functioncall
Rule 15    statute -> predefined
Rule 16    statute -> return
Rule 17    condition -> IF LPAREN sexpression RPAREN do_condition_operation block
Rule 18    do_condition_operation -> <empty>
Rule 19    conditionprima -> condprimaaux
Rule 20    conditionprima -> NOT condprimaaux
Rule 21    condprimaaux -> functioncall
Rule 22    condprimaaux -> sexpression
Rule 23    vars -> VAR type ID array store_variable SEMICOLON vars
Rule 24    vars -> empty
Rule 25    store_variable -> <empty>
Rule 26    array -> LBRACKET sexpression RBRACKET
Rule 27    array -> empty
Rule 28    type -> INTTYPE
Rule 29    type -> FLOATTYPE
Rule 30    type -> STRINGTYPE
Rule 31    type -> BOOLTYPE
Rule 32    assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
Rule 33    push_id_operand -> <empty>
Rule 34    push_operator -> <empty>
Rule 35    assignmentarray -> empty
Rule 36    assignmentarray -> LBRACKET sexpression RBRACKET
Rule 37    assignmentprima -> functioncall
Rule 38    assignmentprima -> sexpression
Rule 39    sexpression -> negation expression do_not_operation
Rule 40    negation -> NOT push_operator
Rule 41    negation -> empty
Rule 42    do_not_operation -> <empty>
Rule 43    expression -> expression relationaloperators push_operator exp do_relational_operation
Rule 44    expression -> exp
Rule 45    relationaloperators -> LESSER
Rule 46    relationaloperators -> GREATER
Rule 47    relationaloperators -> EQUAL
Rule 48    relationaloperators -> NOTEQUAL
Rule 49    relationaloperators -> LESSEROREQUAL
Rule 50    relationaloperators -> GREATEROREQUAL
Rule 51    relationaloperators -> AND
Rule 52    relationaloperators -> OR
Rule 53    do_relational_operation -> <empty>
Rule 54    exp -> exp mathoperators1 push_operator term do_math_operation1
Rule 55    exp -> term
Rule 56    mathoperators1 -> PLUS
Rule 57    mathoperators1 -> MINUS
Rule 58    do_math_operation1 -> <empty>
Rule 59    term -> term mathoperators2 push_operator factor do_math_operation2
Rule 60    term -> factor
Rule 61    mathoperators2 -> TIMES
Rule 62    mathoperators2 -> DEVIDE
Rule 63    do_math_operation2 -> <empty>
Rule 64    factor -> LPAREN sexpression RPAREN
Rule 65    factor -> varConst
Rule 66    varConst -> ID push_id_operand
Rule 67    varConst -> FLOAT push_float_operand
Rule 68    varConst -> INT push_int_operand
Rule 69    varConst -> bool push_bool_operand
Rule 70    varConst -> STRING push_string_operand
Rule 71    constantprima -> empty
Rule 72    constantprima -> LBRACKET sexpression RBRACKET
Rule 73    bool -> TRUE
Rule 74    bool -> FALSE
Rule 75    push_float_operand -> <empty>
Rule 76    push_int_operand -> <empty>
Rule 77    push_bool_operand -> <empty>
Rule 78    push_string_operand -> <empty>
Rule 79    functioncall -> ID LPAREN funcparam RPAREN SEMICOLON
Rule 80    funcparam -> empty
Rule 81    funcparam -> sexpression
Rule 82    funcparam -> sexpression COMMA funcparam
Rule 83    function -> FUNCTION functiontype ID LPAREN parameter RPAREN block function
Rule 84    function -> empty
Rule 85    functiontype -> VOID
Rule 86    functiontype -> type
Rule 87    return -> RETURN sexpression SEMICOLON
Rule 88    parameter -> empty
Rule 89    parameter -> parameterprima
Rule 90    parameterprima -> type ID
Rule 91    parameterprima -> type ID COMMA parameterprima
Rule 92    write -> PRINT LPAREN sexpression RPAREN SEMICOLON
Rule 93    read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
Rule 94    cycle -> WHILE LPAREN sexpression RPAREN block
Rule 95    color -> BLUE
Rule 96    color -> GREEN
Rule 97    color -> RED
Rule 98    color -> YELLOW
Rule 99    color -> BROWN
Rule 100   color -> BLACK
Rule 101   predefined -> drawline
Rule 102   predefined -> drawsquare
Rule 103   predefined -> drawtriangle
Rule 104   predefined -> drawcircle
Rule 105   predefined -> drawcurve
Rule 106   predefined -> drawpolygon
Rule 107   drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 108   drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 109   drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 110   drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 111   drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 112   drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
Rule 113   empty -> <empty>

Terminals, with rules where they appear

AND                  : 51
ASSIGN               : 32 93
BLACK                : 100
BLUE                 : 95
BOOLTYPE             : 31
BREAK                : 
BROWN                : 99
COLON                : 
COMMA                : 82 91 107 107 107 107 108 108 109 109 110 110 111 111 112 112
DEVIDE               : 62
DRAWCIRCLE           : 110
DRAWCURVE            : 111
DRAWLINE             : 107
DRAWPOLYGON          : 112
DRAWSQUARE           : 108
DRAWTRIANGLE         : 109
ELSE                 : 
EQUAL                : 47
FALSE                : 74
FLOAT                : 67
FLOATTYPE            : 29
FUNCTION             : 83
GREATER              : 46
GREATEROREQUAL       : 50
GREEN                : 96
ID                   : 1 23 32 66 79 83 90 91 93
IF                   : 17
INPUT                : 93
INT                  : 68
INTTYPE              : 4 28
LBRACE               : 6
LBRACKET             : 26 36 72
LESSER               : 45
LESSEROREQUAL        : 49
LPAREN               : 4 17 64 79 83 92 94 107 108 109 110 111 112
MAIN                 : 4
MINUS                : 57
NOT                  : 20 40
NOTEQUAL             : 48
OR                   : 52
PLUS                 : 56
PRINT                : 92
PROGRAM              : 1
RBRACE               : 6
RBRACKET             : 26 36 72
RED                  : 97
RETURN               : 87
RPAREN               : 4 17 64 79 83 92 94 107 108 109 110 111 112
SEMICOLON            : 1 23 32 79 87 92 93 107 108 109 110 111 112
STRING               : 70
STRINGTYPE           : 30
TIMES                : 61
TRUE                 : 73
VAR                  : 23
VOID                 : 85
WHILE                : 94
YELLOW               : 98
error                : 

Nonterminals, with rules where they appear

add_global_function  : 1
array                : 23
assignment           : 9
assignmentarray      : 
assignmentprima      : 
block                : 4 17 83 94
blockprima           : 6 7
bool                 : 69
color                : 107 108 109 110 111 112
condition            : 10
conditionprima       : 
condprimaaux         : 19 20
constantprima        : 
cycle                : 13
do_condition_operation : 17
do_math_operation1   : 54
do_math_operation2   : 59
do_not_operation     : 39
do_relational_operation : 43
drawcircle           : 104
drawcurve            : 105
drawline             : 101
drawpolygon          : 106
drawsquare           : 102
drawtriangle         : 103
empty                : 8 24 27 35 41 71 80 84 88
exp                  : 43 44 54
expression           : 39 43
factor               : 59 60
funcparam            : 79 82
function             : 1 83
functioncall         : 14 21 37
functiontype         : 83
main                 : 1
mathoperators1       : 54
mathoperators2       : 59
negation             : 39
parameter            : 83
parameterprima       : 89 91
predefined           : 15
program              : 0
push_bool_operand    : 69
push_float_operand   : 67
push_id_operand      : 32 66 93
push_int_operand     : 68
push_operator        : 32 40 43 54 59 93
push_string_operand  : 70
read                 : 12
relationaloperators  : 43
return               : 16
sexpression          : 2 17 22 26 32 36 38 64 72 81 82 87 92 94 107 107 107 107 108 108 109 109 110 110 111 111 112 112
statute              : 7
store_variable       : 23
switch_to_global_scope : 4
term                 : 54 55 59
type                 : 23 86 90 91
varConst             : 65
vars                 : 1 23
write                : 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID add_global_function SEMICOLON vars function main
    (2) program -> . sexpression
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    PROGRAM         shift and go to state 4
    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 3
    program                        shift and go to state 1
    empty                          shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (39) sexpression -> negation . expression do_not_operation
    (43) expression -> . expression relationaloperators push_operator exp do_relational_operation
    (44) expression -> . exp
    (54) exp -> . exp mathoperators1 push_operator term do_math_operation1
    (55) exp -> . term
    (59) term -> . term mathoperators2 push_operator factor do_math_operation2
    (60) term -> . factor
    (64) factor -> . LPAREN sexpression RPAREN
    (65) factor -> . varConst
    (66) varConst -> . ID push_id_operand
    (67) varConst -> . FLOAT push_float_operand
    (68) varConst -> . INT push_int_operand
    (69) varConst -> . bool push_bool_operand
    (70) varConst -> . STRING push_string_operand
    (73) bool -> . TRUE
    (74) bool -> . FALSE

    LPAREN          shift and go to state 13
    ID              shift and go to state 15
    FLOAT           shift and go to state 18
    INT             shift and go to state 17
    STRING          shift and go to state 9
    TRUE            shift and go to state 8
    FALSE           shift and go to state 14

    term                           shift and go to state 16
    varConst                       shift and go to state 7
    bool                           shift and go to state 10
    exp                            shift and go to state 12
    factor                         shift and go to state 11
    expression                     shift and go to state 19

state 3

    (2) program -> sexpression .

    $end            reduce using rule 2 (program -> sexpression .)


state 4

    (1) program -> PROGRAM . ID add_global_function SEMICOLON vars function main

    ID              shift and go to state 20


state 5

    (40) negation -> NOT . push_operator
    (34) push_operator -> .

    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 21

state 6

    (41) negation -> empty .

    LPAREN          reduce using rule 41 (negation -> empty .)
    ID              reduce using rule 41 (negation -> empty .)
    FLOAT           reduce using rule 41 (negation -> empty .)
    INT             reduce using rule 41 (negation -> empty .)
    STRING          reduce using rule 41 (negation -> empty .)
    TRUE            reduce using rule 41 (negation -> empty .)
    FALSE           reduce using rule 41 (negation -> empty .)


state 7

    (65) factor -> varConst .

    TIMES           reduce using rule 65 (factor -> varConst .)
    DEVIDE          reduce using rule 65 (factor -> varConst .)
    PLUS            reduce using rule 65 (factor -> varConst .)
    MINUS           reduce using rule 65 (factor -> varConst .)
    LESSER          reduce using rule 65 (factor -> varConst .)
    GREATER         reduce using rule 65 (factor -> varConst .)
    EQUAL           reduce using rule 65 (factor -> varConst .)
    NOTEQUAL        reduce using rule 65 (factor -> varConst .)
    LESSEROREQUAL   reduce using rule 65 (factor -> varConst .)
    GREATEROREQUAL  reduce using rule 65 (factor -> varConst .)
    AND             reduce using rule 65 (factor -> varConst .)
    OR              reduce using rule 65 (factor -> varConst .)
    $end            reduce using rule 65 (factor -> varConst .)
    RPAREN          reduce using rule 65 (factor -> varConst .)
    RBRACKET        reduce using rule 65 (factor -> varConst .)
    SEMICOLON       reduce using rule 65 (factor -> varConst .)
    COMMA           reduce using rule 65 (factor -> varConst .)


state 8

    (73) bool -> TRUE .

    TIMES           reduce using rule 73 (bool -> TRUE .)
    DEVIDE          reduce using rule 73 (bool -> TRUE .)
    PLUS            reduce using rule 73 (bool -> TRUE .)
    MINUS           reduce using rule 73 (bool -> TRUE .)
    LESSER          reduce using rule 73 (bool -> TRUE .)
    GREATER         reduce using rule 73 (bool -> TRUE .)
    EQUAL           reduce using rule 73 (bool -> TRUE .)
    NOTEQUAL        reduce using rule 73 (bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 73 (bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 73 (bool -> TRUE .)
    AND             reduce using rule 73 (bool -> TRUE .)
    OR              reduce using rule 73 (bool -> TRUE .)
    $end            reduce using rule 73 (bool -> TRUE .)
    RPAREN          reduce using rule 73 (bool -> TRUE .)
    RBRACKET        reduce using rule 73 (bool -> TRUE .)
    SEMICOLON       reduce using rule 73 (bool -> TRUE .)
    COMMA           reduce using rule 73 (bool -> TRUE .)


state 9

    (70) varConst -> STRING . push_string_operand
    (78) push_string_operand -> .

    TIMES           reduce using rule 78 (push_string_operand -> .)
    DEVIDE          reduce using rule 78 (push_string_operand -> .)
    PLUS            reduce using rule 78 (push_string_operand -> .)
    MINUS           reduce using rule 78 (push_string_operand -> .)
    LESSER          reduce using rule 78 (push_string_operand -> .)
    GREATER         reduce using rule 78 (push_string_operand -> .)
    EQUAL           reduce using rule 78 (push_string_operand -> .)
    NOTEQUAL        reduce using rule 78 (push_string_operand -> .)
    LESSEROREQUAL   reduce using rule 78 (push_string_operand -> .)
    GREATEROREQUAL  reduce using rule 78 (push_string_operand -> .)
    AND             reduce using rule 78 (push_string_operand -> .)
    OR              reduce using rule 78 (push_string_operand -> .)
    $end            reduce using rule 78 (push_string_operand -> .)
    RPAREN          reduce using rule 78 (push_string_operand -> .)
    RBRACKET        reduce using rule 78 (push_string_operand -> .)
    SEMICOLON       reduce using rule 78 (push_string_operand -> .)
    COMMA           reduce using rule 78 (push_string_operand -> .)

    push_string_operand            shift and go to state 22

state 10

    (69) varConst -> bool . push_bool_operand
    (77) push_bool_operand -> .

    TIMES           reduce using rule 77 (push_bool_operand -> .)
    DEVIDE          reduce using rule 77 (push_bool_operand -> .)
    PLUS            reduce using rule 77 (push_bool_operand -> .)
    MINUS           reduce using rule 77 (push_bool_operand -> .)
    LESSER          reduce using rule 77 (push_bool_operand -> .)
    GREATER         reduce using rule 77 (push_bool_operand -> .)
    EQUAL           reduce using rule 77 (push_bool_operand -> .)
    NOTEQUAL        reduce using rule 77 (push_bool_operand -> .)
    LESSEROREQUAL   reduce using rule 77 (push_bool_operand -> .)
    GREATEROREQUAL  reduce using rule 77 (push_bool_operand -> .)
    AND             reduce using rule 77 (push_bool_operand -> .)
    OR              reduce using rule 77 (push_bool_operand -> .)
    $end            reduce using rule 77 (push_bool_operand -> .)
    RPAREN          reduce using rule 77 (push_bool_operand -> .)
    RBRACKET        reduce using rule 77 (push_bool_operand -> .)
    SEMICOLON       reduce using rule 77 (push_bool_operand -> .)
    COMMA           reduce using rule 77 (push_bool_operand -> .)

    push_bool_operand              shift and go to state 23

state 11

    (60) term -> factor .

    TIMES           reduce using rule 60 (term -> factor .)
    DEVIDE          reduce using rule 60 (term -> factor .)
    PLUS            reduce using rule 60 (term -> factor .)
    MINUS           reduce using rule 60 (term -> factor .)
    LESSER          reduce using rule 60 (term -> factor .)
    GREATER         reduce using rule 60 (term -> factor .)
    EQUAL           reduce using rule 60 (term -> factor .)
    NOTEQUAL        reduce using rule 60 (term -> factor .)
    LESSEROREQUAL   reduce using rule 60 (term -> factor .)
    GREATEROREQUAL  reduce using rule 60 (term -> factor .)
    AND             reduce using rule 60 (term -> factor .)
    OR              reduce using rule 60 (term -> factor .)
    $end            reduce using rule 60 (term -> factor .)
    RPAREN          reduce using rule 60 (term -> factor .)
    RBRACKET        reduce using rule 60 (term -> factor .)
    SEMICOLON       reduce using rule 60 (term -> factor .)
    COMMA           reduce using rule 60 (term -> factor .)


state 12

    (44) expression -> exp .
    (54) exp -> exp . mathoperators1 push_operator term do_math_operation1
    (56) mathoperators1 -> . PLUS
    (57) mathoperators1 -> . MINUS

    LESSER          reduce using rule 44 (expression -> exp .)
    GREATER         reduce using rule 44 (expression -> exp .)
    EQUAL           reduce using rule 44 (expression -> exp .)
    NOTEQUAL        reduce using rule 44 (expression -> exp .)
    LESSEROREQUAL   reduce using rule 44 (expression -> exp .)
    GREATEROREQUAL  reduce using rule 44 (expression -> exp .)
    AND             reduce using rule 44 (expression -> exp .)
    OR              reduce using rule 44 (expression -> exp .)
    $end            reduce using rule 44 (expression -> exp .)
    RPAREN          reduce using rule 44 (expression -> exp .)
    RBRACKET        reduce using rule 44 (expression -> exp .)
    SEMICOLON       reduce using rule 44 (expression -> exp .)
    COMMA           reduce using rule 44 (expression -> exp .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26

    mathoperators1                 shift and go to state 25

state 13

    (64) factor -> LPAREN . sexpression RPAREN
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 27
    empty                          shift and go to state 6

state 14

    (74) bool -> FALSE .

    TIMES           reduce using rule 74 (bool -> FALSE .)
    DEVIDE          reduce using rule 74 (bool -> FALSE .)
    PLUS            reduce using rule 74 (bool -> FALSE .)
    MINUS           reduce using rule 74 (bool -> FALSE .)
    LESSER          reduce using rule 74 (bool -> FALSE .)
    GREATER         reduce using rule 74 (bool -> FALSE .)
    EQUAL           reduce using rule 74 (bool -> FALSE .)
    NOTEQUAL        reduce using rule 74 (bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 74 (bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 74 (bool -> FALSE .)
    AND             reduce using rule 74 (bool -> FALSE .)
    OR              reduce using rule 74 (bool -> FALSE .)
    $end            reduce using rule 74 (bool -> FALSE .)
    RPAREN          reduce using rule 74 (bool -> FALSE .)
    RBRACKET        reduce using rule 74 (bool -> FALSE .)
    SEMICOLON       reduce using rule 74 (bool -> FALSE .)
    COMMA           reduce using rule 74 (bool -> FALSE .)


state 15

    (66) varConst -> ID . push_id_operand
    (33) push_id_operand -> .

    TIMES           reduce using rule 33 (push_id_operand -> .)
    DEVIDE          reduce using rule 33 (push_id_operand -> .)
    PLUS            reduce using rule 33 (push_id_operand -> .)
    MINUS           reduce using rule 33 (push_id_operand -> .)
    LESSER          reduce using rule 33 (push_id_operand -> .)
    GREATER         reduce using rule 33 (push_id_operand -> .)
    EQUAL           reduce using rule 33 (push_id_operand -> .)
    NOTEQUAL        reduce using rule 33 (push_id_operand -> .)
    LESSEROREQUAL   reduce using rule 33 (push_id_operand -> .)
    GREATEROREQUAL  reduce using rule 33 (push_id_operand -> .)
    AND             reduce using rule 33 (push_id_operand -> .)
    OR              reduce using rule 33 (push_id_operand -> .)
    $end            reduce using rule 33 (push_id_operand -> .)
    RPAREN          reduce using rule 33 (push_id_operand -> .)
    RBRACKET        reduce using rule 33 (push_id_operand -> .)
    SEMICOLON       reduce using rule 33 (push_id_operand -> .)
    COMMA           reduce using rule 33 (push_id_operand -> .)

    push_id_operand                shift and go to state 28

state 16

    (55) exp -> term .
    (59) term -> term . mathoperators2 push_operator factor do_math_operation2
    (61) mathoperators2 -> . TIMES
    (62) mathoperators2 -> . DEVIDE

    PLUS            reduce using rule 55 (exp -> term .)
    MINUS           reduce using rule 55 (exp -> term .)
    LESSER          reduce using rule 55 (exp -> term .)
    GREATER         reduce using rule 55 (exp -> term .)
    EQUAL           reduce using rule 55 (exp -> term .)
    NOTEQUAL        reduce using rule 55 (exp -> term .)
    LESSEROREQUAL   reduce using rule 55 (exp -> term .)
    GREATEROREQUAL  reduce using rule 55 (exp -> term .)
    AND             reduce using rule 55 (exp -> term .)
    OR              reduce using rule 55 (exp -> term .)
    $end            reduce using rule 55 (exp -> term .)
    RPAREN          reduce using rule 55 (exp -> term .)
    RBRACKET        reduce using rule 55 (exp -> term .)
    SEMICOLON       reduce using rule 55 (exp -> term .)
    COMMA           reduce using rule 55 (exp -> term .)
    TIMES           shift and go to state 30
    DEVIDE          shift and go to state 29

    mathoperators2                 shift and go to state 31

state 17

    (68) varConst -> INT . push_int_operand
    (76) push_int_operand -> .

    TIMES           reduce using rule 76 (push_int_operand -> .)
    DEVIDE          reduce using rule 76 (push_int_operand -> .)
    PLUS            reduce using rule 76 (push_int_operand -> .)
    MINUS           reduce using rule 76 (push_int_operand -> .)
    LESSER          reduce using rule 76 (push_int_operand -> .)
    GREATER         reduce using rule 76 (push_int_operand -> .)
    EQUAL           reduce using rule 76 (push_int_operand -> .)
    NOTEQUAL        reduce using rule 76 (push_int_operand -> .)
    LESSEROREQUAL   reduce using rule 76 (push_int_operand -> .)
    GREATEROREQUAL  reduce using rule 76 (push_int_operand -> .)
    AND             reduce using rule 76 (push_int_operand -> .)
    OR              reduce using rule 76 (push_int_operand -> .)
    $end            reduce using rule 76 (push_int_operand -> .)
    RPAREN          reduce using rule 76 (push_int_operand -> .)
    RBRACKET        reduce using rule 76 (push_int_operand -> .)
    SEMICOLON       reduce using rule 76 (push_int_operand -> .)
    COMMA           reduce using rule 76 (push_int_operand -> .)

    push_int_operand               shift and go to state 32

state 18

    (67) varConst -> FLOAT . push_float_operand
    (75) push_float_operand -> .

    TIMES           reduce using rule 75 (push_float_operand -> .)
    DEVIDE          reduce using rule 75 (push_float_operand -> .)
    PLUS            reduce using rule 75 (push_float_operand -> .)
    MINUS           reduce using rule 75 (push_float_operand -> .)
    LESSER          reduce using rule 75 (push_float_operand -> .)
    GREATER         reduce using rule 75 (push_float_operand -> .)
    EQUAL           reduce using rule 75 (push_float_operand -> .)
    NOTEQUAL        reduce using rule 75 (push_float_operand -> .)
    LESSEROREQUAL   reduce using rule 75 (push_float_operand -> .)
    GREATEROREQUAL  reduce using rule 75 (push_float_operand -> .)
    AND             reduce using rule 75 (push_float_operand -> .)
    OR              reduce using rule 75 (push_float_operand -> .)
    $end            reduce using rule 75 (push_float_operand -> .)
    RPAREN          reduce using rule 75 (push_float_operand -> .)
    RBRACKET        reduce using rule 75 (push_float_operand -> .)
    SEMICOLON       reduce using rule 75 (push_float_operand -> .)
    COMMA           reduce using rule 75 (push_float_operand -> .)

    push_float_operand             shift and go to state 33

state 19

    (39) sexpression -> negation expression . do_not_operation
    (43) expression -> expression . relationaloperators push_operator exp do_relational_operation
    (42) do_not_operation -> .
    (45) relationaloperators -> . LESSER
    (46) relationaloperators -> . GREATER
    (47) relationaloperators -> . EQUAL
    (48) relationaloperators -> . NOTEQUAL
    (49) relationaloperators -> . LESSEROREQUAL
    (50) relationaloperators -> . GREATEROREQUAL
    (51) relationaloperators -> . AND
    (52) relationaloperators -> . OR

    $end            reduce using rule 42 (do_not_operation -> .)
    RPAREN          reduce using rule 42 (do_not_operation -> .)
    RBRACKET        reduce using rule 42 (do_not_operation -> .)
    SEMICOLON       reduce using rule 42 (do_not_operation -> .)
    COMMA           reduce using rule 42 (do_not_operation -> .)
    LESSER          shift and go to state 41
    GREATER         shift and go to state 37
    EQUAL           shift and go to state 40
    NOTEQUAL        shift and go to state 38
    LESSEROREQUAL   shift and go to state 39
    GREATEROREQUAL  shift and go to state 42
    AND             shift and go to state 34
    OR              shift and go to state 43

    relationaloperators            shift and go to state 35
    do_not_operation               shift and go to state 36

state 20

    (1) program -> PROGRAM ID . add_global_function SEMICOLON vars function main
    (3) add_global_function -> .

    SEMICOLON       reduce using rule 3 (add_global_function -> .)

    add_global_function            shift and go to state 44

state 21

    (40) negation -> NOT push_operator .

    LPAREN          reduce using rule 40 (negation -> NOT push_operator .)
    ID              reduce using rule 40 (negation -> NOT push_operator .)
    FLOAT           reduce using rule 40 (negation -> NOT push_operator .)
    INT             reduce using rule 40 (negation -> NOT push_operator .)
    STRING          reduce using rule 40 (negation -> NOT push_operator .)
    TRUE            reduce using rule 40 (negation -> NOT push_operator .)
    FALSE           reduce using rule 40 (negation -> NOT push_operator .)


state 22

    (70) varConst -> STRING push_string_operand .

    TIMES           reduce using rule 70 (varConst -> STRING push_string_operand .)
    DEVIDE          reduce using rule 70 (varConst -> STRING push_string_operand .)
    PLUS            reduce using rule 70 (varConst -> STRING push_string_operand .)
    MINUS           reduce using rule 70 (varConst -> STRING push_string_operand .)
    LESSER          reduce using rule 70 (varConst -> STRING push_string_operand .)
    GREATER         reduce using rule 70 (varConst -> STRING push_string_operand .)
    EQUAL           reduce using rule 70 (varConst -> STRING push_string_operand .)
    NOTEQUAL        reduce using rule 70 (varConst -> STRING push_string_operand .)
    LESSEROREQUAL   reduce using rule 70 (varConst -> STRING push_string_operand .)
    GREATEROREQUAL  reduce using rule 70 (varConst -> STRING push_string_operand .)
    AND             reduce using rule 70 (varConst -> STRING push_string_operand .)
    OR              reduce using rule 70 (varConst -> STRING push_string_operand .)
    $end            reduce using rule 70 (varConst -> STRING push_string_operand .)
    RPAREN          reduce using rule 70 (varConst -> STRING push_string_operand .)
    RBRACKET        reduce using rule 70 (varConst -> STRING push_string_operand .)
    SEMICOLON       reduce using rule 70 (varConst -> STRING push_string_operand .)
    COMMA           reduce using rule 70 (varConst -> STRING push_string_operand .)


state 23

    (69) varConst -> bool push_bool_operand .

    TIMES           reduce using rule 69 (varConst -> bool push_bool_operand .)
    DEVIDE          reduce using rule 69 (varConst -> bool push_bool_operand .)
    PLUS            reduce using rule 69 (varConst -> bool push_bool_operand .)
    MINUS           reduce using rule 69 (varConst -> bool push_bool_operand .)
    LESSER          reduce using rule 69 (varConst -> bool push_bool_operand .)
    GREATER         reduce using rule 69 (varConst -> bool push_bool_operand .)
    EQUAL           reduce using rule 69 (varConst -> bool push_bool_operand .)
    NOTEQUAL        reduce using rule 69 (varConst -> bool push_bool_operand .)
    LESSEROREQUAL   reduce using rule 69 (varConst -> bool push_bool_operand .)
    GREATEROREQUAL  reduce using rule 69 (varConst -> bool push_bool_operand .)
    AND             reduce using rule 69 (varConst -> bool push_bool_operand .)
    OR              reduce using rule 69 (varConst -> bool push_bool_operand .)
    $end            reduce using rule 69 (varConst -> bool push_bool_operand .)
    RPAREN          reduce using rule 69 (varConst -> bool push_bool_operand .)
    RBRACKET        reduce using rule 69 (varConst -> bool push_bool_operand .)
    SEMICOLON       reduce using rule 69 (varConst -> bool push_bool_operand .)
    COMMA           reduce using rule 69 (varConst -> bool push_bool_operand .)


state 24

    (56) mathoperators1 -> PLUS .

    LPAREN          reduce using rule 56 (mathoperators1 -> PLUS .)
    ID              reduce using rule 56 (mathoperators1 -> PLUS .)
    FLOAT           reduce using rule 56 (mathoperators1 -> PLUS .)
    INT             reduce using rule 56 (mathoperators1 -> PLUS .)
    STRING          reduce using rule 56 (mathoperators1 -> PLUS .)
    TRUE            reduce using rule 56 (mathoperators1 -> PLUS .)
    FALSE           reduce using rule 56 (mathoperators1 -> PLUS .)


state 25

    (54) exp -> exp mathoperators1 . push_operator term do_math_operation1
    (34) push_operator -> .

    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 45

state 26

    (57) mathoperators1 -> MINUS .

    LPAREN          reduce using rule 57 (mathoperators1 -> MINUS .)
    ID              reduce using rule 57 (mathoperators1 -> MINUS .)
    FLOAT           reduce using rule 57 (mathoperators1 -> MINUS .)
    INT             reduce using rule 57 (mathoperators1 -> MINUS .)
    STRING          reduce using rule 57 (mathoperators1 -> MINUS .)
    TRUE            reduce using rule 57 (mathoperators1 -> MINUS .)
    FALSE           reduce using rule 57 (mathoperators1 -> MINUS .)


state 27

    (64) factor -> LPAREN sexpression . RPAREN

    RPAREN          shift and go to state 46


state 28

    (66) varConst -> ID push_id_operand .

    TIMES           reduce using rule 66 (varConst -> ID push_id_operand .)
    DEVIDE          reduce using rule 66 (varConst -> ID push_id_operand .)
    PLUS            reduce using rule 66 (varConst -> ID push_id_operand .)
    MINUS           reduce using rule 66 (varConst -> ID push_id_operand .)
    LESSER          reduce using rule 66 (varConst -> ID push_id_operand .)
    GREATER         reduce using rule 66 (varConst -> ID push_id_operand .)
    EQUAL           reduce using rule 66 (varConst -> ID push_id_operand .)
    NOTEQUAL        reduce using rule 66 (varConst -> ID push_id_operand .)
    LESSEROREQUAL   reduce using rule 66 (varConst -> ID push_id_operand .)
    GREATEROREQUAL  reduce using rule 66 (varConst -> ID push_id_operand .)
    AND             reduce using rule 66 (varConst -> ID push_id_operand .)
    OR              reduce using rule 66 (varConst -> ID push_id_operand .)
    $end            reduce using rule 66 (varConst -> ID push_id_operand .)
    RPAREN          reduce using rule 66 (varConst -> ID push_id_operand .)
    RBRACKET        reduce using rule 66 (varConst -> ID push_id_operand .)
    SEMICOLON       reduce using rule 66 (varConst -> ID push_id_operand .)
    COMMA           reduce using rule 66 (varConst -> ID push_id_operand .)


state 29

    (62) mathoperators2 -> DEVIDE .

    LPAREN          reduce using rule 62 (mathoperators2 -> DEVIDE .)
    ID              reduce using rule 62 (mathoperators2 -> DEVIDE .)
    FLOAT           reduce using rule 62 (mathoperators2 -> DEVIDE .)
    INT             reduce using rule 62 (mathoperators2 -> DEVIDE .)
    STRING          reduce using rule 62 (mathoperators2 -> DEVIDE .)
    TRUE            reduce using rule 62 (mathoperators2 -> DEVIDE .)
    FALSE           reduce using rule 62 (mathoperators2 -> DEVIDE .)


state 30

    (61) mathoperators2 -> TIMES .

    LPAREN          reduce using rule 61 (mathoperators2 -> TIMES .)
    ID              reduce using rule 61 (mathoperators2 -> TIMES .)
    FLOAT           reduce using rule 61 (mathoperators2 -> TIMES .)
    INT             reduce using rule 61 (mathoperators2 -> TIMES .)
    STRING          reduce using rule 61 (mathoperators2 -> TIMES .)
    TRUE            reduce using rule 61 (mathoperators2 -> TIMES .)
    FALSE           reduce using rule 61 (mathoperators2 -> TIMES .)


state 31

    (59) term -> term mathoperators2 . push_operator factor do_math_operation2
    (34) push_operator -> .

    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 47

state 32

    (68) varConst -> INT push_int_operand .

    TIMES           reduce using rule 68 (varConst -> INT push_int_operand .)
    DEVIDE          reduce using rule 68 (varConst -> INT push_int_operand .)
    PLUS            reduce using rule 68 (varConst -> INT push_int_operand .)
    MINUS           reduce using rule 68 (varConst -> INT push_int_operand .)
    LESSER          reduce using rule 68 (varConst -> INT push_int_operand .)
    GREATER         reduce using rule 68 (varConst -> INT push_int_operand .)
    EQUAL           reduce using rule 68 (varConst -> INT push_int_operand .)
    NOTEQUAL        reduce using rule 68 (varConst -> INT push_int_operand .)
    LESSEROREQUAL   reduce using rule 68 (varConst -> INT push_int_operand .)
    GREATEROREQUAL  reduce using rule 68 (varConst -> INT push_int_operand .)
    AND             reduce using rule 68 (varConst -> INT push_int_operand .)
    OR              reduce using rule 68 (varConst -> INT push_int_operand .)
    $end            reduce using rule 68 (varConst -> INT push_int_operand .)
    RPAREN          reduce using rule 68 (varConst -> INT push_int_operand .)
    RBRACKET        reduce using rule 68 (varConst -> INT push_int_operand .)
    SEMICOLON       reduce using rule 68 (varConst -> INT push_int_operand .)
    COMMA           reduce using rule 68 (varConst -> INT push_int_operand .)


state 33

    (67) varConst -> FLOAT push_float_operand .

    TIMES           reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    DEVIDE          reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    PLUS            reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    MINUS           reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    LESSER          reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    GREATER         reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    EQUAL           reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    NOTEQUAL        reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    LESSEROREQUAL   reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    GREATEROREQUAL  reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    AND             reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    OR              reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    $end            reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    RPAREN          reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    RBRACKET        reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    SEMICOLON       reduce using rule 67 (varConst -> FLOAT push_float_operand .)
    COMMA           reduce using rule 67 (varConst -> FLOAT push_float_operand .)


state 34

    (51) relationaloperators -> AND .

    LPAREN          reduce using rule 51 (relationaloperators -> AND .)
    ID              reduce using rule 51 (relationaloperators -> AND .)
    FLOAT           reduce using rule 51 (relationaloperators -> AND .)
    INT             reduce using rule 51 (relationaloperators -> AND .)
    STRING          reduce using rule 51 (relationaloperators -> AND .)
    TRUE            reduce using rule 51 (relationaloperators -> AND .)
    FALSE           reduce using rule 51 (relationaloperators -> AND .)


state 35

    (43) expression -> expression relationaloperators . push_operator exp do_relational_operation
    (34) push_operator -> .

    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 48

state 36

    (39) sexpression -> negation expression do_not_operation .

    COMMA           reduce using rule 39 (sexpression -> negation expression do_not_operation .)
    RPAREN          reduce using rule 39 (sexpression -> negation expression do_not_operation .)
    SEMICOLON       reduce using rule 39 (sexpression -> negation expression do_not_operation .)
    $end            reduce using rule 39 (sexpression -> negation expression do_not_operation .)
    RBRACKET        reduce using rule 39 (sexpression -> negation expression do_not_operation .)


state 37

    (46) relationaloperators -> GREATER .

    LPAREN          reduce using rule 46 (relationaloperators -> GREATER .)
    ID              reduce using rule 46 (relationaloperators -> GREATER .)
    FLOAT           reduce using rule 46 (relationaloperators -> GREATER .)
    INT             reduce using rule 46 (relationaloperators -> GREATER .)
    STRING          reduce using rule 46 (relationaloperators -> GREATER .)
    TRUE            reduce using rule 46 (relationaloperators -> GREATER .)
    FALSE           reduce using rule 46 (relationaloperators -> GREATER .)


state 38

    (48) relationaloperators -> NOTEQUAL .

    LPAREN          reduce using rule 48 (relationaloperators -> NOTEQUAL .)
    ID              reduce using rule 48 (relationaloperators -> NOTEQUAL .)
    FLOAT           reduce using rule 48 (relationaloperators -> NOTEQUAL .)
    INT             reduce using rule 48 (relationaloperators -> NOTEQUAL .)
    STRING          reduce using rule 48 (relationaloperators -> NOTEQUAL .)
    TRUE            reduce using rule 48 (relationaloperators -> NOTEQUAL .)
    FALSE           reduce using rule 48 (relationaloperators -> NOTEQUAL .)


state 39

    (49) relationaloperators -> LESSEROREQUAL .

    LPAREN          reduce using rule 49 (relationaloperators -> LESSEROREQUAL .)
    ID              reduce using rule 49 (relationaloperators -> LESSEROREQUAL .)
    FLOAT           reduce using rule 49 (relationaloperators -> LESSEROREQUAL .)
    INT             reduce using rule 49 (relationaloperators -> LESSEROREQUAL .)
    STRING          reduce using rule 49 (relationaloperators -> LESSEROREQUAL .)
    TRUE            reduce using rule 49 (relationaloperators -> LESSEROREQUAL .)
    FALSE           reduce using rule 49 (relationaloperators -> LESSEROREQUAL .)


state 40

    (47) relationaloperators -> EQUAL .

    LPAREN          reduce using rule 47 (relationaloperators -> EQUAL .)
    ID              reduce using rule 47 (relationaloperators -> EQUAL .)
    FLOAT           reduce using rule 47 (relationaloperators -> EQUAL .)
    INT             reduce using rule 47 (relationaloperators -> EQUAL .)
    STRING          reduce using rule 47 (relationaloperators -> EQUAL .)
    TRUE            reduce using rule 47 (relationaloperators -> EQUAL .)
    FALSE           reduce using rule 47 (relationaloperators -> EQUAL .)


state 41

    (45) relationaloperators -> LESSER .

    LPAREN          reduce using rule 45 (relationaloperators -> LESSER .)
    ID              reduce using rule 45 (relationaloperators -> LESSER .)
    FLOAT           reduce using rule 45 (relationaloperators -> LESSER .)
    INT             reduce using rule 45 (relationaloperators -> LESSER .)
    STRING          reduce using rule 45 (relationaloperators -> LESSER .)
    TRUE            reduce using rule 45 (relationaloperators -> LESSER .)
    FALSE           reduce using rule 45 (relationaloperators -> LESSER .)


state 42

    (50) relationaloperators -> GREATEROREQUAL .

    LPAREN          reduce using rule 50 (relationaloperators -> GREATEROREQUAL .)
    ID              reduce using rule 50 (relationaloperators -> GREATEROREQUAL .)
    FLOAT           reduce using rule 50 (relationaloperators -> GREATEROREQUAL .)
    INT             reduce using rule 50 (relationaloperators -> GREATEROREQUAL .)
    STRING          reduce using rule 50 (relationaloperators -> GREATEROREQUAL .)
    TRUE            reduce using rule 50 (relationaloperators -> GREATEROREQUAL .)
    FALSE           reduce using rule 50 (relationaloperators -> GREATEROREQUAL .)


state 43

    (52) relationaloperators -> OR .

    LPAREN          reduce using rule 52 (relationaloperators -> OR .)
    ID              reduce using rule 52 (relationaloperators -> OR .)
    FLOAT           reduce using rule 52 (relationaloperators -> OR .)
    INT             reduce using rule 52 (relationaloperators -> OR .)
    STRING          reduce using rule 52 (relationaloperators -> OR .)
    TRUE            reduce using rule 52 (relationaloperators -> OR .)
    FALSE           reduce using rule 52 (relationaloperators -> OR .)


state 44

    (1) program -> PROGRAM ID add_global_function . SEMICOLON vars function main

    SEMICOLON       shift and go to state 49


state 45

    (54) exp -> exp mathoperators1 push_operator . term do_math_operation1
    (59) term -> . term mathoperators2 push_operator factor do_math_operation2
    (60) term -> . factor
    (64) factor -> . LPAREN sexpression RPAREN
    (65) factor -> . varConst
    (66) varConst -> . ID push_id_operand
    (67) varConst -> . FLOAT push_float_operand
    (68) varConst -> . INT push_int_operand
    (69) varConst -> . bool push_bool_operand
    (70) varConst -> . STRING push_string_operand
    (73) bool -> . TRUE
    (74) bool -> . FALSE

    LPAREN          shift and go to state 13
    ID              shift and go to state 15
    FLOAT           shift and go to state 18
    INT             shift and go to state 17
    STRING          shift and go to state 9
    TRUE            shift and go to state 8
    FALSE           shift and go to state 14

    term                           shift and go to state 50
    varConst                       shift and go to state 7
    bool                           shift and go to state 10
    factor                         shift and go to state 11

state 46

    (64) factor -> LPAREN sexpression RPAREN .

    TIMES           reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    DEVIDE          reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    PLUS            reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    MINUS           reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    LESSER          reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    GREATER         reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    EQUAL           reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    NOTEQUAL        reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    LESSEROREQUAL   reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    GREATEROREQUAL  reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    AND             reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    OR              reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    $end            reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    RPAREN          reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    RBRACKET        reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    SEMICOLON       reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)
    COMMA           reduce using rule 64 (factor -> LPAREN sexpression RPAREN .)


state 47

    (59) term -> term mathoperators2 push_operator . factor do_math_operation2
    (64) factor -> . LPAREN sexpression RPAREN
    (65) factor -> . varConst
    (66) varConst -> . ID push_id_operand
    (67) varConst -> . FLOAT push_float_operand
    (68) varConst -> . INT push_int_operand
    (69) varConst -> . bool push_bool_operand
    (70) varConst -> . STRING push_string_operand
    (73) bool -> . TRUE
    (74) bool -> . FALSE

    LPAREN          shift and go to state 13
    ID              shift and go to state 15
    FLOAT           shift and go to state 18
    INT             shift and go to state 17
    STRING          shift and go to state 9
    TRUE            shift and go to state 8
    FALSE           shift and go to state 14

    varConst                       shift and go to state 7
    bool                           shift and go to state 10
    factor                         shift and go to state 51

state 48

    (43) expression -> expression relationaloperators push_operator . exp do_relational_operation
    (54) exp -> . exp mathoperators1 push_operator term do_math_operation1
    (55) exp -> . term
    (59) term -> . term mathoperators2 push_operator factor do_math_operation2
    (60) term -> . factor
    (64) factor -> . LPAREN sexpression RPAREN
    (65) factor -> . varConst
    (66) varConst -> . ID push_id_operand
    (67) varConst -> . FLOAT push_float_operand
    (68) varConst -> . INT push_int_operand
    (69) varConst -> . bool push_bool_operand
    (70) varConst -> . STRING push_string_operand
    (73) bool -> . TRUE
    (74) bool -> . FALSE

    LPAREN          shift and go to state 13
    ID              shift and go to state 15
    FLOAT           shift and go to state 18
    INT             shift and go to state 17
    STRING          shift and go to state 9
    TRUE            shift and go to state 8
    FALSE           shift and go to state 14

    term                           shift and go to state 16
    varConst                       shift and go to state 7
    bool                           shift and go to state 10
    exp                            shift and go to state 52
    factor                         shift and go to state 11

state 49

    (1) program -> PROGRAM ID add_global_function SEMICOLON . vars function main
    (23) vars -> . VAR type ID array store_variable SEMICOLON vars
    (24) vars -> . empty
    (113) empty -> .

    VAR             shift and go to state 54
    FUNCTION        reduce using rule 113 (empty -> .)
    INTTYPE         reduce using rule 113 (empty -> .)

    vars                           shift and go to state 53
    empty                          shift and go to state 55

state 50

    (54) exp -> exp mathoperators1 push_operator term . do_math_operation1
    (59) term -> term . mathoperators2 push_operator factor do_math_operation2
    (58) do_math_operation1 -> .
    (61) mathoperators2 -> . TIMES
    (62) mathoperators2 -> . DEVIDE

    PLUS            reduce using rule 58 (do_math_operation1 -> .)
    MINUS           reduce using rule 58 (do_math_operation1 -> .)
    LESSER          reduce using rule 58 (do_math_operation1 -> .)
    GREATER         reduce using rule 58 (do_math_operation1 -> .)
    EQUAL           reduce using rule 58 (do_math_operation1 -> .)
    NOTEQUAL        reduce using rule 58 (do_math_operation1 -> .)
    LESSEROREQUAL   reduce using rule 58 (do_math_operation1 -> .)
    GREATEROREQUAL  reduce using rule 58 (do_math_operation1 -> .)
    AND             reduce using rule 58 (do_math_operation1 -> .)
    OR              reduce using rule 58 (do_math_operation1 -> .)
    $end            reduce using rule 58 (do_math_operation1 -> .)
    RPAREN          reduce using rule 58 (do_math_operation1 -> .)
    RBRACKET        reduce using rule 58 (do_math_operation1 -> .)
    SEMICOLON       reduce using rule 58 (do_math_operation1 -> .)
    COMMA           reduce using rule 58 (do_math_operation1 -> .)
    TIMES           shift and go to state 30
    DEVIDE          shift and go to state 29

    do_math_operation1             shift and go to state 56
    mathoperators2                 shift and go to state 31

state 51

    (59) term -> term mathoperators2 push_operator factor . do_math_operation2
    (63) do_math_operation2 -> .

    TIMES           reduce using rule 63 (do_math_operation2 -> .)
    DEVIDE          reduce using rule 63 (do_math_operation2 -> .)
    PLUS            reduce using rule 63 (do_math_operation2 -> .)
    MINUS           reduce using rule 63 (do_math_operation2 -> .)
    LESSER          reduce using rule 63 (do_math_operation2 -> .)
    GREATER         reduce using rule 63 (do_math_operation2 -> .)
    EQUAL           reduce using rule 63 (do_math_operation2 -> .)
    NOTEQUAL        reduce using rule 63 (do_math_operation2 -> .)
    LESSEROREQUAL   reduce using rule 63 (do_math_operation2 -> .)
    GREATEROREQUAL  reduce using rule 63 (do_math_operation2 -> .)
    AND             reduce using rule 63 (do_math_operation2 -> .)
    OR              reduce using rule 63 (do_math_operation2 -> .)
    $end            reduce using rule 63 (do_math_operation2 -> .)
    RPAREN          reduce using rule 63 (do_math_operation2 -> .)
    RBRACKET        reduce using rule 63 (do_math_operation2 -> .)
    SEMICOLON       reduce using rule 63 (do_math_operation2 -> .)
    COMMA           reduce using rule 63 (do_math_operation2 -> .)

    do_math_operation2             shift and go to state 57

state 52

    (43) expression -> expression relationaloperators push_operator exp . do_relational_operation
    (54) exp -> exp . mathoperators1 push_operator term do_math_operation1
    (53) do_relational_operation -> .
    (56) mathoperators1 -> . PLUS
    (57) mathoperators1 -> . MINUS

    LESSER          reduce using rule 53 (do_relational_operation -> .)
    GREATER         reduce using rule 53 (do_relational_operation -> .)
    EQUAL           reduce using rule 53 (do_relational_operation -> .)
    NOTEQUAL        reduce using rule 53 (do_relational_operation -> .)
    LESSEROREQUAL   reduce using rule 53 (do_relational_operation -> .)
    GREATEROREQUAL  reduce using rule 53 (do_relational_operation -> .)
    AND             reduce using rule 53 (do_relational_operation -> .)
    OR              reduce using rule 53 (do_relational_operation -> .)
    $end            reduce using rule 53 (do_relational_operation -> .)
    RPAREN          reduce using rule 53 (do_relational_operation -> .)
    RBRACKET        reduce using rule 53 (do_relational_operation -> .)
    SEMICOLON       reduce using rule 53 (do_relational_operation -> .)
    COMMA           reduce using rule 53 (do_relational_operation -> .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 26

    do_relational_operation        shift and go to state 58
    mathoperators1                 shift and go to state 25

state 53

    (1) program -> PROGRAM ID add_global_function SEMICOLON vars . function main
    (83) function -> . FUNCTION functiontype ID LPAREN parameter RPAREN block function
    (84) function -> . empty
    (113) empty -> .

    FUNCTION        shift and go to state 60
    INTTYPE         reduce using rule 113 (empty -> .)

    function                       shift and go to state 59
    empty                          shift and go to state 61

state 54

    (23) vars -> VAR . type ID array store_variable SEMICOLON vars
    (28) type -> . INTTYPE
    (29) type -> . FLOATTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . BOOLTYPE

    INTTYPE         shift and go to state 65
    FLOATTYPE       shift and go to state 64
    STRINGTYPE      shift and go to state 63
    BOOLTYPE        shift and go to state 62

    type                           shift and go to state 66

state 55

    (24) vars -> empty .

    FUNCTION        reduce using rule 24 (vars -> empty .)
    INTTYPE         reduce using rule 24 (vars -> empty .)


state 56

    (54) exp -> exp mathoperators1 push_operator term do_math_operation1 .

    PLUS            reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    MINUS           reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    LESSER          reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    GREATER         reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    EQUAL           reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    NOTEQUAL        reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    LESSEROREQUAL   reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    GREATEROREQUAL  reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    AND             reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    OR              reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    $end            reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    RPAREN          reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    RBRACKET        reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    SEMICOLON       reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)
    COMMA           reduce using rule 54 (exp -> exp mathoperators1 push_operator term do_math_operation1 .)


state 57

    (59) term -> term mathoperators2 push_operator factor do_math_operation2 .

    TIMES           reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    DEVIDE          reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    PLUS            reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    MINUS           reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    LESSER          reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    GREATER         reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    EQUAL           reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    NOTEQUAL        reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    LESSEROREQUAL   reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    GREATEROREQUAL  reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    AND             reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    OR              reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    $end            reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    RPAREN          reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    RBRACKET        reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    SEMICOLON       reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)
    COMMA           reduce using rule 59 (term -> term mathoperators2 push_operator factor do_math_operation2 .)


state 58

    (43) expression -> expression relationaloperators push_operator exp do_relational_operation .

    LESSER          reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    GREATER         reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    EQUAL           reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    NOTEQUAL        reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    LESSEROREQUAL   reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    GREATEROREQUAL  reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    AND             reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    OR              reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    $end            reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    RPAREN          reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    RBRACKET        reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    SEMICOLON       reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)
    COMMA           reduce using rule 43 (expression -> expression relationaloperators push_operator exp do_relational_operation .)


state 59

    (1) program -> PROGRAM ID add_global_function SEMICOLON vars function . main
    (4) main -> . INTTYPE MAIN LPAREN RPAREN switch_to_global_scope block

    INTTYPE         shift and go to state 67

    main                           shift and go to state 68

state 60

    (83) function -> FUNCTION . functiontype ID LPAREN parameter RPAREN block function
    (85) functiontype -> . VOID
    (86) functiontype -> . type
    (28) type -> . INTTYPE
    (29) type -> . FLOATTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . BOOLTYPE

    VOID            shift and go to state 70
    INTTYPE         shift and go to state 65
    FLOATTYPE       shift and go to state 64
    STRINGTYPE      shift and go to state 63
    BOOLTYPE        shift and go to state 62

    functiontype                   shift and go to state 69
    type                           shift and go to state 71

state 61

    (84) function -> empty .

    INTTYPE         reduce using rule 84 (function -> empty .)


state 62

    (31) type -> BOOLTYPE .

    ID              reduce using rule 31 (type -> BOOLTYPE .)


state 63

    (30) type -> STRINGTYPE .

    ID              reduce using rule 30 (type -> STRINGTYPE .)


state 64

    (29) type -> FLOATTYPE .

    ID              reduce using rule 29 (type -> FLOATTYPE .)


state 65

    (28) type -> INTTYPE .

    ID              reduce using rule 28 (type -> INTTYPE .)


state 66

    (23) vars -> VAR type . ID array store_variable SEMICOLON vars

    ID              shift and go to state 72


state 67

    (4) main -> INTTYPE . MAIN LPAREN RPAREN switch_to_global_scope block

    MAIN            shift and go to state 73


state 68

    (1) program -> PROGRAM ID add_global_function SEMICOLON vars function main .

    $end            reduce using rule 1 (program -> PROGRAM ID add_global_function SEMICOLON vars function main .)


state 69

    (83) function -> FUNCTION functiontype . ID LPAREN parameter RPAREN block function

    ID              shift and go to state 74


state 70

    (85) functiontype -> VOID .

    ID              reduce using rule 85 (functiontype -> VOID .)


state 71

    (86) functiontype -> type .

    ID              reduce using rule 86 (functiontype -> type .)


state 72

    (23) vars -> VAR type ID . array store_variable SEMICOLON vars
    (26) array -> . LBRACKET sexpression RBRACKET
    (27) array -> . empty
    (113) empty -> .

    LBRACKET        shift and go to state 75
    SEMICOLON       reduce using rule 113 (empty -> .)

    array                          shift and go to state 76
    empty                          shift and go to state 77

state 73

    (4) main -> INTTYPE MAIN . LPAREN RPAREN switch_to_global_scope block

    LPAREN          shift and go to state 78


state 74

    (83) function -> FUNCTION functiontype ID . LPAREN parameter RPAREN block function

    LPAREN          shift and go to state 79


state 75

    (26) array -> LBRACKET . sexpression RBRACKET
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 80
    empty                          shift and go to state 6

state 76

    (23) vars -> VAR type ID array . store_variable SEMICOLON vars
    (25) store_variable -> .

    SEMICOLON       reduce using rule 25 (store_variable -> .)

    store_variable                 shift and go to state 81

state 77

    (27) array -> empty .

    SEMICOLON       reduce using rule 27 (array -> empty .)


state 78

    (4) main -> INTTYPE MAIN LPAREN . RPAREN switch_to_global_scope block

    RPAREN          shift and go to state 82


state 79

    (83) function -> FUNCTION functiontype ID LPAREN . parameter RPAREN block function
    (88) parameter -> . empty
    (89) parameter -> . parameterprima
    (113) empty -> .
    (90) parameterprima -> . type ID
    (91) parameterprima -> . type ID COMMA parameterprima
    (28) type -> . INTTYPE
    (29) type -> . FLOATTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . BOOLTYPE

    RPAREN          reduce using rule 113 (empty -> .)
    INTTYPE         shift and go to state 65
    FLOATTYPE       shift and go to state 64
    STRINGTYPE      shift and go to state 63
    BOOLTYPE        shift and go to state 62

    type                           shift and go to state 84
    parameterprima                 shift and go to state 85
    parameter                      shift and go to state 86
    empty                          shift and go to state 83

state 80

    (26) array -> LBRACKET sexpression . RBRACKET

    RBRACKET        shift and go to state 87


state 81

    (23) vars -> VAR type ID array store_variable . SEMICOLON vars

    SEMICOLON       shift and go to state 88


state 82

    (4) main -> INTTYPE MAIN LPAREN RPAREN . switch_to_global_scope block
    (5) switch_to_global_scope -> .

    LBRACE          reduce using rule 5 (switch_to_global_scope -> .)

    switch_to_global_scope         shift and go to state 89

state 83

    (88) parameter -> empty .

    RPAREN          reduce using rule 88 (parameter -> empty .)


state 84

    (90) parameterprima -> type . ID
    (91) parameterprima -> type . ID COMMA parameterprima

    ID              shift and go to state 90


state 85

    (89) parameter -> parameterprima .

    RPAREN          reduce using rule 89 (parameter -> parameterprima .)


state 86

    (83) function -> FUNCTION functiontype ID LPAREN parameter . RPAREN block function

    RPAREN          shift and go to state 91


state 87

    (26) array -> LBRACKET sexpression RBRACKET .

    SEMICOLON       reduce using rule 26 (array -> LBRACKET sexpression RBRACKET .)


state 88

    (23) vars -> VAR type ID array store_variable SEMICOLON . vars
    (23) vars -> . VAR type ID array store_variable SEMICOLON vars
    (24) vars -> . empty
    (113) empty -> .

    VAR             shift and go to state 54
    FUNCTION        reduce using rule 113 (empty -> .)
    INTTYPE         reduce using rule 113 (empty -> .)

    empty                          shift and go to state 55
    vars                           shift and go to state 92

state 89

    (4) main -> INTTYPE MAIN LPAREN RPAREN switch_to_global_scope . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 93

    block                          shift and go to state 94

state 90

    (90) parameterprima -> type ID .
    (91) parameterprima -> type ID . COMMA parameterprima

    RPAREN          reduce using rule 90 (parameterprima -> type ID .)
    COMMA           shift and go to state 95


state 91

    (83) function -> FUNCTION functiontype ID LPAREN parameter RPAREN . block function
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 93

    block                          shift and go to state 96

state 92

    (23) vars -> VAR type ID array store_variable SEMICOLON vars .

    FUNCTION        reduce using rule 23 (vars -> VAR type ID array store_variable SEMICOLON vars .)
    INTTYPE         reduce using rule 23 (vars -> VAR type ID array store_variable SEMICOLON vars .)


state 93

    (6) block -> LBRACE . blockprima RBRACE
    (7) blockprima -> . statute blockprima
    (8) blockprima -> . empty
    (9) statute -> . assignment
    (10) statute -> . condition
    (11) statute -> . write
    (12) statute -> . read
    (13) statute -> . cycle
    (14) statute -> . functioncall
    (15) statute -> . predefined
    (16) statute -> . return
    (113) empty -> .
    (32) assignment -> . ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (17) condition -> . IF LPAREN sexpression RPAREN do_condition_operation block
    (92) write -> . PRINT LPAREN sexpression RPAREN SEMICOLON
    (93) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (94) cycle -> . WHILE LPAREN sexpression RPAREN block
    (79) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (101) predefined -> . drawline
    (102) predefined -> . drawsquare
    (103) predefined -> . drawtriangle
    (104) predefined -> . drawcircle
    (105) predefined -> . drawcurve
    (106) predefined -> . drawpolygon
    (87) return -> . RETURN sexpression SEMICOLON
    (107) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (108) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (109) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (110) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (111) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (112) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 113 (empty -> .)
    ID              shift and go to state 117
    IF              shift and go to state 119
    PRINT           shift and go to state 102
    WHILE           shift and go to state 101
    RETURN          shift and go to state 98
    DRAWLINE        shift and go to state 116
    DRAWSQUARE      shift and go to state 108
    DRAWTRIANGLE    shift and go to state 99
    DRAWCIRCLE      shift and go to state 105
    DRAWCURVE       shift and go to state 122
    DRAWPOLYGON     shift and go to state 121

    drawtriangle                   shift and go to state 97
    drawcurve                      shift and go to state 100
    predefined                     shift and go to state 103
    blockprima                     shift and go to state 104
    drawline                       shift and go to state 106
    write                          shift and go to state 107
    functioncall                   shift and go to state 124
    empty                          shift and go to state 111
    return                         shift and go to state 112
    drawpolygon                    shift and go to state 113
    read                           shift and go to state 114
    assignment                     shift and go to state 115
    condition                      shift and go to state 118
    cycle                          shift and go to state 110
    statute                        shift and go to state 120
    drawsquare                     shift and go to state 123
    drawcircle                     shift and go to state 109

state 94

    (4) main -> INTTYPE MAIN LPAREN RPAREN switch_to_global_scope block .

    $end            reduce using rule 4 (main -> INTTYPE MAIN LPAREN RPAREN switch_to_global_scope block .)


state 95

    (91) parameterprima -> type ID COMMA . parameterprima
    (90) parameterprima -> . type ID
    (91) parameterprima -> . type ID COMMA parameterprima
    (28) type -> . INTTYPE
    (29) type -> . FLOATTYPE
    (30) type -> . STRINGTYPE
    (31) type -> . BOOLTYPE

    INTTYPE         shift and go to state 65
    FLOATTYPE       shift and go to state 64
    STRINGTYPE      shift and go to state 63
    BOOLTYPE        shift and go to state 62

    parameterprima                 shift and go to state 125
    type                           shift and go to state 84

state 96

    (83) function -> FUNCTION functiontype ID LPAREN parameter RPAREN block . function
    (83) function -> . FUNCTION functiontype ID LPAREN parameter RPAREN block function
    (84) function -> . empty
    (113) empty -> .

    FUNCTION        shift and go to state 60
    INTTYPE         reduce using rule 113 (empty -> .)

    function                       shift and go to state 126
    empty                          shift and go to state 61

state 97

    (103) predefined -> drawtriangle .

    ID              reduce using rule 103 (predefined -> drawtriangle .)
    IF              reduce using rule 103 (predefined -> drawtriangle .)
    PRINT           reduce using rule 103 (predefined -> drawtriangle .)
    WHILE           reduce using rule 103 (predefined -> drawtriangle .)
    RETURN          reduce using rule 103 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 103 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 103 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 103 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 103 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 103 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 103 (predefined -> drawtriangle .)
    RBRACE          reduce using rule 103 (predefined -> drawtriangle .)


state 98

    (87) return -> RETURN . sexpression SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 127
    empty                          shift and go to state 6

state 99

    (109) drawtriangle -> DRAWTRIANGLE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 128


state 100

    (105) predefined -> drawcurve .

    ID              reduce using rule 105 (predefined -> drawcurve .)
    IF              reduce using rule 105 (predefined -> drawcurve .)
    PRINT           reduce using rule 105 (predefined -> drawcurve .)
    WHILE           reduce using rule 105 (predefined -> drawcurve .)
    RETURN          reduce using rule 105 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 105 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 105 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 105 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 105 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 105 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 105 (predefined -> drawcurve .)
    RBRACE          reduce using rule 105 (predefined -> drawcurve .)


state 101

    (94) cycle -> WHILE . LPAREN sexpression RPAREN block

    LPAREN          shift and go to state 129


state 102

    (92) write -> PRINT . LPAREN sexpression RPAREN SEMICOLON

    LPAREN          shift and go to state 130


state 103

    (15) statute -> predefined .

    ID              reduce using rule 15 (statute -> predefined .)
    IF              reduce using rule 15 (statute -> predefined .)
    PRINT           reduce using rule 15 (statute -> predefined .)
    WHILE           reduce using rule 15 (statute -> predefined .)
    RETURN          reduce using rule 15 (statute -> predefined .)
    DRAWLINE        reduce using rule 15 (statute -> predefined .)
    DRAWSQUARE      reduce using rule 15 (statute -> predefined .)
    DRAWTRIANGLE    reduce using rule 15 (statute -> predefined .)
    DRAWCIRCLE      reduce using rule 15 (statute -> predefined .)
    DRAWCURVE       reduce using rule 15 (statute -> predefined .)
    DRAWPOLYGON     reduce using rule 15 (statute -> predefined .)
    RBRACE          reduce using rule 15 (statute -> predefined .)


state 104

    (6) block -> LBRACE blockprima . RBRACE

    RBRACE          shift and go to state 131


state 105

    (110) drawcircle -> DRAWCIRCLE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 132


state 106

    (101) predefined -> drawline .

    ID              reduce using rule 101 (predefined -> drawline .)
    IF              reduce using rule 101 (predefined -> drawline .)
    PRINT           reduce using rule 101 (predefined -> drawline .)
    WHILE           reduce using rule 101 (predefined -> drawline .)
    RETURN          reduce using rule 101 (predefined -> drawline .)
    DRAWLINE        reduce using rule 101 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 101 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 101 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 101 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 101 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 101 (predefined -> drawline .)
    RBRACE          reduce using rule 101 (predefined -> drawline .)


state 107

    (11) statute -> write .

    ID              reduce using rule 11 (statute -> write .)
    IF              reduce using rule 11 (statute -> write .)
    PRINT           reduce using rule 11 (statute -> write .)
    WHILE           reduce using rule 11 (statute -> write .)
    RETURN          reduce using rule 11 (statute -> write .)
    DRAWLINE        reduce using rule 11 (statute -> write .)
    DRAWSQUARE      reduce using rule 11 (statute -> write .)
    DRAWTRIANGLE    reduce using rule 11 (statute -> write .)
    DRAWCIRCLE      reduce using rule 11 (statute -> write .)
    DRAWCURVE       reduce using rule 11 (statute -> write .)
    DRAWPOLYGON     reduce using rule 11 (statute -> write .)
    RBRACE          reduce using rule 11 (statute -> write .)


state 108

    (108) drawsquare -> DRAWSQUARE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 133


state 109

    (104) predefined -> drawcircle .

    ID              reduce using rule 104 (predefined -> drawcircle .)
    IF              reduce using rule 104 (predefined -> drawcircle .)
    PRINT           reduce using rule 104 (predefined -> drawcircle .)
    WHILE           reduce using rule 104 (predefined -> drawcircle .)
    RETURN          reduce using rule 104 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 104 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 104 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 104 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 104 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 104 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 104 (predefined -> drawcircle .)
    RBRACE          reduce using rule 104 (predefined -> drawcircle .)


state 110

    (13) statute -> cycle .

    ID              reduce using rule 13 (statute -> cycle .)
    IF              reduce using rule 13 (statute -> cycle .)
    PRINT           reduce using rule 13 (statute -> cycle .)
    WHILE           reduce using rule 13 (statute -> cycle .)
    RETURN          reduce using rule 13 (statute -> cycle .)
    DRAWLINE        reduce using rule 13 (statute -> cycle .)
    DRAWSQUARE      reduce using rule 13 (statute -> cycle .)
    DRAWTRIANGLE    reduce using rule 13 (statute -> cycle .)
    DRAWCIRCLE      reduce using rule 13 (statute -> cycle .)
    DRAWCURVE       reduce using rule 13 (statute -> cycle .)
    DRAWPOLYGON     reduce using rule 13 (statute -> cycle .)
    RBRACE          reduce using rule 13 (statute -> cycle .)


state 111

    (8) blockprima -> empty .

    RBRACE          reduce using rule 8 (blockprima -> empty .)


state 112

    (16) statute -> return .

    ID              reduce using rule 16 (statute -> return .)
    IF              reduce using rule 16 (statute -> return .)
    PRINT           reduce using rule 16 (statute -> return .)
    WHILE           reduce using rule 16 (statute -> return .)
    RETURN          reduce using rule 16 (statute -> return .)
    DRAWLINE        reduce using rule 16 (statute -> return .)
    DRAWSQUARE      reduce using rule 16 (statute -> return .)
    DRAWTRIANGLE    reduce using rule 16 (statute -> return .)
    DRAWCIRCLE      reduce using rule 16 (statute -> return .)
    DRAWCURVE       reduce using rule 16 (statute -> return .)
    DRAWPOLYGON     reduce using rule 16 (statute -> return .)
    RBRACE          reduce using rule 16 (statute -> return .)


state 113

    (106) predefined -> drawpolygon .

    ID              reduce using rule 106 (predefined -> drawpolygon .)
    IF              reduce using rule 106 (predefined -> drawpolygon .)
    PRINT           reduce using rule 106 (predefined -> drawpolygon .)
    WHILE           reduce using rule 106 (predefined -> drawpolygon .)
    RETURN          reduce using rule 106 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 106 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 106 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 106 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 106 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 106 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 106 (predefined -> drawpolygon .)
    RBRACE          reduce using rule 106 (predefined -> drawpolygon .)


state 114

    (12) statute -> read .

    ID              reduce using rule 12 (statute -> read .)
    IF              reduce using rule 12 (statute -> read .)
    PRINT           reduce using rule 12 (statute -> read .)
    WHILE           reduce using rule 12 (statute -> read .)
    RETURN          reduce using rule 12 (statute -> read .)
    DRAWLINE        reduce using rule 12 (statute -> read .)
    DRAWSQUARE      reduce using rule 12 (statute -> read .)
    DRAWTRIANGLE    reduce using rule 12 (statute -> read .)
    DRAWCIRCLE      reduce using rule 12 (statute -> read .)
    DRAWCURVE       reduce using rule 12 (statute -> read .)
    DRAWPOLYGON     reduce using rule 12 (statute -> read .)
    RBRACE          reduce using rule 12 (statute -> read .)


state 115

    (9) statute -> assignment .

    ID              reduce using rule 9 (statute -> assignment .)
    IF              reduce using rule 9 (statute -> assignment .)
    PRINT           reduce using rule 9 (statute -> assignment .)
    WHILE           reduce using rule 9 (statute -> assignment .)
    RETURN          reduce using rule 9 (statute -> assignment .)
    DRAWLINE        reduce using rule 9 (statute -> assignment .)
    DRAWSQUARE      reduce using rule 9 (statute -> assignment .)
    DRAWTRIANGLE    reduce using rule 9 (statute -> assignment .)
    DRAWCIRCLE      reduce using rule 9 (statute -> assignment .)
    DRAWCURVE       reduce using rule 9 (statute -> assignment .)
    DRAWPOLYGON     reduce using rule 9 (statute -> assignment .)
    RBRACE          reduce using rule 9 (statute -> assignment .)


state 116

    (107) drawline -> DRAWLINE . LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 134


state 117

    (32) assignment -> ID . push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (93) read -> ID . push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (79) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (33) push_id_operand -> .

    LPAREN          shift and go to state 135
    ASSIGN          reduce using rule 33 (push_id_operand -> .)

    push_id_operand                shift and go to state 136

state 118

    (10) statute -> condition .

    ID              reduce using rule 10 (statute -> condition .)
    IF              reduce using rule 10 (statute -> condition .)
    PRINT           reduce using rule 10 (statute -> condition .)
    WHILE           reduce using rule 10 (statute -> condition .)
    RETURN          reduce using rule 10 (statute -> condition .)
    DRAWLINE        reduce using rule 10 (statute -> condition .)
    DRAWSQUARE      reduce using rule 10 (statute -> condition .)
    DRAWTRIANGLE    reduce using rule 10 (statute -> condition .)
    DRAWCIRCLE      reduce using rule 10 (statute -> condition .)
    DRAWCURVE       reduce using rule 10 (statute -> condition .)
    DRAWPOLYGON     reduce using rule 10 (statute -> condition .)
    RBRACE          reduce using rule 10 (statute -> condition .)


state 119

    (17) condition -> IF . LPAREN sexpression RPAREN do_condition_operation block

    LPAREN          shift and go to state 137


state 120

    (7) blockprima -> statute . blockprima
    (7) blockprima -> . statute blockprima
    (8) blockprima -> . empty
    (9) statute -> . assignment
    (10) statute -> . condition
    (11) statute -> . write
    (12) statute -> . read
    (13) statute -> . cycle
    (14) statute -> . functioncall
    (15) statute -> . predefined
    (16) statute -> . return
    (113) empty -> .
    (32) assignment -> . ID push_id_operand ASSIGN push_operator sexpression SEMICOLON
    (17) condition -> . IF LPAREN sexpression RPAREN do_condition_operation block
    (92) write -> . PRINT LPAREN sexpression RPAREN SEMICOLON
    (93) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (94) cycle -> . WHILE LPAREN sexpression RPAREN block
    (79) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (101) predefined -> . drawline
    (102) predefined -> . drawsquare
    (103) predefined -> . drawtriangle
    (104) predefined -> . drawcircle
    (105) predefined -> . drawcurve
    (106) predefined -> . drawpolygon
    (87) return -> . RETURN sexpression SEMICOLON
    (107) drawline -> . DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (108) drawsquare -> . DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (109) drawtriangle -> . DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (110) drawcircle -> . DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (111) drawcurve -> . DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (112) drawpolygon -> . DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 113 (empty -> .)
    ID              shift and go to state 117
    IF              shift and go to state 119
    PRINT           shift and go to state 102
    WHILE           shift and go to state 101
    RETURN          shift and go to state 98
    DRAWLINE        shift and go to state 116
    DRAWSQUARE      shift and go to state 108
    DRAWTRIANGLE    shift and go to state 99
    DRAWCIRCLE      shift and go to state 105
    DRAWCURVE       shift and go to state 122
    DRAWPOLYGON     shift and go to state 121

    drawtriangle                   shift and go to state 97
    drawcurve                      shift and go to state 100
    predefined                     shift and go to state 103
    blockprima                     shift and go to state 138
    drawline                       shift and go to state 106
    write                          shift and go to state 107
    functioncall                   shift and go to state 124
    empty                          shift and go to state 111
    return                         shift and go to state 112
    drawpolygon                    shift and go to state 113
    read                           shift and go to state 114
    assignment                     shift and go to state 115
    condition                      shift and go to state 118
    cycle                          shift and go to state 110
    statute                        shift and go to state 120
    drawsquare                     shift and go to state 123
    drawcircle                     shift and go to state 109

state 121

    (112) drawpolygon -> DRAWPOLYGON . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 139


state 122

    (111) drawcurve -> DRAWCURVE . LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 140


state 123

    (102) predefined -> drawsquare .

    ID              reduce using rule 102 (predefined -> drawsquare .)
    IF              reduce using rule 102 (predefined -> drawsquare .)
    PRINT           reduce using rule 102 (predefined -> drawsquare .)
    WHILE           reduce using rule 102 (predefined -> drawsquare .)
    RETURN          reduce using rule 102 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 102 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 102 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 102 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 102 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 102 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 102 (predefined -> drawsquare .)
    RBRACE          reduce using rule 102 (predefined -> drawsquare .)


state 124

    (14) statute -> functioncall .

    ID              reduce using rule 14 (statute -> functioncall .)
    IF              reduce using rule 14 (statute -> functioncall .)
    PRINT           reduce using rule 14 (statute -> functioncall .)
    WHILE           reduce using rule 14 (statute -> functioncall .)
    RETURN          reduce using rule 14 (statute -> functioncall .)
    DRAWLINE        reduce using rule 14 (statute -> functioncall .)
    DRAWSQUARE      reduce using rule 14 (statute -> functioncall .)
    DRAWTRIANGLE    reduce using rule 14 (statute -> functioncall .)
    DRAWCIRCLE      reduce using rule 14 (statute -> functioncall .)
    DRAWCURVE       reduce using rule 14 (statute -> functioncall .)
    DRAWPOLYGON     reduce using rule 14 (statute -> functioncall .)
    RBRACE          reduce using rule 14 (statute -> functioncall .)


state 125

    (91) parameterprima -> type ID COMMA parameterprima .

    RPAREN          reduce using rule 91 (parameterprima -> type ID COMMA parameterprima .)


state 126

    (83) function -> FUNCTION functiontype ID LPAREN parameter RPAREN block function .

    INTTYPE         reduce using rule 83 (function -> FUNCTION functiontype ID LPAREN parameter RPAREN block function .)


state 127

    (87) return -> RETURN sexpression . SEMICOLON

    SEMICOLON       shift and go to state 141


state 128

    (109) drawtriangle -> DRAWTRIANGLE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 142
    empty                          shift and go to state 6

state 129

    (94) cycle -> WHILE LPAREN . sexpression RPAREN block
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    empty                          shift and go to state 6
    sexpression                    shift and go to state 143

state 130

    (92) write -> PRINT LPAREN . sexpression RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 144
    empty                          shift and go to state 6

state 131

    (6) block -> LBRACE blockprima RBRACE .

    $end            reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    ID              reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    IF              reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    PRINT           reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    WHILE           reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    RETURN          reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWLINE        reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWSQUARE      reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWTRIANGLE    reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWCIRCLE      reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWCURVE       reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    DRAWPOLYGON     reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    RBRACE          reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    FUNCTION        reduce using rule 6 (block -> LBRACE blockprima RBRACE .)
    INTTYPE         reduce using rule 6 (block -> LBRACE blockprima RBRACE .)


state 132

    (110) drawcircle -> DRAWCIRCLE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 145
    empty                          shift and go to state 6

state 133

    (108) drawsquare -> DRAWSQUARE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 146
    empty                          shift and go to state 6

state 134

    (107) drawline -> DRAWLINE LPAREN . sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 147
    empty                          shift and go to state 6

state 135

    (79) functioncall -> ID LPAREN . funcparam RPAREN SEMICOLON
    (80) funcparam -> . empty
    (81) funcparam -> . sexpression
    (82) funcparam -> . sexpression COMMA funcparam
    (113) empty -> .
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty

    RPAREN          reduce using rule 113 (empty -> .)
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)
    NOT             shift and go to state 5

    funcparam                      shift and go to state 149
    negation                       shift and go to state 2
    sexpression                    shift and go to state 148
    empty                          shift and go to state 150

state 136

    (32) assignment -> ID push_id_operand . ASSIGN push_operator sexpression SEMICOLON
    (93) read -> ID push_id_operand . ASSIGN push_operator INPUT SEMICOLON

    ASSIGN          shift and go to state 151


state 137

    (17) condition -> IF LPAREN . sexpression RPAREN do_condition_operation block
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 152
    empty                          shift and go to state 6

state 138

    (7) blockprima -> statute blockprima .

    RBRACE          reduce using rule 7 (blockprima -> statute blockprima .)


state 139

    (112) drawpolygon -> DRAWPOLYGON LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 153
    empty                          shift and go to state 6

state 140

    (111) drawcurve -> DRAWCURVE LPAREN . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 154
    empty                          shift and go to state 6

state 141

    (87) return -> RETURN sexpression SEMICOLON .

    ID              reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    IF              reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    PRINT           reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    WHILE           reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    RETURN          reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    DRAWLINE        reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)
    RBRACE          reduce using rule 87 (return -> RETURN sexpression SEMICOLON .)


state 142

    (109) drawtriangle -> DRAWTRIANGLE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 155


state 143

    (94) cycle -> WHILE LPAREN sexpression . RPAREN block

    RPAREN          shift and go to state 156


state 144

    (92) write -> PRINT LPAREN sexpression . RPAREN SEMICOLON

    RPAREN          shift and go to state 157


state 145

    (110) drawcircle -> DRAWCIRCLE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 158


state 146

    (108) drawsquare -> DRAWSQUARE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 159


state 147

    (107) drawline -> DRAWLINE LPAREN sexpression . COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 160


state 148

    (81) funcparam -> sexpression .
    (82) funcparam -> sexpression . COMMA funcparam

    RPAREN          reduce using rule 81 (funcparam -> sexpression .)
    COMMA           shift and go to state 161


state 149

    (79) functioncall -> ID LPAREN funcparam . RPAREN SEMICOLON

    RPAREN          shift and go to state 162


state 150

    (80) funcparam -> empty .
    (41) negation -> empty .

    RPAREN          reduce using rule 80 (funcparam -> empty .)
    LPAREN          reduce using rule 41 (negation -> empty .)
    ID              reduce using rule 41 (negation -> empty .)
    FLOAT           reduce using rule 41 (negation -> empty .)
    INT             reduce using rule 41 (negation -> empty .)
    STRING          reduce using rule 41 (negation -> empty .)
    TRUE            reduce using rule 41 (negation -> empty .)
    FALSE           reduce using rule 41 (negation -> empty .)


state 151

    (32) assignment -> ID push_id_operand ASSIGN . push_operator sexpression SEMICOLON
    (93) read -> ID push_id_operand ASSIGN . push_operator INPUT SEMICOLON
    (34) push_operator -> .

    INPUT           reduce using rule 34 (push_operator -> .)
    NOT             reduce using rule 34 (push_operator -> .)
    LPAREN          reduce using rule 34 (push_operator -> .)
    ID              reduce using rule 34 (push_operator -> .)
    FLOAT           reduce using rule 34 (push_operator -> .)
    INT             reduce using rule 34 (push_operator -> .)
    STRING          reduce using rule 34 (push_operator -> .)
    TRUE            reduce using rule 34 (push_operator -> .)
    FALSE           reduce using rule 34 (push_operator -> .)

    push_operator                  shift and go to state 163

state 152

    (17) condition -> IF LPAREN sexpression . RPAREN do_condition_operation block

    RPAREN          shift and go to state 164


state 153

    (112) drawpolygon -> DRAWPOLYGON LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 165


state 154

    (111) drawcurve -> DRAWCURVE LPAREN sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 166


state 155

    (109) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 167
    empty                          shift and go to state 6

state 156

    (94) cycle -> WHILE LPAREN sexpression RPAREN . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 93

    block                          shift and go to state 168

state 157

    (92) write -> PRINT LPAREN sexpression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 169


state 158

    (110) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 170
    empty                          shift and go to state 6

state 159

    (108) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 171
    empty                          shift and go to state 6

state 160

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA . sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 172
    empty                          shift and go to state 6

state 161

    (82) funcparam -> sexpression COMMA . funcparam
    (80) funcparam -> . empty
    (81) funcparam -> . sexpression
    (82) funcparam -> . sexpression COMMA funcparam
    (113) empty -> .
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty

    RPAREN          reduce using rule 113 (empty -> .)
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)
    NOT             shift and go to state 5

    funcparam                      shift and go to state 173
    negation                       shift and go to state 2
    sexpression                    shift and go to state 148
    empty                          shift and go to state 150

state 162

    (79) functioncall -> ID LPAREN funcparam RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 174


state 163

    (32) assignment -> ID push_id_operand ASSIGN push_operator . sexpression SEMICOLON
    (93) read -> ID push_id_operand ASSIGN push_operator . INPUT SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    INPUT           shift and go to state 176
    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 175
    empty                          shift and go to state 6

state 164

    (17) condition -> IF LPAREN sexpression RPAREN . do_condition_operation block
    (18) do_condition_operation -> .

    LBRACE          reduce using rule 18 (do_condition_operation -> .)

    do_condition_operation         shift and go to state 177

state 165

    (112) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 178
    empty                          shift and go to state 6

state 166

    (111) drawcurve -> DRAWCURVE LPAREN sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 179
    empty                          shift and go to state 6

state 167

    (109) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 180


state 168

    (94) cycle -> WHILE LPAREN sexpression RPAREN block .

    ID              reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    IF              reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    PRINT           reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    WHILE           reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    RETURN          reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    DRAWLINE        reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    DRAWSQUARE      reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    DRAWTRIANGLE    reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    DRAWCIRCLE      reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    DRAWCURVE       reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    DRAWPOLYGON     reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)
    RBRACE          reduce using rule 94 (cycle -> WHILE LPAREN sexpression RPAREN block .)


state 169

    (92) write -> PRINT LPAREN sexpression RPAREN SEMICOLON .

    ID              reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    IF              reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    PRINT           reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    WHILE           reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    RETURN          reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 92 (write -> PRINT LPAREN sexpression RPAREN SEMICOLON .)


state 170

    (110) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 181


state 171

    (108) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 182


state 172

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression . COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 183


state 173

    (82) funcparam -> sexpression COMMA funcparam .

    RPAREN          reduce using rule 82 (funcparam -> sexpression COMMA funcparam .)


state 174

    (79) functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .

    ID              reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    IF              reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    PRINT           reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    WHILE           reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RETURN          reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RBRACE          reduce using rule 79 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)


state 175

    (32) assignment -> ID push_id_operand ASSIGN push_operator sexpression . SEMICOLON

    SEMICOLON       shift and go to state 184


state 176

    (93) read -> ID push_id_operand ASSIGN push_operator INPUT . SEMICOLON

    SEMICOLON       shift and go to state 185


state 177

    (17) condition -> IF LPAREN sexpression RPAREN do_condition_operation . block
    (6) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 93

    block                          shift and go to state 186

state 178

    (112) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 187


state 179

    (111) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 188


state 180

    (109) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (95) color -> . BLUE
    (96) color -> . GREEN
    (97) color -> . RED
    (98) color -> . YELLOW
    (99) color -> . BROWN
    (100) color -> . BLACK

    BLUE            shift and go to state 189
    GREEN           shift and go to state 193
    RED             shift and go to state 195
    YELLOW          shift and go to state 192
    BROWN           shift and go to state 190
    BLACK           shift and go to state 194

    color                          shift and go to state 191

state 181

    (110) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (95) color -> . BLUE
    (96) color -> . GREEN
    (97) color -> . RED
    (98) color -> . YELLOW
    (99) color -> . BROWN
    (100) color -> . BLACK

    BLUE            shift and go to state 189
    GREEN           shift and go to state 193
    RED             shift and go to state 195
    YELLOW          shift and go to state 192
    BROWN           shift and go to state 190
    BLACK           shift and go to state 194

    color                          shift and go to state 196

state 182

    (108) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (95) color -> . BLUE
    (96) color -> . GREEN
    (97) color -> . RED
    (98) color -> . YELLOW
    (99) color -> . BROWN
    (100) color -> . BLACK

    BLUE            shift and go to state 189
    GREEN           shift and go to state 193
    RED             shift and go to state 195
    YELLOW          shift and go to state 192
    BROWN           shift and go to state 190
    BLACK           shift and go to state 194

    color                          shift and go to state 197

state 183

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA . sexpression COMMA sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 198
    empty                          shift and go to state 6

state 184

    (32) assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .

    ID              reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    IF              reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    PRINT           reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    WHILE           reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    RETURN          reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWLINE        reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWSQUARE      reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWCIRCLE      reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWCURVE       reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    DRAWPOLYGON     reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)
    RBRACE          reduce using rule 32 (assignment -> ID push_id_operand ASSIGN push_operator sexpression SEMICOLON .)


state 185

    (93) read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .

    ID              reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    IF              reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    PRINT           reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    WHILE           reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RETURN          reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RBRACE          reduce using rule 93 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)


state 186

    (17) condition -> IF LPAREN sexpression RPAREN do_condition_operation block .

    ID              reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    IF              reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    PRINT           reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    WHILE           reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    RETURN          reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    DRAWLINE        reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    DRAWSQUARE      reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    DRAWTRIANGLE    reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    DRAWCIRCLE      reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    DRAWCURVE       reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    DRAWPOLYGON     reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)
    RBRACE          reduce using rule 17 (condition -> IF LPAREN sexpression RPAREN do_condition_operation block .)


state 187

    (112) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (95) color -> . BLUE
    (96) color -> . GREEN
    (97) color -> . RED
    (98) color -> . YELLOW
    (99) color -> . BROWN
    (100) color -> . BLACK

    BLUE            shift and go to state 189
    GREEN           shift and go to state 193
    RED             shift and go to state 195
    YELLOW          shift and go to state 192
    BROWN           shift and go to state 190
    BLACK           shift and go to state 194

    color                          shift and go to state 199

state 188

    (111) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (95) color -> . BLUE
    (96) color -> . GREEN
    (97) color -> . RED
    (98) color -> . YELLOW
    (99) color -> . BROWN
    (100) color -> . BLACK

    BLUE            shift and go to state 189
    GREEN           shift and go to state 193
    RED             shift and go to state 195
    YELLOW          shift and go to state 192
    BROWN           shift and go to state 190
    BLACK           shift and go to state 194

    color                          shift and go to state 200

state 189

    (95) color -> BLUE .

    RPAREN          reduce using rule 95 (color -> BLUE .)


state 190

    (99) color -> BROWN .

    RPAREN          reduce using rule 99 (color -> BROWN .)


state 191

    (109) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 201


state 192

    (98) color -> YELLOW .

    RPAREN          reduce using rule 98 (color -> YELLOW .)


state 193

    (96) color -> GREEN .

    RPAREN          reduce using rule 96 (color -> GREEN .)


state 194

    (100) color -> BLACK .

    RPAREN          reduce using rule 100 (color -> BLACK .)


state 195

    (97) color -> RED .

    RPAREN          reduce using rule 97 (color -> RED .)


state 196

    (110) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 202


state 197

    (108) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 203


state 198

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression . COMMA sexpression COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 204


state 199

    (112) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 205


state 200

    (111) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 206


state 201

    (109) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 207


state 202

    (110) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 208


state 203

    (108) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 209


state 204

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA . sexpression COMMA color RPAREN SEMICOLON
    (39) sexpression -> . negation expression do_not_operation
    (40) negation -> . NOT push_operator
    (41) negation -> . empty
    (113) empty -> .

    NOT             shift and go to state 5
    LPAREN          reduce using rule 113 (empty -> .)
    ID              reduce using rule 113 (empty -> .)
    FLOAT           reduce using rule 113 (empty -> .)
    INT             reduce using rule 113 (empty -> .)
    STRING          reduce using rule 113 (empty -> .)
    TRUE            reduce using rule 113 (empty -> .)
    FALSE           reduce using rule 113 (empty -> .)

    negation                       shift and go to state 2
    sexpression                    shift and go to state 210
    empty                          shift and go to state 6

state 205

    (112) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 211


state 206

    (111) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 212


state 207

    (109) drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 109 (drawtriangle -> DRAWTRIANGLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 208

    (110) drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 110 (drawcircle -> DRAWCIRCLE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 209

    (108) drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 108 (drawsquare -> DRAWSQUARE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 210

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 213


state 211

    (112) drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 112 (drawpolygon -> DRAWPOLYGON LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 212

    (111) drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 111 (drawcurve -> DRAWCURVE LPAREN sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)


state 213

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA . color RPAREN SEMICOLON
    (95) color -> . BLUE
    (96) color -> . GREEN
    (97) color -> . RED
    (98) color -> . YELLOW
    (99) color -> . BROWN
    (100) color -> . BLACK

    BLUE            shift and go to state 189
    GREEN           shift and go to state 193
    RED             shift and go to state 195
    YELLOW          shift and go to state 192
    BROWN           shift and go to state 190
    BLACK           shift and go to state 194

    color                          shift and go to state 214

state 214

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 215


state 215

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 216

    (107) drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 107 (drawline -> DRAWLINE LPAREN sexpression COMMA sexpression COMMA sexpression COMMA sexpression COMMA color RPAREN SEMICOLON .)

