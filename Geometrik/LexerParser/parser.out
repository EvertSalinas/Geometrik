Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    BREAK
    ELSE
    BOOLEAN

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID add_global_func SEMICOLON programvars programfunction main
Rule 2     add_global_func -> <empty>
Rule 3     main -> INTTYPE MAIN LPAREN RPAREN switch_to_global_scope block
Rule 4     switch_to_global_scope -> <empty>
Rule 5     programvars -> vars programvars
Rule 6     programvars -> empty
Rule 7     programfunction -> function programfunction
Rule 8     programfunction -> empty
Rule 9     block -> LBRACE blockprima RBRACE
Rule 10    blockprima -> statute blockprima
Rule 11    blockprima -> empty
Rule 12    statute -> assignment
Rule 13    statute -> condition
Rule 14    statute -> write
Rule 15    statute -> read
Rule 16    statute -> cycle
Rule 17    statute -> functioncall
Rule 18    statute -> predefined
Rule 19    statute -> return
Rule 20    condition -> IF LPAREN conditionprima RPAREN block
Rule 21    conditionprima -> condprimaaux
Rule 22    conditionprima -> NOT condprimaaux
Rule 23    condprimaaux -> functioncall
Rule 24    condprimaaux -> singularexp2
Rule 25    vars -> VAR type ID array store_variable SEMICOLON
Rule 26    array -> LBRACKET singularexp2 RBRACKET
Rule 27    array -> empty
Rule 28    store_variable -> <empty>
Rule 29    type -> INTTYPE
Rule 30    type -> FLOATTYPE
Rule 31    type -> STRINGTYPE
Rule 32    type -> BOOLEANTYPE
Rule 33    assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
Rule 34    push_id_operand -> <empty>
Rule 35    push_operator -> <empty>
Rule 36    assignmentarray -> empty
Rule 37    assignmentarray -> LBRACKET singularexp2 RBRACKET
Rule 38    assignmentprima -> functioncall
Rule 39    assignmentprima -> singularexp2
Rule 40    singularexp2 -> singularexp
Rule 41    singularexp2 -> NOT singularexp
Rule 42    singularexp -> singularexp AND expression
Rule 43    singularexp -> singularexp OR expression
Rule 44    singularexp -> expression
Rule 45    expression -> expression LESSER exp
Rule 46    expression -> expression GREATER exp
Rule 47    expression -> expression EQUAL exp
Rule 48    expression -> expression NOTEQUAL exp
Rule 49    expression -> expression LESSEROREQUAL exp
Rule 50    expression -> expression GREATEROREQUAL exp
Rule 51    expression -> exp
Rule 52    exp -> exp PLUS term
Rule 53    exp -> exp MINUS term
Rule 54    exp -> term
Rule 55    term -> term TIMES factor
Rule 56    term -> term DEVIDE factor
Rule 57    term -> factor
Rule 58    factor -> LPAREN singularexp2 RPAREN
Rule 59    factor -> PLUS constant
Rule 60    factor -> MINUS constant
Rule 61    factor -> constant
Rule 62    constant -> ID push_id_operand constantprima
Rule 63    constant -> FLOAT push_float_operand
Rule 64    constant -> INT push_int_operand
Rule 65    constant -> boolean push_boolean_operand
Rule 66    constant -> STRING push_string_operand
Rule 67    boolean -> TRUE
Rule 68    boolean -> FALSE
Rule 69    push_float_operand -> <empty>
Rule 70    push_int_operand -> <empty>
Rule 71    push_boolean_operand -> <empty>
Rule 72    push_string_operand -> <empty>
Rule 73    constantprima -> empty
Rule 74    constantprima -> LBRACKET singularexp2 RBRACKET
Rule 75    functioncall -> ID LPAREN funcparam RPAREN SEMICOLON
Rule 76    funcparam -> empty
Rule 77    funcparam -> singularexp2
Rule 78    funcparam -> singularexp COMMA funcparam
Rule 79    function -> FUNCTION VOID ID LPAREN parameter RPAREN block
Rule 80    function -> FUNCTION type ID LPAREN parameter RPAREN block
Rule 81    return -> RETURN singularexp2 SEMICOLON
Rule 82    parameter -> empty
Rule 83    parameter -> parameterprima
Rule 84    parameterprima -> type ID
Rule 85    parameterprima -> type ID COMMA parameterprima
Rule 86    write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON
Rule 87    read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
Rule 88    cycle -> WHILE LPAREN singularexp2 RPAREN block
Rule 89    color -> BLUE
Rule 90    color -> GREEN
Rule 91    color -> RED
Rule 92    color -> YELLOW
Rule 93    color -> BROWN
Rule 94    color -> BLACK
Rule 95    predefined -> drawline
Rule 96    predefined -> drawsquare
Rule 97    predefined -> drawtriangle
Rule 98    predefined -> drawcircle
Rule 99    predefined -> drawcurve
Rule 100   predefined -> drawpolygon
Rule 101   drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 102   drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 103   drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 104   drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 105   drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 106   drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 107   empty -> <empty>

Terminals, with rules where they appear

AND                  : 42
ASSIGN               : 33 87
BLACK                : 94
BLUE                 : 89
BOOLEAN              : 
BOOLEANTYPE          : 32
BREAK                : 
BROWN                : 93
COLON                : 
COMMA                : 78 85 101 101 101 101 102 102 103 103 104 104 105 105 106 106
DEVIDE               : 56
DRAWCIRCLE           : 104
DRAWCURVE            : 105
DRAWLINE             : 101
DRAWPOLYGON          : 106
DRAWSQUARE           : 102
DRAWTRIANGLE         : 103
ELSE                 : 
EQUAL                : 47
FALSE                : 68
FLOAT                : 63
FLOATTYPE            : 30
FUNCTION             : 79 80
GREATER              : 46
GREATEROREQUAL       : 50
GREEN                : 90
ID                   : 1 25 33 62 75 79 80 84 85 87
IF                   : 20
INPUT                : 87
INT                  : 64
INTTYPE              : 3 29
LBRACE               : 9
LBRACKET             : 26 37 74
LESSER               : 45
LESSEROREQUAL        : 49
LPAREN               : 3 20 58 75 79 80 86 88 101 102 103 104 105 106
MAIN                 : 3
MINUS                : 53 60
NOT                  : 22 41
NOTEQUAL             : 48
OR                   : 43
PLUS                 : 52 59
PRINT                : 86
PROGRAM              : 1
RBRACE               : 9
RBRACKET             : 26 37 74
RED                  : 91
RETURN               : 81
RPAREN               : 3 20 58 75 79 80 86 88 101 102 103 104 105 106
SEMICOLON            : 1 25 33 75 81 86 87 101 102 103 104 105 106
STRING               : 66
STRINGTYPE           : 31
TIMES                : 55
TRUE                 : 67
VAR                  : 25
VOID                 : 79
WHILE                : 88
YELLOW               : 92
error                : 

Nonterminals, with rules where they appear

add_global_func      : 1
array                : 25
assignment           : 12
assignmentarray      : 
assignmentprima      : 
block                : 3 20 79 80 88
blockprima           : 9 10
boolean              : 65
color                : 101 102 103 104 105 106
condition            : 13
conditionprima       : 20
condprimaaux         : 21 22
constant             : 59 60 61
constantprima        : 62
cycle                : 16
drawcircle           : 98
drawcurve            : 99
drawline             : 95
drawpolygon          : 100
drawsquare           : 96
drawtriangle         : 97
empty                : 6 8 11 27 36 73 76 82
exp                  : 45 46 47 48 49 50 51 52 53
expression           : 42 43 44 45 46 47 48 49 50
factor               : 55 56 57
funcparam            : 75 78
function             : 7
functioncall         : 17 23 38
main                 : 1
parameter            : 79 80
parameterprima       : 83 85
predefined           : 18
program              : 0
programfunction      : 1 7
programvars          : 1 5
push_boolean_operand : 65
push_float_operand   : 63
push_id_operand      : 33 62 87
push_int_operand     : 64
push_operator        : 33 87
push_string_operand  : 66
read                 : 15
return               : 19
singularexp          : 40 41 42 43 78
singularexp2         : 24 26 33 37 39 58 74 77 81 86 88 101 101 101 101 102 102 103 103 104 104 105 105 106 106
statute              : 10
store_variable       : 25
switch_to_global_scope : 3
term                 : 52 53 54 55 56
type                 : 25 80 84 85
vars                 : 5
write                : 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID add_global_func SEMICOLON programvars programfunction main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID add_global_func SEMICOLON programvars programfunction main

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . add_global_func SEMICOLON programvars programfunction main
    (2) add_global_func -> .

    SEMICOLON       reduce using rule 2 (add_global_func -> .)

    add_global_func                shift and go to state 4

state 4

    (1) program -> PROGRAM ID add_global_func . SEMICOLON programvars programfunction main

    SEMICOLON       shift and go to state 5


state 5

    (1) program -> PROGRAM ID add_global_func SEMICOLON . programvars programfunction main
    (5) programvars -> . vars programvars
    (6) programvars -> . empty
    (25) vars -> . VAR type ID array store_variable SEMICOLON
    (107) empty -> .

    VAR             shift and go to state 6
    FUNCTION        reduce using rule 107 (empty -> .)
    INTTYPE         reduce using rule 107 (empty -> .)

    vars                           shift and go to state 7
    programvars                    shift and go to state 8
    empty                          shift and go to state 9

state 6

    (25) vars -> VAR . type ID array store_variable SEMICOLON
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE

    INTTYPE         shift and go to state 13
    FLOATTYPE       shift and go to state 11
    STRINGTYPE      shift and go to state 10
    BOOLEANTYPE     shift and go to state 12

    type                           shift and go to state 14

state 7

    (5) programvars -> vars . programvars
    (5) programvars -> . vars programvars
    (6) programvars -> . empty
    (25) vars -> . VAR type ID array store_variable SEMICOLON
    (107) empty -> .

    VAR             shift and go to state 6
    FUNCTION        reduce using rule 107 (empty -> .)
    INTTYPE         reduce using rule 107 (empty -> .)

    vars                           shift and go to state 7
    programvars                    shift and go to state 15
    empty                          shift and go to state 9

state 8

    (1) program -> PROGRAM ID add_global_func SEMICOLON programvars . programfunction main
    (7) programfunction -> . function programfunction
    (8) programfunction -> . empty
    (79) function -> . FUNCTION VOID ID LPAREN parameter RPAREN block
    (80) function -> . FUNCTION type ID LPAREN parameter RPAREN block
    (107) empty -> .

    FUNCTION        shift and go to state 17
    INTTYPE         reduce using rule 107 (empty -> .)

    function                       shift and go to state 16
    programfunction                shift and go to state 18
    empty                          shift and go to state 19

state 9

    (6) programvars -> empty .

    FUNCTION        reduce using rule 6 (programvars -> empty .)
    INTTYPE         reduce using rule 6 (programvars -> empty .)


state 10

    (31) type -> STRINGTYPE .

    ID              reduce using rule 31 (type -> STRINGTYPE .)


state 11

    (30) type -> FLOATTYPE .

    ID              reduce using rule 30 (type -> FLOATTYPE .)


state 12

    (32) type -> BOOLEANTYPE .

    ID              reduce using rule 32 (type -> BOOLEANTYPE .)


state 13

    (29) type -> INTTYPE .

    ID              reduce using rule 29 (type -> INTTYPE .)


state 14

    (25) vars -> VAR type . ID array store_variable SEMICOLON

    ID              shift and go to state 20


state 15

    (5) programvars -> vars programvars .

    FUNCTION        reduce using rule 5 (programvars -> vars programvars .)
    INTTYPE         reduce using rule 5 (programvars -> vars programvars .)


state 16

    (7) programfunction -> function . programfunction
    (7) programfunction -> . function programfunction
    (8) programfunction -> . empty
    (79) function -> . FUNCTION VOID ID LPAREN parameter RPAREN block
    (80) function -> . FUNCTION type ID LPAREN parameter RPAREN block
    (107) empty -> .

    FUNCTION        shift and go to state 17
    INTTYPE         reduce using rule 107 (empty -> .)

    function                       shift and go to state 16
    programfunction                shift and go to state 21
    empty                          shift and go to state 19

state 17

    (79) function -> FUNCTION . VOID ID LPAREN parameter RPAREN block
    (80) function -> FUNCTION . type ID LPAREN parameter RPAREN block
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE

    VOID            shift and go to state 23
    INTTYPE         shift and go to state 13
    FLOATTYPE       shift and go to state 11
    STRINGTYPE      shift and go to state 10
    BOOLEANTYPE     shift and go to state 12

    type                           shift and go to state 22

state 18

    (1) program -> PROGRAM ID add_global_func SEMICOLON programvars programfunction . main
    (3) main -> . INTTYPE MAIN LPAREN RPAREN switch_to_global_scope block

    INTTYPE         shift and go to state 24

    main                           shift and go to state 25

state 19

    (8) programfunction -> empty .

    INTTYPE         reduce using rule 8 (programfunction -> empty .)


state 20

    (25) vars -> VAR type ID . array store_variable SEMICOLON
    (26) array -> . LBRACKET singularexp2 RBRACKET
    (27) array -> . empty
    (107) empty -> .

    LBRACKET        shift and go to state 26
    SEMICOLON       reduce using rule 107 (empty -> .)

    array                          shift and go to state 27
    empty                          shift and go to state 28

state 21

    (7) programfunction -> function programfunction .

    INTTYPE         reduce using rule 7 (programfunction -> function programfunction .)


state 22

    (80) function -> FUNCTION type . ID LPAREN parameter RPAREN block

    ID              shift and go to state 29


state 23

    (79) function -> FUNCTION VOID . ID LPAREN parameter RPAREN block

    ID              shift and go to state 30


state 24

    (3) main -> INTTYPE . MAIN LPAREN RPAREN switch_to_global_scope block

    MAIN            shift and go to state 31


state 25

    (1) program -> PROGRAM ID add_global_func SEMICOLON programvars programfunction main .

    $end            reduce using rule 1 (program -> PROGRAM ID add_global_func SEMICOLON programvars programfunction main .)


state 26

    (26) array -> LBRACKET . singularexp2 RBRACKET
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 33
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 27

    (25) vars -> VAR type ID array . store_variable SEMICOLON
    (28) store_variable -> .

    SEMICOLON       reduce using rule 28 (store_variable -> .)

    store_variable                 shift and go to state 50

state 28

    (27) array -> empty .

    SEMICOLON       reduce using rule 27 (array -> empty .)


state 29

    (80) function -> FUNCTION type ID . LPAREN parameter RPAREN block

    LPAREN          shift and go to state 51


state 30

    (79) function -> FUNCTION VOID ID . LPAREN parameter RPAREN block

    LPAREN          shift and go to state 52


state 31

    (3) main -> INTTYPE MAIN . LPAREN RPAREN switch_to_global_scope block

    LPAREN          shift and go to state 53


state 32

    (61) factor -> constant .

    TIMES           reduce using rule 61 (factor -> constant .)
    DEVIDE          reduce using rule 61 (factor -> constant .)
    PLUS            reduce using rule 61 (factor -> constant .)
    MINUS           reduce using rule 61 (factor -> constant .)
    LESSER          reduce using rule 61 (factor -> constant .)
    GREATER         reduce using rule 61 (factor -> constant .)
    EQUAL           reduce using rule 61 (factor -> constant .)
    NOTEQUAL        reduce using rule 61 (factor -> constant .)
    LESSEROREQUAL   reduce using rule 61 (factor -> constant .)
    GREATEROREQUAL  reduce using rule 61 (factor -> constant .)
    AND             reduce using rule 61 (factor -> constant .)
    OR              reduce using rule 61 (factor -> constant .)
    RBRACKET        reduce using rule 61 (factor -> constant .)
    RPAREN          reduce using rule 61 (factor -> constant .)
    SEMICOLON       reduce using rule 61 (factor -> constant .)
    COMMA           reduce using rule 61 (factor -> constant .)


state 33

    (26) array -> LBRACKET singularexp2 . RBRACKET

    RBRACKET        shift and go to state 54


state 34

    (65) constant -> boolean . push_boolean_operand
    (71) push_boolean_operand -> .

    TIMES           reduce using rule 71 (push_boolean_operand -> .)
    DEVIDE          reduce using rule 71 (push_boolean_operand -> .)
    PLUS            reduce using rule 71 (push_boolean_operand -> .)
    MINUS           reduce using rule 71 (push_boolean_operand -> .)
    LESSER          reduce using rule 71 (push_boolean_operand -> .)
    GREATER         reduce using rule 71 (push_boolean_operand -> .)
    EQUAL           reduce using rule 71 (push_boolean_operand -> .)
    NOTEQUAL        reduce using rule 71 (push_boolean_operand -> .)
    LESSEROREQUAL   reduce using rule 71 (push_boolean_operand -> .)
    GREATEROREQUAL  reduce using rule 71 (push_boolean_operand -> .)
    AND             reduce using rule 71 (push_boolean_operand -> .)
    OR              reduce using rule 71 (push_boolean_operand -> .)
    RBRACKET        reduce using rule 71 (push_boolean_operand -> .)
    RPAREN          reduce using rule 71 (push_boolean_operand -> .)
    SEMICOLON       reduce using rule 71 (push_boolean_operand -> .)
    COMMA           reduce using rule 71 (push_boolean_operand -> .)

    push_boolean_operand           shift and go to state 55

state 35

    (40) singularexp2 -> singularexp .
    (42) singularexp -> singularexp . AND expression
    (43) singularexp -> singularexp . OR expression

    SEMICOLON       reduce using rule 40 (singularexp2 -> singularexp .)
    COMMA           reduce using rule 40 (singularexp2 -> singularexp .)
    RPAREN          reduce using rule 40 (singularexp2 -> singularexp .)
    RBRACKET        reduce using rule 40 (singularexp2 -> singularexp .)
    AND             shift and go to state 56
    OR              shift and go to state 57


state 36

    (67) boolean -> TRUE .

    TIMES           reduce using rule 67 (boolean -> TRUE .)
    DEVIDE          reduce using rule 67 (boolean -> TRUE .)
    PLUS            reduce using rule 67 (boolean -> TRUE .)
    MINUS           reduce using rule 67 (boolean -> TRUE .)
    LESSER          reduce using rule 67 (boolean -> TRUE .)
    GREATER         reduce using rule 67 (boolean -> TRUE .)
    EQUAL           reduce using rule 67 (boolean -> TRUE .)
    NOTEQUAL        reduce using rule 67 (boolean -> TRUE .)
    LESSEROREQUAL   reduce using rule 67 (boolean -> TRUE .)
    GREATEROREQUAL  reduce using rule 67 (boolean -> TRUE .)
    AND             reduce using rule 67 (boolean -> TRUE .)
    OR              reduce using rule 67 (boolean -> TRUE .)
    RBRACKET        reduce using rule 67 (boolean -> TRUE .)
    RPAREN          reduce using rule 67 (boolean -> TRUE .)
    SEMICOLON       reduce using rule 67 (boolean -> TRUE .)
    COMMA           reduce using rule 67 (boolean -> TRUE .)


state 37

    (60) factor -> MINUS . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    constant                       shift and go to state 58
    boolean                        shift and go to state 34

state 38

    (59) factor -> PLUS . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    constant                       shift and go to state 59
    boolean                        shift and go to state 34

state 39

    (57) term -> factor .

    TIMES           reduce using rule 57 (term -> factor .)
    DEVIDE          reduce using rule 57 (term -> factor .)
    PLUS            reduce using rule 57 (term -> factor .)
    MINUS           reduce using rule 57 (term -> factor .)
    LESSER          reduce using rule 57 (term -> factor .)
    GREATER         reduce using rule 57 (term -> factor .)
    EQUAL           reduce using rule 57 (term -> factor .)
    NOTEQUAL        reduce using rule 57 (term -> factor .)
    LESSEROREQUAL   reduce using rule 57 (term -> factor .)
    GREATEROREQUAL  reduce using rule 57 (term -> factor .)
    AND             reduce using rule 57 (term -> factor .)
    OR              reduce using rule 57 (term -> factor .)
    RBRACKET        reduce using rule 57 (term -> factor .)
    RPAREN          reduce using rule 57 (term -> factor .)
    SEMICOLON       reduce using rule 57 (term -> factor .)
    COMMA           reduce using rule 57 (term -> factor .)


state 40

    (66) constant -> STRING . push_string_operand
    (72) push_string_operand -> .

    TIMES           reduce using rule 72 (push_string_operand -> .)
    DEVIDE          reduce using rule 72 (push_string_operand -> .)
    PLUS            reduce using rule 72 (push_string_operand -> .)
    MINUS           reduce using rule 72 (push_string_operand -> .)
    LESSER          reduce using rule 72 (push_string_operand -> .)
    GREATER         reduce using rule 72 (push_string_operand -> .)
    EQUAL           reduce using rule 72 (push_string_operand -> .)
    NOTEQUAL        reduce using rule 72 (push_string_operand -> .)
    LESSEROREQUAL   reduce using rule 72 (push_string_operand -> .)
    GREATEROREQUAL  reduce using rule 72 (push_string_operand -> .)
    AND             reduce using rule 72 (push_string_operand -> .)
    OR              reduce using rule 72 (push_string_operand -> .)
    RBRACKET        reduce using rule 72 (push_string_operand -> .)
    RPAREN          reduce using rule 72 (push_string_operand -> .)
    SEMICOLON       reduce using rule 72 (push_string_operand -> .)
    COMMA           reduce using rule 72 (push_string_operand -> .)

    push_string_operand            shift and go to state 60

state 41

    (58) factor -> LPAREN . singularexp2 RPAREN
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 61
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 42

    (62) constant -> ID . push_id_operand constantprima
    (34) push_id_operand -> .

    LBRACKET        reduce using rule 34 (push_id_operand -> .)
    TIMES           reduce using rule 34 (push_id_operand -> .)
    DEVIDE          reduce using rule 34 (push_id_operand -> .)
    PLUS            reduce using rule 34 (push_id_operand -> .)
    MINUS           reduce using rule 34 (push_id_operand -> .)
    LESSER          reduce using rule 34 (push_id_operand -> .)
    GREATER         reduce using rule 34 (push_id_operand -> .)
    EQUAL           reduce using rule 34 (push_id_operand -> .)
    NOTEQUAL        reduce using rule 34 (push_id_operand -> .)
    LESSEROREQUAL   reduce using rule 34 (push_id_operand -> .)
    GREATEROREQUAL  reduce using rule 34 (push_id_operand -> .)
    AND             reduce using rule 34 (push_id_operand -> .)
    OR              reduce using rule 34 (push_id_operand -> .)
    RBRACKET        reduce using rule 34 (push_id_operand -> .)
    RPAREN          reduce using rule 34 (push_id_operand -> .)
    SEMICOLON       reduce using rule 34 (push_id_operand -> .)
    COMMA           reduce using rule 34 (push_id_operand -> .)

    push_id_operand                shift and go to state 62

state 43

    (54) exp -> term .
    (55) term -> term . TIMES factor
    (56) term -> term . DEVIDE factor

    PLUS            reduce using rule 54 (exp -> term .)
    MINUS           reduce using rule 54 (exp -> term .)
    LESSER          reduce using rule 54 (exp -> term .)
    GREATER         reduce using rule 54 (exp -> term .)
    EQUAL           reduce using rule 54 (exp -> term .)
    NOTEQUAL        reduce using rule 54 (exp -> term .)
    LESSEROREQUAL   reduce using rule 54 (exp -> term .)
    GREATEROREQUAL  reduce using rule 54 (exp -> term .)
    AND             reduce using rule 54 (exp -> term .)
    OR              reduce using rule 54 (exp -> term .)
    COMMA           reduce using rule 54 (exp -> term .)
    RPAREN          reduce using rule 54 (exp -> term .)
    SEMICOLON       reduce using rule 54 (exp -> term .)
    RBRACKET        reduce using rule 54 (exp -> term .)
    TIMES           shift and go to state 64
    DEVIDE          shift and go to state 63


state 44

    (68) boolean -> FALSE .

    TIMES           reduce using rule 68 (boolean -> FALSE .)
    DEVIDE          reduce using rule 68 (boolean -> FALSE .)
    PLUS            reduce using rule 68 (boolean -> FALSE .)
    MINUS           reduce using rule 68 (boolean -> FALSE .)
    LESSER          reduce using rule 68 (boolean -> FALSE .)
    GREATER         reduce using rule 68 (boolean -> FALSE .)
    EQUAL           reduce using rule 68 (boolean -> FALSE .)
    NOTEQUAL        reduce using rule 68 (boolean -> FALSE .)
    LESSEROREQUAL   reduce using rule 68 (boolean -> FALSE .)
    GREATEROREQUAL  reduce using rule 68 (boolean -> FALSE .)
    AND             reduce using rule 68 (boolean -> FALSE .)
    OR              reduce using rule 68 (boolean -> FALSE .)
    RBRACKET        reduce using rule 68 (boolean -> FALSE .)
    RPAREN          reduce using rule 68 (boolean -> FALSE .)
    SEMICOLON       reduce using rule 68 (boolean -> FALSE .)
    COMMA           reduce using rule 68 (boolean -> FALSE .)


state 45

    (64) constant -> INT . push_int_operand
    (70) push_int_operand -> .

    TIMES           reduce using rule 70 (push_int_operand -> .)
    DEVIDE          reduce using rule 70 (push_int_operand -> .)
    PLUS            reduce using rule 70 (push_int_operand -> .)
    MINUS           reduce using rule 70 (push_int_operand -> .)
    LESSER          reduce using rule 70 (push_int_operand -> .)
    GREATER         reduce using rule 70 (push_int_operand -> .)
    EQUAL           reduce using rule 70 (push_int_operand -> .)
    NOTEQUAL        reduce using rule 70 (push_int_operand -> .)
    LESSEROREQUAL   reduce using rule 70 (push_int_operand -> .)
    GREATEROREQUAL  reduce using rule 70 (push_int_operand -> .)
    AND             reduce using rule 70 (push_int_operand -> .)
    OR              reduce using rule 70 (push_int_operand -> .)
    RBRACKET        reduce using rule 70 (push_int_operand -> .)
    RPAREN          reduce using rule 70 (push_int_operand -> .)
    SEMICOLON       reduce using rule 70 (push_int_operand -> .)
    COMMA           reduce using rule 70 (push_int_operand -> .)

    push_int_operand               shift and go to state 65

state 46

    (63) constant -> FLOAT . push_float_operand
    (69) push_float_operand -> .

    TIMES           reduce using rule 69 (push_float_operand -> .)
    DEVIDE          reduce using rule 69 (push_float_operand -> .)
    PLUS            reduce using rule 69 (push_float_operand -> .)
    MINUS           reduce using rule 69 (push_float_operand -> .)
    LESSER          reduce using rule 69 (push_float_operand -> .)
    GREATER         reduce using rule 69 (push_float_operand -> .)
    EQUAL           reduce using rule 69 (push_float_operand -> .)
    NOTEQUAL        reduce using rule 69 (push_float_operand -> .)
    LESSEROREQUAL   reduce using rule 69 (push_float_operand -> .)
    GREATEROREQUAL  reduce using rule 69 (push_float_operand -> .)
    AND             reduce using rule 69 (push_float_operand -> .)
    OR              reduce using rule 69 (push_float_operand -> .)
    RBRACKET        reduce using rule 69 (push_float_operand -> .)
    RPAREN          reduce using rule 69 (push_float_operand -> .)
    SEMICOLON       reduce using rule 69 (push_float_operand -> .)
    COMMA           reduce using rule 69 (push_float_operand -> .)

    push_float_operand             shift and go to state 66

state 47

    (51) expression -> exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 51 (expression -> exp .)
    GREATER         reduce using rule 51 (expression -> exp .)
    EQUAL           reduce using rule 51 (expression -> exp .)
    NOTEQUAL        reduce using rule 51 (expression -> exp .)
    LESSEROREQUAL   reduce using rule 51 (expression -> exp .)
    GREATEROREQUAL  reduce using rule 51 (expression -> exp .)
    AND             reduce using rule 51 (expression -> exp .)
    OR              reduce using rule 51 (expression -> exp .)
    COMMA           reduce using rule 51 (expression -> exp .)
    SEMICOLON       reduce using rule 51 (expression -> exp .)
    RPAREN          reduce using rule 51 (expression -> exp .)
    RBRACKET        reduce using rule 51 (expression -> exp .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68


state 48

    (41) singularexp2 -> NOT . singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 69
    expression                     shift and go to state 49

state 49

    (44) singularexp -> expression .
    (45) expression -> expression . LESSER exp
    (46) expression -> expression . GREATER exp
    (47) expression -> expression . EQUAL exp
    (48) expression -> expression . NOTEQUAL exp
    (49) expression -> expression . LESSEROREQUAL exp
    (50) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 44 (singularexp -> expression .)
    OR              reduce using rule 44 (singularexp -> expression .)
    COMMA           reduce using rule 44 (singularexp -> expression .)
    RPAREN          reduce using rule 44 (singularexp -> expression .)
    RBRACKET        reduce using rule 44 (singularexp -> expression .)
    SEMICOLON       reduce using rule 44 (singularexp -> expression .)
    LESSER          shift and go to state 74
    GREATER         shift and go to state 71
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 70
    LESSEROREQUAL   shift and go to state 72
    GREATEROREQUAL  shift and go to state 75


state 50

    (25) vars -> VAR type ID array store_variable . SEMICOLON

    SEMICOLON       shift and go to state 76


state 51

    (80) function -> FUNCTION type ID LPAREN . parameter RPAREN block
    (82) parameter -> . empty
    (83) parameter -> . parameterprima
    (107) empty -> .
    (84) parameterprima -> . type ID
    (85) parameterprima -> . type ID COMMA parameterprima
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE

    RPAREN          reduce using rule 107 (empty -> .)
    INTTYPE         shift and go to state 13
    FLOATTYPE       shift and go to state 11
    STRINGTYPE      shift and go to state 10
    BOOLEANTYPE     shift and go to state 12

    parameterprima                 shift and go to state 79
    parameter                      shift and go to state 80
    type                           shift and go to state 77
    empty                          shift and go to state 78

state 52

    (79) function -> FUNCTION VOID ID LPAREN . parameter RPAREN block
    (82) parameter -> . empty
    (83) parameter -> . parameterprima
    (107) empty -> .
    (84) parameterprima -> . type ID
    (85) parameterprima -> . type ID COMMA parameterprima
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE

    RPAREN          reduce using rule 107 (empty -> .)
    INTTYPE         shift and go to state 13
    FLOATTYPE       shift and go to state 11
    STRINGTYPE      shift and go to state 10
    BOOLEANTYPE     shift and go to state 12

    parameterprima                 shift and go to state 79
    parameter                      shift and go to state 81
    empty                          shift and go to state 78
    type                           shift and go to state 77

state 53

    (3) main -> INTTYPE MAIN LPAREN . RPAREN switch_to_global_scope block

    RPAREN          shift and go to state 82


state 54

    (26) array -> LBRACKET singularexp2 RBRACKET .

    SEMICOLON       reduce using rule 26 (array -> LBRACKET singularexp2 RBRACKET .)


state 55

    (65) constant -> boolean push_boolean_operand .

    TIMES           reduce using rule 65 (constant -> boolean push_boolean_operand .)
    DEVIDE          reduce using rule 65 (constant -> boolean push_boolean_operand .)
    PLUS            reduce using rule 65 (constant -> boolean push_boolean_operand .)
    MINUS           reduce using rule 65 (constant -> boolean push_boolean_operand .)
    LESSER          reduce using rule 65 (constant -> boolean push_boolean_operand .)
    GREATER         reduce using rule 65 (constant -> boolean push_boolean_operand .)
    EQUAL           reduce using rule 65 (constant -> boolean push_boolean_operand .)
    NOTEQUAL        reduce using rule 65 (constant -> boolean push_boolean_operand .)
    LESSEROREQUAL   reduce using rule 65 (constant -> boolean push_boolean_operand .)
    GREATEROREQUAL  reduce using rule 65 (constant -> boolean push_boolean_operand .)
    AND             reduce using rule 65 (constant -> boolean push_boolean_operand .)
    OR              reduce using rule 65 (constant -> boolean push_boolean_operand .)
    RBRACKET        reduce using rule 65 (constant -> boolean push_boolean_operand .)
    RPAREN          reduce using rule 65 (constant -> boolean push_boolean_operand .)
    SEMICOLON       reduce using rule 65 (constant -> boolean push_boolean_operand .)
    COMMA           reduce using rule 65 (constant -> boolean push_boolean_operand .)


state 56

    (42) singularexp -> singularexp AND . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    expression                     shift and go to state 83

state 57

    (43) singularexp -> singularexp OR . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    expression                     shift and go to state 84

state 58

    (60) factor -> MINUS constant .

    TIMES           reduce using rule 60 (factor -> MINUS constant .)
    DEVIDE          reduce using rule 60 (factor -> MINUS constant .)
    PLUS            reduce using rule 60 (factor -> MINUS constant .)
    MINUS           reduce using rule 60 (factor -> MINUS constant .)
    LESSER          reduce using rule 60 (factor -> MINUS constant .)
    GREATER         reduce using rule 60 (factor -> MINUS constant .)
    EQUAL           reduce using rule 60 (factor -> MINUS constant .)
    NOTEQUAL        reduce using rule 60 (factor -> MINUS constant .)
    LESSEROREQUAL   reduce using rule 60 (factor -> MINUS constant .)
    GREATEROREQUAL  reduce using rule 60 (factor -> MINUS constant .)
    AND             reduce using rule 60 (factor -> MINUS constant .)
    OR              reduce using rule 60 (factor -> MINUS constant .)
    RBRACKET        reduce using rule 60 (factor -> MINUS constant .)
    RPAREN          reduce using rule 60 (factor -> MINUS constant .)
    SEMICOLON       reduce using rule 60 (factor -> MINUS constant .)
    COMMA           reduce using rule 60 (factor -> MINUS constant .)


state 59

    (59) factor -> PLUS constant .

    TIMES           reduce using rule 59 (factor -> PLUS constant .)
    DEVIDE          reduce using rule 59 (factor -> PLUS constant .)
    PLUS            reduce using rule 59 (factor -> PLUS constant .)
    MINUS           reduce using rule 59 (factor -> PLUS constant .)
    LESSER          reduce using rule 59 (factor -> PLUS constant .)
    GREATER         reduce using rule 59 (factor -> PLUS constant .)
    EQUAL           reduce using rule 59 (factor -> PLUS constant .)
    NOTEQUAL        reduce using rule 59 (factor -> PLUS constant .)
    LESSEROREQUAL   reduce using rule 59 (factor -> PLUS constant .)
    GREATEROREQUAL  reduce using rule 59 (factor -> PLUS constant .)
    AND             reduce using rule 59 (factor -> PLUS constant .)
    OR              reduce using rule 59 (factor -> PLUS constant .)
    RBRACKET        reduce using rule 59 (factor -> PLUS constant .)
    RPAREN          reduce using rule 59 (factor -> PLUS constant .)
    SEMICOLON       reduce using rule 59 (factor -> PLUS constant .)
    COMMA           reduce using rule 59 (factor -> PLUS constant .)


state 60

    (66) constant -> STRING push_string_operand .

    TIMES           reduce using rule 66 (constant -> STRING push_string_operand .)
    DEVIDE          reduce using rule 66 (constant -> STRING push_string_operand .)
    PLUS            reduce using rule 66 (constant -> STRING push_string_operand .)
    MINUS           reduce using rule 66 (constant -> STRING push_string_operand .)
    LESSER          reduce using rule 66 (constant -> STRING push_string_operand .)
    GREATER         reduce using rule 66 (constant -> STRING push_string_operand .)
    EQUAL           reduce using rule 66 (constant -> STRING push_string_operand .)
    NOTEQUAL        reduce using rule 66 (constant -> STRING push_string_operand .)
    LESSEROREQUAL   reduce using rule 66 (constant -> STRING push_string_operand .)
    GREATEROREQUAL  reduce using rule 66 (constant -> STRING push_string_operand .)
    AND             reduce using rule 66 (constant -> STRING push_string_operand .)
    OR              reduce using rule 66 (constant -> STRING push_string_operand .)
    RBRACKET        reduce using rule 66 (constant -> STRING push_string_operand .)
    RPAREN          reduce using rule 66 (constant -> STRING push_string_operand .)
    SEMICOLON       reduce using rule 66 (constant -> STRING push_string_operand .)
    COMMA           reduce using rule 66 (constant -> STRING push_string_operand .)


state 61

    (58) factor -> LPAREN singularexp2 . RPAREN

    RPAREN          shift and go to state 85


state 62

    (62) constant -> ID push_id_operand . constantprima
    (73) constantprima -> . empty
    (74) constantprima -> . LBRACKET singularexp2 RBRACKET
    (107) empty -> .

    LBRACKET        shift and go to state 87
    TIMES           reduce using rule 107 (empty -> .)
    DEVIDE          reduce using rule 107 (empty -> .)
    PLUS            reduce using rule 107 (empty -> .)
    MINUS           reduce using rule 107 (empty -> .)
    LESSER          reduce using rule 107 (empty -> .)
    GREATER         reduce using rule 107 (empty -> .)
    EQUAL           reduce using rule 107 (empty -> .)
    NOTEQUAL        reduce using rule 107 (empty -> .)
    LESSEROREQUAL   reduce using rule 107 (empty -> .)
    GREATEROREQUAL  reduce using rule 107 (empty -> .)
    AND             reduce using rule 107 (empty -> .)
    OR              reduce using rule 107 (empty -> .)
    RBRACKET        reduce using rule 107 (empty -> .)
    RPAREN          reduce using rule 107 (empty -> .)
    SEMICOLON       reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    constantprima                  shift and go to state 86
    empty                          shift and go to state 88

state 63

    (56) term -> term DEVIDE . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    factor                         shift and go to state 89

state 64

    (55) term -> term TIMES . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    factor                         shift and go to state 90

state 65

    (64) constant -> INT push_int_operand .

    TIMES           reduce using rule 64 (constant -> INT push_int_operand .)
    DEVIDE          reduce using rule 64 (constant -> INT push_int_operand .)
    PLUS            reduce using rule 64 (constant -> INT push_int_operand .)
    MINUS           reduce using rule 64 (constant -> INT push_int_operand .)
    LESSER          reduce using rule 64 (constant -> INT push_int_operand .)
    GREATER         reduce using rule 64 (constant -> INT push_int_operand .)
    EQUAL           reduce using rule 64 (constant -> INT push_int_operand .)
    NOTEQUAL        reduce using rule 64 (constant -> INT push_int_operand .)
    LESSEROREQUAL   reduce using rule 64 (constant -> INT push_int_operand .)
    GREATEROREQUAL  reduce using rule 64 (constant -> INT push_int_operand .)
    AND             reduce using rule 64 (constant -> INT push_int_operand .)
    OR              reduce using rule 64 (constant -> INT push_int_operand .)
    RBRACKET        reduce using rule 64 (constant -> INT push_int_operand .)
    RPAREN          reduce using rule 64 (constant -> INT push_int_operand .)
    SEMICOLON       reduce using rule 64 (constant -> INT push_int_operand .)
    COMMA           reduce using rule 64 (constant -> INT push_int_operand .)


state 66

    (63) constant -> FLOAT push_float_operand .

    TIMES           reduce using rule 63 (constant -> FLOAT push_float_operand .)
    DEVIDE          reduce using rule 63 (constant -> FLOAT push_float_operand .)
    PLUS            reduce using rule 63 (constant -> FLOAT push_float_operand .)
    MINUS           reduce using rule 63 (constant -> FLOAT push_float_operand .)
    LESSER          reduce using rule 63 (constant -> FLOAT push_float_operand .)
    GREATER         reduce using rule 63 (constant -> FLOAT push_float_operand .)
    EQUAL           reduce using rule 63 (constant -> FLOAT push_float_operand .)
    NOTEQUAL        reduce using rule 63 (constant -> FLOAT push_float_operand .)
    LESSEROREQUAL   reduce using rule 63 (constant -> FLOAT push_float_operand .)
    GREATEROREQUAL  reduce using rule 63 (constant -> FLOAT push_float_operand .)
    AND             reduce using rule 63 (constant -> FLOAT push_float_operand .)
    OR              reduce using rule 63 (constant -> FLOAT push_float_operand .)
    RBRACKET        reduce using rule 63 (constant -> FLOAT push_float_operand .)
    RPAREN          reduce using rule 63 (constant -> FLOAT push_float_operand .)
    SEMICOLON       reduce using rule 63 (constant -> FLOAT push_float_operand .)
    COMMA           reduce using rule 63 (constant -> FLOAT push_float_operand .)


state 67

    (52) exp -> exp PLUS . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 91
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    factor                         shift and go to state 39

state 68

    (53) exp -> exp MINUS . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 92
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    factor                         shift and go to state 39

state 69

    (41) singularexp2 -> NOT singularexp .
    (42) singularexp -> singularexp . AND expression
    (43) singularexp -> singularexp . OR expression

    SEMICOLON       reduce using rule 41 (singularexp2 -> NOT singularexp .)
    COMMA           reduce using rule 41 (singularexp2 -> NOT singularexp .)
    RPAREN          reduce using rule 41 (singularexp2 -> NOT singularexp .)
    RBRACKET        reduce using rule 41 (singularexp2 -> NOT singularexp .)
    AND             shift and go to state 56
    OR              shift and go to state 57


state 70

    (48) expression -> expression NOTEQUAL . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 93
    factor                         shift and go to state 39

state 71

    (46) expression -> expression GREATER . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 94
    factor                         shift and go to state 39

state 72

    (49) expression -> expression LESSEROREQUAL . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 95
    factor                         shift and go to state 39

state 73

    (47) expression -> expression EQUAL . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 96
    factor                         shift and go to state 39

state 74

    (45) expression -> expression LESSER . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 97
    factor                         shift and go to state 39

state 75

    (50) expression -> expression GREATEROREQUAL . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    boolean                        shift and go to state 34
    exp                            shift and go to state 98
    factor                         shift and go to state 39

state 76

    (25) vars -> VAR type ID array store_variable SEMICOLON .

    VAR             reduce using rule 25 (vars -> VAR type ID array store_variable SEMICOLON .)
    FUNCTION        reduce using rule 25 (vars -> VAR type ID array store_variable SEMICOLON .)
    INTTYPE         reduce using rule 25 (vars -> VAR type ID array store_variable SEMICOLON .)


state 77

    (84) parameterprima -> type . ID
    (85) parameterprima -> type . ID COMMA parameterprima

    ID              shift and go to state 99


state 78

    (82) parameter -> empty .

    RPAREN          reduce using rule 82 (parameter -> empty .)


state 79

    (83) parameter -> parameterprima .

    RPAREN          reduce using rule 83 (parameter -> parameterprima .)


state 80

    (80) function -> FUNCTION type ID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 100


state 81

    (79) function -> FUNCTION VOID ID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 101


state 82

    (3) main -> INTTYPE MAIN LPAREN RPAREN . switch_to_global_scope block
    (4) switch_to_global_scope -> .

    LBRACE          reduce using rule 4 (switch_to_global_scope -> .)

    switch_to_global_scope         shift and go to state 102

state 83

    (42) singularexp -> singularexp AND expression .
    (45) expression -> expression . LESSER exp
    (46) expression -> expression . GREATER exp
    (47) expression -> expression . EQUAL exp
    (48) expression -> expression . NOTEQUAL exp
    (49) expression -> expression . LESSEROREQUAL exp
    (50) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 42 (singularexp -> singularexp AND expression .)
    OR              reduce using rule 42 (singularexp -> singularexp AND expression .)
    COMMA           reduce using rule 42 (singularexp -> singularexp AND expression .)
    RPAREN          reduce using rule 42 (singularexp -> singularexp AND expression .)
    RBRACKET        reduce using rule 42 (singularexp -> singularexp AND expression .)
    SEMICOLON       reduce using rule 42 (singularexp -> singularexp AND expression .)
    LESSER          shift and go to state 74
    GREATER         shift and go to state 71
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 70
    LESSEROREQUAL   shift and go to state 72
    GREATEROREQUAL  shift and go to state 75


state 84

    (43) singularexp -> singularexp OR expression .
    (45) expression -> expression . LESSER exp
    (46) expression -> expression . GREATER exp
    (47) expression -> expression . EQUAL exp
    (48) expression -> expression . NOTEQUAL exp
    (49) expression -> expression . LESSEROREQUAL exp
    (50) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 43 (singularexp -> singularexp OR expression .)
    OR              reduce using rule 43 (singularexp -> singularexp OR expression .)
    COMMA           reduce using rule 43 (singularexp -> singularexp OR expression .)
    RPAREN          reduce using rule 43 (singularexp -> singularexp OR expression .)
    RBRACKET        reduce using rule 43 (singularexp -> singularexp OR expression .)
    SEMICOLON       reduce using rule 43 (singularexp -> singularexp OR expression .)
    LESSER          shift and go to state 74
    GREATER         shift and go to state 71
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 70
    LESSEROREQUAL   shift and go to state 72
    GREATEROREQUAL  shift and go to state 75


state 85

    (58) factor -> LPAREN singularexp2 RPAREN .

    TIMES           reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    DEVIDE          reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    PLUS            reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    MINUS           reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    LESSER          reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    GREATER         reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    EQUAL           reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    NOTEQUAL        reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    LESSEROREQUAL   reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    GREATEROREQUAL  reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    AND             reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    OR              reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    RBRACKET        reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    RPAREN          reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    SEMICOLON       reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)
    COMMA           reduce using rule 58 (factor -> LPAREN singularexp2 RPAREN .)


state 86

    (62) constant -> ID push_id_operand constantprima .

    TIMES           reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    DEVIDE          reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    PLUS            reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    MINUS           reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    LESSER          reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    GREATER         reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    EQUAL           reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    NOTEQUAL        reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    LESSEROREQUAL   reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    GREATEROREQUAL  reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    AND             reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    OR              reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    RBRACKET        reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    RPAREN          reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    SEMICOLON       reduce using rule 62 (constant -> ID push_id_operand constantprima .)
    COMMA           reduce using rule 62 (constant -> ID push_id_operand constantprima .)


state 87

    (74) constantprima -> LBRACKET . singularexp2 RBRACKET
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 103
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 88

    (73) constantprima -> empty .

    TIMES           reduce using rule 73 (constantprima -> empty .)
    DEVIDE          reduce using rule 73 (constantprima -> empty .)
    PLUS            reduce using rule 73 (constantprima -> empty .)
    MINUS           reduce using rule 73 (constantprima -> empty .)
    LESSER          reduce using rule 73 (constantprima -> empty .)
    GREATER         reduce using rule 73 (constantprima -> empty .)
    EQUAL           reduce using rule 73 (constantprima -> empty .)
    NOTEQUAL        reduce using rule 73 (constantprima -> empty .)
    LESSEROREQUAL   reduce using rule 73 (constantprima -> empty .)
    GREATEROREQUAL  reduce using rule 73 (constantprima -> empty .)
    AND             reduce using rule 73 (constantprima -> empty .)
    OR              reduce using rule 73 (constantprima -> empty .)
    RBRACKET        reduce using rule 73 (constantprima -> empty .)
    RPAREN          reduce using rule 73 (constantprima -> empty .)
    SEMICOLON       reduce using rule 73 (constantprima -> empty .)
    COMMA           reduce using rule 73 (constantprima -> empty .)


state 89

    (56) term -> term DEVIDE factor .

    TIMES           reduce using rule 56 (term -> term DEVIDE factor .)
    DEVIDE          reduce using rule 56 (term -> term DEVIDE factor .)
    PLUS            reduce using rule 56 (term -> term DEVIDE factor .)
    MINUS           reduce using rule 56 (term -> term DEVIDE factor .)
    LESSER          reduce using rule 56 (term -> term DEVIDE factor .)
    GREATER         reduce using rule 56 (term -> term DEVIDE factor .)
    EQUAL           reduce using rule 56 (term -> term DEVIDE factor .)
    NOTEQUAL        reduce using rule 56 (term -> term DEVIDE factor .)
    LESSEROREQUAL   reduce using rule 56 (term -> term DEVIDE factor .)
    GREATEROREQUAL  reduce using rule 56 (term -> term DEVIDE factor .)
    AND             reduce using rule 56 (term -> term DEVIDE factor .)
    OR              reduce using rule 56 (term -> term DEVIDE factor .)
    RBRACKET        reduce using rule 56 (term -> term DEVIDE factor .)
    RPAREN          reduce using rule 56 (term -> term DEVIDE factor .)
    SEMICOLON       reduce using rule 56 (term -> term DEVIDE factor .)
    COMMA           reduce using rule 56 (term -> term DEVIDE factor .)


state 90

    (55) term -> term TIMES factor .

    TIMES           reduce using rule 55 (term -> term TIMES factor .)
    DEVIDE          reduce using rule 55 (term -> term TIMES factor .)
    PLUS            reduce using rule 55 (term -> term TIMES factor .)
    MINUS           reduce using rule 55 (term -> term TIMES factor .)
    LESSER          reduce using rule 55 (term -> term TIMES factor .)
    GREATER         reduce using rule 55 (term -> term TIMES factor .)
    EQUAL           reduce using rule 55 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 55 (term -> term TIMES factor .)
    LESSEROREQUAL   reduce using rule 55 (term -> term TIMES factor .)
    GREATEROREQUAL  reduce using rule 55 (term -> term TIMES factor .)
    AND             reduce using rule 55 (term -> term TIMES factor .)
    OR              reduce using rule 55 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 55 (term -> term TIMES factor .)
    RPAREN          reduce using rule 55 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 55 (term -> term TIMES factor .)
    COMMA           reduce using rule 55 (term -> term TIMES factor .)


state 91

    (52) exp -> exp PLUS term .
    (55) term -> term . TIMES factor
    (56) term -> term . DEVIDE factor

    PLUS            reduce using rule 52 (exp -> exp PLUS term .)
    MINUS           reduce using rule 52 (exp -> exp PLUS term .)
    LESSER          reduce using rule 52 (exp -> exp PLUS term .)
    GREATER         reduce using rule 52 (exp -> exp PLUS term .)
    EQUAL           reduce using rule 52 (exp -> exp PLUS term .)
    NOTEQUAL        reduce using rule 52 (exp -> exp PLUS term .)
    LESSEROREQUAL   reduce using rule 52 (exp -> exp PLUS term .)
    GREATEROREQUAL  reduce using rule 52 (exp -> exp PLUS term .)
    AND             reduce using rule 52 (exp -> exp PLUS term .)
    OR              reduce using rule 52 (exp -> exp PLUS term .)
    COMMA           reduce using rule 52 (exp -> exp PLUS term .)
    RPAREN          reduce using rule 52 (exp -> exp PLUS term .)
    SEMICOLON       reduce using rule 52 (exp -> exp PLUS term .)
    RBRACKET        reduce using rule 52 (exp -> exp PLUS term .)
    TIMES           shift and go to state 64
    DEVIDE          shift and go to state 63


state 92

    (53) exp -> exp MINUS term .
    (55) term -> term . TIMES factor
    (56) term -> term . DEVIDE factor

    PLUS            reduce using rule 53 (exp -> exp MINUS term .)
    MINUS           reduce using rule 53 (exp -> exp MINUS term .)
    LESSER          reduce using rule 53 (exp -> exp MINUS term .)
    GREATER         reduce using rule 53 (exp -> exp MINUS term .)
    EQUAL           reduce using rule 53 (exp -> exp MINUS term .)
    NOTEQUAL        reduce using rule 53 (exp -> exp MINUS term .)
    LESSEROREQUAL   reduce using rule 53 (exp -> exp MINUS term .)
    GREATEROREQUAL  reduce using rule 53 (exp -> exp MINUS term .)
    AND             reduce using rule 53 (exp -> exp MINUS term .)
    OR              reduce using rule 53 (exp -> exp MINUS term .)
    COMMA           reduce using rule 53 (exp -> exp MINUS term .)
    RPAREN          reduce using rule 53 (exp -> exp MINUS term .)
    SEMICOLON       reduce using rule 53 (exp -> exp MINUS term .)
    RBRACKET        reduce using rule 53 (exp -> exp MINUS term .)
    TIMES           shift and go to state 64
    DEVIDE          shift and go to state 63


state 93

    (48) expression -> expression NOTEQUAL exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    GREATER         reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    EQUAL           reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    NOTEQUAL        reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    LESSEROREQUAL   reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    GREATEROREQUAL  reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    AND             reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    OR              reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    COMMA           reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    SEMICOLON       reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    RPAREN          reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    RBRACKET        reduce using rule 48 (expression -> expression NOTEQUAL exp .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68


state 94

    (46) expression -> expression GREATER exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 46 (expression -> expression GREATER exp .)
    GREATER         reduce using rule 46 (expression -> expression GREATER exp .)
    EQUAL           reduce using rule 46 (expression -> expression GREATER exp .)
    NOTEQUAL        reduce using rule 46 (expression -> expression GREATER exp .)
    LESSEROREQUAL   reduce using rule 46 (expression -> expression GREATER exp .)
    GREATEROREQUAL  reduce using rule 46 (expression -> expression GREATER exp .)
    AND             reduce using rule 46 (expression -> expression GREATER exp .)
    OR              reduce using rule 46 (expression -> expression GREATER exp .)
    COMMA           reduce using rule 46 (expression -> expression GREATER exp .)
    SEMICOLON       reduce using rule 46 (expression -> expression GREATER exp .)
    RPAREN          reduce using rule 46 (expression -> expression GREATER exp .)
    RBRACKET        reduce using rule 46 (expression -> expression GREATER exp .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68


state 95

    (49) expression -> expression LESSEROREQUAL exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    GREATER         reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    EQUAL           reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    NOTEQUAL        reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    LESSEROREQUAL   reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    GREATEROREQUAL  reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    AND             reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    OR              reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    COMMA           reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    SEMICOLON       reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    RPAREN          reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    RBRACKET        reduce using rule 49 (expression -> expression LESSEROREQUAL exp .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68


state 96

    (47) expression -> expression EQUAL exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 47 (expression -> expression EQUAL exp .)
    GREATER         reduce using rule 47 (expression -> expression EQUAL exp .)
    EQUAL           reduce using rule 47 (expression -> expression EQUAL exp .)
    NOTEQUAL        reduce using rule 47 (expression -> expression EQUAL exp .)
    LESSEROREQUAL   reduce using rule 47 (expression -> expression EQUAL exp .)
    GREATEROREQUAL  reduce using rule 47 (expression -> expression EQUAL exp .)
    AND             reduce using rule 47 (expression -> expression EQUAL exp .)
    OR              reduce using rule 47 (expression -> expression EQUAL exp .)
    COMMA           reduce using rule 47 (expression -> expression EQUAL exp .)
    SEMICOLON       reduce using rule 47 (expression -> expression EQUAL exp .)
    RPAREN          reduce using rule 47 (expression -> expression EQUAL exp .)
    RBRACKET        reduce using rule 47 (expression -> expression EQUAL exp .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68


state 97

    (45) expression -> expression LESSER exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 45 (expression -> expression LESSER exp .)
    GREATER         reduce using rule 45 (expression -> expression LESSER exp .)
    EQUAL           reduce using rule 45 (expression -> expression LESSER exp .)
    NOTEQUAL        reduce using rule 45 (expression -> expression LESSER exp .)
    LESSEROREQUAL   reduce using rule 45 (expression -> expression LESSER exp .)
    GREATEROREQUAL  reduce using rule 45 (expression -> expression LESSER exp .)
    AND             reduce using rule 45 (expression -> expression LESSER exp .)
    OR              reduce using rule 45 (expression -> expression LESSER exp .)
    COMMA           reduce using rule 45 (expression -> expression LESSER exp .)
    SEMICOLON       reduce using rule 45 (expression -> expression LESSER exp .)
    RPAREN          reduce using rule 45 (expression -> expression LESSER exp .)
    RBRACKET        reduce using rule 45 (expression -> expression LESSER exp .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68


state 98

    (50) expression -> expression GREATEROREQUAL exp .
    (52) exp -> exp . PLUS term
    (53) exp -> exp . MINUS term

    LESSER          reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    GREATER         reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    EQUAL           reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    NOTEQUAL        reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    LESSEROREQUAL   reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    GREATEROREQUAL  reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    AND             reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    OR              reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    COMMA           reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    SEMICOLON       reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    RPAREN          reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    RBRACKET        reduce using rule 50 (expression -> expression GREATEROREQUAL exp .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68


state 99

    (84) parameterprima -> type ID .
    (85) parameterprima -> type ID . COMMA parameterprima

    RPAREN          reduce using rule 84 (parameterprima -> type ID .)
    COMMA           shift and go to state 104


state 100

    (80) function -> FUNCTION type ID LPAREN parameter RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 106

state 101

    (79) function -> FUNCTION VOID ID LPAREN parameter RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 107

state 102

    (3) main -> INTTYPE MAIN LPAREN RPAREN switch_to_global_scope . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 108

state 103

    (74) constantprima -> LBRACKET singularexp2 . RBRACKET

    RBRACKET        shift and go to state 109


state 104

    (85) parameterprima -> type ID COMMA . parameterprima
    (84) parameterprima -> . type ID
    (85) parameterprima -> . type ID COMMA parameterprima
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE

    INTTYPE         shift and go to state 13
    FLOATTYPE       shift and go to state 11
    STRINGTYPE      shift and go to state 10
    BOOLEANTYPE     shift and go to state 12

    parameterprima                 shift and go to state 110
    type                           shift and go to state 77

state 105

    (9) block -> LBRACE . blockprima RBRACE
    (10) blockprima -> . statute blockprima
    (11) blockprima -> . empty
    (12) statute -> . assignment
    (13) statute -> . condition
    (14) statute -> . write
    (15) statute -> . read
    (16) statute -> . cycle
    (17) statute -> . functioncall
    (18) statute -> . predefined
    (19) statute -> . return
    (107) empty -> .
    (33) assignment -> . ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
    (20) condition -> . IF LPAREN conditionprima RPAREN block
    (86) write -> . PRINT LPAREN singularexp2 RPAREN SEMICOLON
    (87) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (88) cycle -> . WHILE LPAREN singularexp2 RPAREN block
    (75) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (95) predefined -> . drawline
    (96) predefined -> . drawsquare
    (97) predefined -> . drawtriangle
    (98) predefined -> . drawcircle
    (99) predefined -> . drawcurve
    (100) predefined -> . drawpolygon
    (81) return -> . RETURN singularexp2 SEMICOLON
    (101) drawline -> . DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (102) drawsquare -> . DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (103) drawtriangle -> . DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (104) drawcircle -> . DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (105) drawcurve -> . DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (106) drawpolygon -> . DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 107 (empty -> .)
    ID              shift and go to state 131
    IF              shift and go to state 133
    PRINT           shift and go to state 115
    WHILE           shift and go to state 114
    RETURN          shift and go to state 112
    DRAWLINE        shift and go to state 130
    DRAWSQUARE      shift and go to state 121
    DRAWTRIANGLE    shift and go to state 113
    DRAWCIRCLE      shift and go to state 118
    DRAWCURVE       shift and go to state 136
    DRAWPOLYGON     shift and go to state 135

    drawtriangle                   shift and go to state 111
    predefined                     shift and go to state 116
    blockprima                     shift and go to state 117
    drawline                       shift and go to state 119
    write                          shift and go to state 120
    functioncall                   shift and go to state 138
    empty                          shift and go to state 124
    return                         shift and go to state 125
    drawpolygon                    shift and go to state 126
    read                           shift and go to state 127
    assignment                     shift and go to state 128
    drawcurve                      shift and go to state 129
    condition                      shift and go to state 132
    cycle                          shift and go to state 123
    statute                        shift and go to state 134
    drawsquare                     shift and go to state 137
    drawcircle                     shift and go to state 122

state 106

    (80) function -> FUNCTION type ID LPAREN parameter RPAREN block .

    FUNCTION        reduce using rule 80 (function -> FUNCTION type ID LPAREN parameter RPAREN block .)
    INTTYPE         reduce using rule 80 (function -> FUNCTION type ID LPAREN parameter RPAREN block .)


state 107

    (79) function -> FUNCTION VOID ID LPAREN parameter RPAREN block .

    FUNCTION        reduce using rule 79 (function -> FUNCTION VOID ID LPAREN parameter RPAREN block .)
    INTTYPE         reduce using rule 79 (function -> FUNCTION VOID ID LPAREN parameter RPAREN block .)


state 108

    (3) main -> INTTYPE MAIN LPAREN RPAREN switch_to_global_scope block .

    $end            reduce using rule 3 (main -> INTTYPE MAIN LPAREN RPAREN switch_to_global_scope block .)


state 109

    (74) constantprima -> LBRACKET singularexp2 RBRACKET .

    TIMES           reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    DEVIDE          reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    PLUS            reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    MINUS           reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    LESSER          reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    GREATER         reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    EQUAL           reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    NOTEQUAL        reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    LESSEROREQUAL   reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    GREATEROREQUAL  reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    AND             reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    OR              reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    RBRACKET        reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    RPAREN          reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    SEMICOLON       reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    COMMA           reduce using rule 74 (constantprima -> LBRACKET singularexp2 RBRACKET .)


state 110

    (85) parameterprima -> type ID COMMA parameterprima .

    RPAREN          reduce using rule 85 (parameterprima -> type ID COMMA parameterprima .)


state 111

    (97) predefined -> drawtriangle .

    ID              reduce using rule 97 (predefined -> drawtriangle .)
    IF              reduce using rule 97 (predefined -> drawtriangle .)
    PRINT           reduce using rule 97 (predefined -> drawtriangle .)
    WHILE           reduce using rule 97 (predefined -> drawtriangle .)
    RETURN          reduce using rule 97 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 97 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 97 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 97 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 97 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 97 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 97 (predefined -> drawtriangle .)
    RBRACE          reduce using rule 97 (predefined -> drawtriangle .)


state 112

    (81) return -> RETURN . singularexp2 SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 139
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 113

    (103) drawtriangle -> DRAWTRIANGLE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 140


state 114

    (88) cycle -> WHILE . LPAREN singularexp2 RPAREN block

    LPAREN          shift and go to state 141


state 115

    (86) write -> PRINT . LPAREN singularexp2 RPAREN SEMICOLON

    LPAREN          shift and go to state 142


state 116

    (18) statute -> predefined .

    ID              reduce using rule 18 (statute -> predefined .)
    IF              reduce using rule 18 (statute -> predefined .)
    PRINT           reduce using rule 18 (statute -> predefined .)
    WHILE           reduce using rule 18 (statute -> predefined .)
    RETURN          reduce using rule 18 (statute -> predefined .)
    DRAWLINE        reduce using rule 18 (statute -> predefined .)
    DRAWSQUARE      reduce using rule 18 (statute -> predefined .)
    DRAWTRIANGLE    reduce using rule 18 (statute -> predefined .)
    DRAWCIRCLE      reduce using rule 18 (statute -> predefined .)
    DRAWCURVE       reduce using rule 18 (statute -> predefined .)
    DRAWPOLYGON     reduce using rule 18 (statute -> predefined .)
    RBRACE          reduce using rule 18 (statute -> predefined .)


state 117

    (9) block -> LBRACE blockprima . RBRACE

    RBRACE          shift and go to state 143


state 118

    (104) drawcircle -> DRAWCIRCLE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 144


state 119

    (95) predefined -> drawline .

    ID              reduce using rule 95 (predefined -> drawline .)
    IF              reduce using rule 95 (predefined -> drawline .)
    PRINT           reduce using rule 95 (predefined -> drawline .)
    WHILE           reduce using rule 95 (predefined -> drawline .)
    RETURN          reduce using rule 95 (predefined -> drawline .)
    DRAWLINE        reduce using rule 95 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 95 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 95 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 95 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 95 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 95 (predefined -> drawline .)
    RBRACE          reduce using rule 95 (predefined -> drawline .)


state 120

    (14) statute -> write .

    ID              reduce using rule 14 (statute -> write .)
    IF              reduce using rule 14 (statute -> write .)
    PRINT           reduce using rule 14 (statute -> write .)
    WHILE           reduce using rule 14 (statute -> write .)
    RETURN          reduce using rule 14 (statute -> write .)
    DRAWLINE        reduce using rule 14 (statute -> write .)
    DRAWSQUARE      reduce using rule 14 (statute -> write .)
    DRAWTRIANGLE    reduce using rule 14 (statute -> write .)
    DRAWCIRCLE      reduce using rule 14 (statute -> write .)
    DRAWCURVE       reduce using rule 14 (statute -> write .)
    DRAWPOLYGON     reduce using rule 14 (statute -> write .)
    RBRACE          reduce using rule 14 (statute -> write .)


state 121

    (102) drawsquare -> DRAWSQUARE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 145


state 122

    (98) predefined -> drawcircle .

    ID              reduce using rule 98 (predefined -> drawcircle .)
    IF              reduce using rule 98 (predefined -> drawcircle .)
    PRINT           reduce using rule 98 (predefined -> drawcircle .)
    WHILE           reduce using rule 98 (predefined -> drawcircle .)
    RETURN          reduce using rule 98 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 98 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 98 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 98 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 98 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 98 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 98 (predefined -> drawcircle .)
    RBRACE          reduce using rule 98 (predefined -> drawcircle .)


state 123

    (16) statute -> cycle .

    ID              reduce using rule 16 (statute -> cycle .)
    IF              reduce using rule 16 (statute -> cycle .)
    PRINT           reduce using rule 16 (statute -> cycle .)
    WHILE           reduce using rule 16 (statute -> cycle .)
    RETURN          reduce using rule 16 (statute -> cycle .)
    DRAWLINE        reduce using rule 16 (statute -> cycle .)
    DRAWSQUARE      reduce using rule 16 (statute -> cycle .)
    DRAWTRIANGLE    reduce using rule 16 (statute -> cycle .)
    DRAWCIRCLE      reduce using rule 16 (statute -> cycle .)
    DRAWCURVE       reduce using rule 16 (statute -> cycle .)
    DRAWPOLYGON     reduce using rule 16 (statute -> cycle .)
    RBRACE          reduce using rule 16 (statute -> cycle .)


state 124

    (11) blockprima -> empty .

    RBRACE          reduce using rule 11 (blockprima -> empty .)


state 125

    (19) statute -> return .

    ID              reduce using rule 19 (statute -> return .)
    IF              reduce using rule 19 (statute -> return .)
    PRINT           reduce using rule 19 (statute -> return .)
    WHILE           reduce using rule 19 (statute -> return .)
    RETURN          reduce using rule 19 (statute -> return .)
    DRAWLINE        reduce using rule 19 (statute -> return .)
    DRAWSQUARE      reduce using rule 19 (statute -> return .)
    DRAWTRIANGLE    reduce using rule 19 (statute -> return .)
    DRAWCIRCLE      reduce using rule 19 (statute -> return .)
    DRAWCURVE       reduce using rule 19 (statute -> return .)
    DRAWPOLYGON     reduce using rule 19 (statute -> return .)
    RBRACE          reduce using rule 19 (statute -> return .)


state 126

    (100) predefined -> drawpolygon .

    ID              reduce using rule 100 (predefined -> drawpolygon .)
    IF              reduce using rule 100 (predefined -> drawpolygon .)
    PRINT           reduce using rule 100 (predefined -> drawpolygon .)
    WHILE           reduce using rule 100 (predefined -> drawpolygon .)
    RETURN          reduce using rule 100 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 100 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 100 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 100 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 100 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 100 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 100 (predefined -> drawpolygon .)
    RBRACE          reduce using rule 100 (predefined -> drawpolygon .)


state 127

    (15) statute -> read .

    ID              reduce using rule 15 (statute -> read .)
    IF              reduce using rule 15 (statute -> read .)
    PRINT           reduce using rule 15 (statute -> read .)
    WHILE           reduce using rule 15 (statute -> read .)
    RETURN          reduce using rule 15 (statute -> read .)
    DRAWLINE        reduce using rule 15 (statute -> read .)
    DRAWSQUARE      reduce using rule 15 (statute -> read .)
    DRAWTRIANGLE    reduce using rule 15 (statute -> read .)
    DRAWCIRCLE      reduce using rule 15 (statute -> read .)
    DRAWCURVE       reduce using rule 15 (statute -> read .)
    DRAWPOLYGON     reduce using rule 15 (statute -> read .)
    RBRACE          reduce using rule 15 (statute -> read .)


state 128

    (12) statute -> assignment .

    ID              reduce using rule 12 (statute -> assignment .)
    IF              reduce using rule 12 (statute -> assignment .)
    PRINT           reduce using rule 12 (statute -> assignment .)
    WHILE           reduce using rule 12 (statute -> assignment .)
    RETURN          reduce using rule 12 (statute -> assignment .)
    DRAWLINE        reduce using rule 12 (statute -> assignment .)
    DRAWSQUARE      reduce using rule 12 (statute -> assignment .)
    DRAWTRIANGLE    reduce using rule 12 (statute -> assignment .)
    DRAWCIRCLE      reduce using rule 12 (statute -> assignment .)
    DRAWCURVE       reduce using rule 12 (statute -> assignment .)
    DRAWPOLYGON     reduce using rule 12 (statute -> assignment .)
    RBRACE          reduce using rule 12 (statute -> assignment .)


state 129

    (99) predefined -> drawcurve .

    ID              reduce using rule 99 (predefined -> drawcurve .)
    IF              reduce using rule 99 (predefined -> drawcurve .)
    PRINT           reduce using rule 99 (predefined -> drawcurve .)
    WHILE           reduce using rule 99 (predefined -> drawcurve .)
    RETURN          reduce using rule 99 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 99 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 99 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 99 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 99 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 99 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 99 (predefined -> drawcurve .)
    RBRACE          reduce using rule 99 (predefined -> drawcurve .)


state 130

    (101) drawline -> DRAWLINE . LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 146


state 131

    (33) assignment -> ID . push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
    (87) read -> ID . push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (75) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (34) push_id_operand -> .

    LPAREN          shift and go to state 147
    ASSIGN          reduce using rule 34 (push_id_operand -> .)

    push_id_operand                shift and go to state 148

state 132

    (13) statute -> condition .

    ID              reduce using rule 13 (statute -> condition .)
    IF              reduce using rule 13 (statute -> condition .)
    PRINT           reduce using rule 13 (statute -> condition .)
    WHILE           reduce using rule 13 (statute -> condition .)
    RETURN          reduce using rule 13 (statute -> condition .)
    DRAWLINE        reduce using rule 13 (statute -> condition .)
    DRAWSQUARE      reduce using rule 13 (statute -> condition .)
    DRAWTRIANGLE    reduce using rule 13 (statute -> condition .)
    DRAWCIRCLE      reduce using rule 13 (statute -> condition .)
    DRAWCURVE       reduce using rule 13 (statute -> condition .)
    DRAWPOLYGON     reduce using rule 13 (statute -> condition .)
    RBRACE          reduce using rule 13 (statute -> condition .)


state 133

    (20) condition -> IF . LPAREN conditionprima RPAREN block

    LPAREN          shift and go to state 149


state 134

    (10) blockprima -> statute . blockprima
    (10) blockprima -> . statute blockprima
    (11) blockprima -> . empty
    (12) statute -> . assignment
    (13) statute -> . condition
    (14) statute -> . write
    (15) statute -> . read
    (16) statute -> . cycle
    (17) statute -> . functioncall
    (18) statute -> . predefined
    (19) statute -> . return
    (107) empty -> .
    (33) assignment -> . ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
    (20) condition -> . IF LPAREN conditionprima RPAREN block
    (86) write -> . PRINT LPAREN singularexp2 RPAREN SEMICOLON
    (87) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (88) cycle -> . WHILE LPAREN singularexp2 RPAREN block
    (75) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (95) predefined -> . drawline
    (96) predefined -> . drawsquare
    (97) predefined -> . drawtriangle
    (98) predefined -> . drawcircle
    (99) predefined -> . drawcurve
    (100) predefined -> . drawpolygon
    (81) return -> . RETURN singularexp2 SEMICOLON
    (101) drawline -> . DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (102) drawsquare -> . DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (103) drawtriangle -> . DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (104) drawcircle -> . DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (105) drawcurve -> . DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (106) drawpolygon -> . DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 107 (empty -> .)
    ID              shift and go to state 131
    IF              shift and go to state 133
    PRINT           shift and go to state 115
    WHILE           shift and go to state 114
    RETURN          shift and go to state 112
    DRAWLINE        shift and go to state 130
    DRAWSQUARE      shift and go to state 121
    DRAWTRIANGLE    shift and go to state 113
    DRAWCIRCLE      shift and go to state 118
    DRAWCURVE       shift and go to state 136
    DRAWPOLYGON     shift and go to state 135

    drawtriangle                   shift and go to state 111
    predefined                     shift and go to state 116
    blockprima                     shift and go to state 150
    drawline                       shift and go to state 119
    write                          shift and go to state 120
    functioncall                   shift and go to state 138
    empty                          shift and go to state 124
    return                         shift and go to state 125
    drawpolygon                    shift and go to state 126
    read                           shift and go to state 127
    assignment                     shift and go to state 128
    drawcurve                      shift and go to state 129
    condition                      shift and go to state 132
    cycle                          shift and go to state 123
    statute                        shift and go to state 134
    drawsquare                     shift and go to state 137
    drawcircle                     shift and go to state 122

state 135

    (106) drawpolygon -> DRAWPOLYGON . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 151


state 136

    (105) drawcurve -> DRAWCURVE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 152


state 137

    (96) predefined -> drawsquare .

    ID              reduce using rule 96 (predefined -> drawsquare .)
    IF              reduce using rule 96 (predefined -> drawsquare .)
    PRINT           reduce using rule 96 (predefined -> drawsquare .)
    WHILE           reduce using rule 96 (predefined -> drawsquare .)
    RETURN          reduce using rule 96 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 96 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 96 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 96 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 96 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 96 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 96 (predefined -> drawsquare .)
    RBRACE          reduce using rule 96 (predefined -> drawsquare .)


state 138

    (17) statute -> functioncall .

    ID              reduce using rule 17 (statute -> functioncall .)
    IF              reduce using rule 17 (statute -> functioncall .)
    PRINT           reduce using rule 17 (statute -> functioncall .)
    WHILE           reduce using rule 17 (statute -> functioncall .)
    RETURN          reduce using rule 17 (statute -> functioncall .)
    DRAWLINE        reduce using rule 17 (statute -> functioncall .)
    DRAWSQUARE      reduce using rule 17 (statute -> functioncall .)
    DRAWTRIANGLE    reduce using rule 17 (statute -> functioncall .)
    DRAWCIRCLE      reduce using rule 17 (statute -> functioncall .)
    DRAWCURVE       reduce using rule 17 (statute -> functioncall .)
    DRAWPOLYGON     reduce using rule 17 (statute -> functioncall .)
    RBRACE          reduce using rule 17 (statute -> functioncall .)


state 139

    (81) return -> RETURN singularexp2 . SEMICOLON

    SEMICOLON       shift and go to state 153


state 140

    (103) drawtriangle -> DRAWTRIANGLE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 154
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 141

    (88) cycle -> WHILE LPAREN . singularexp2 RPAREN block
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 155
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 142

    (86) write -> PRINT LPAREN . singularexp2 RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 156
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 143

    (9) block -> LBRACE blockprima RBRACE .

    FUNCTION        reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    INTTYPE         reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    $end            reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    ID              reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    IF              reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    PRINT           reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    WHILE           reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    RETURN          reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWLINE        reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWSQUARE      reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWTRIANGLE    reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWCIRCLE      reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWCURVE       reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWPOLYGON     reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    RBRACE          reduce using rule 9 (block -> LBRACE blockprima RBRACE .)


state 144

    (104) drawcircle -> DRAWCIRCLE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 157
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 145

    (102) drawsquare -> DRAWSQUARE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 158
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 146

    (101) drawline -> DRAWLINE LPAREN . singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 159
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 147

    (75) functioncall -> ID LPAREN . funcparam RPAREN SEMICOLON
    (76) funcparam -> . empty
    (77) funcparam -> . singularexp2
    (78) funcparam -> . singularexp COMMA funcparam
    (107) empty -> .
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    RPAREN          reduce using rule 107 (empty -> .)
    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    funcparam                      shift and go to state 163
    singularexp2                   shift and go to state 160
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    constant                       shift and go to state 32
    singularexp                    shift and go to state 161
    expression                     shift and go to state 49
    empty                          shift and go to state 162

state 148

    (33) assignment -> ID push_id_operand . ASSIGN push_operator singularexp2 SEMICOLON
    (87) read -> ID push_id_operand . ASSIGN push_operator INPUT SEMICOLON

    ASSIGN          shift and go to state 164


state 149

    (20) condition -> IF LPAREN . conditionprima RPAREN block
    (21) conditionprima -> . condprimaaux
    (22) conditionprima -> . NOT condprimaaux
    (23) condprimaaux -> . functioncall
    (24) condprimaaux -> . singularexp2
    (75) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 170
    ID              shift and go to state 167
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    singularexp2                   shift and go to state 165
    boolean                        shift and go to state 34
    functioncall                   shift and go to state 169
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    constant                       shift and go to state 32
    conditionprima                 shift and go to state 166
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49
    condprimaaux                   shift and go to state 168

state 150

    (10) blockprima -> statute blockprima .

    RBRACE          reduce using rule 10 (blockprima -> statute blockprima .)


state 151

    (106) drawpolygon -> DRAWPOLYGON LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 171
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 152

    (105) drawcurve -> DRAWCURVE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 172
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 153

    (81) return -> RETURN singularexp2 SEMICOLON .

    ID              reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    IF              reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    PRINT           reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    WHILE           reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    RETURN          reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWLINE        reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWSQUARE      reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWCIRCLE      reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWCURVE       reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWPOLYGON     reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)
    RBRACE          reduce using rule 81 (return -> RETURN singularexp2 SEMICOLON .)


state 154

    (103) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 173


state 155

    (88) cycle -> WHILE LPAREN singularexp2 . RPAREN block

    RPAREN          shift and go to state 174


state 156

    (86) write -> PRINT LPAREN singularexp2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 175


state 157

    (104) drawcircle -> DRAWCIRCLE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 176


state 158

    (102) drawsquare -> DRAWSQUARE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 177


state 159

    (101) drawline -> DRAWLINE LPAREN singularexp2 . COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 178


state 160

    (77) funcparam -> singularexp2 .

    RPAREN          reduce using rule 77 (funcparam -> singularexp2 .)


state 161

    (78) funcparam -> singularexp . COMMA funcparam
    (40) singularexp2 -> singularexp .
    (42) singularexp -> singularexp . AND expression
    (43) singularexp -> singularexp . OR expression

    COMMA           shift and go to state 179
    RPAREN          reduce using rule 40 (singularexp2 -> singularexp .)
    AND             shift and go to state 56
    OR              shift and go to state 57


state 162

    (76) funcparam -> empty .

    RPAREN          reduce using rule 76 (funcparam -> empty .)


state 163

    (75) functioncall -> ID LPAREN funcparam . RPAREN SEMICOLON

    RPAREN          shift and go to state 180


state 164

    (33) assignment -> ID push_id_operand ASSIGN . push_operator singularexp2 SEMICOLON
    (87) read -> ID push_id_operand ASSIGN . push_operator INPUT SEMICOLON
    (35) push_operator -> .

    INPUT           reduce using rule 35 (push_operator -> .)
    NOT             reduce using rule 35 (push_operator -> .)
    LPAREN          reduce using rule 35 (push_operator -> .)
    PLUS            reduce using rule 35 (push_operator -> .)
    MINUS           reduce using rule 35 (push_operator -> .)
    ID              reduce using rule 35 (push_operator -> .)
    FLOAT           reduce using rule 35 (push_operator -> .)
    INT             reduce using rule 35 (push_operator -> .)
    STRING          reduce using rule 35 (push_operator -> .)
    TRUE            reduce using rule 35 (push_operator -> .)
    FALSE           reduce using rule 35 (push_operator -> .)

    push_operator                  shift and go to state 181

state 165

    (24) condprimaaux -> singularexp2 .

    RPAREN          reduce using rule 24 (condprimaaux -> singularexp2 .)


state 166

    (20) condition -> IF LPAREN conditionprima . RPAREN block

    RPAREN          shift and go to state 182


state 167

    (75) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (62) constant -> ID . push_id_operand constantprima
    (34) push_id_operand -> .

    LPAREN          shift and go to state 147
    LBRACKET        reduce using rule 34 (push_id_operand -> .)
    TIMES           reduce using rule 34 (push_id_operand -> .)
    DEVIDE          reduce using rule 34 (push_id_operand -> .)
    PLUS            reduce using rule 34 (push_id_operand -> .)
    MINUS           reduce using rule 34 (push_id_operand -> .)
    LESSER          reduce using rule 34 (push_id_operand -> .)
    GREATER         reduce using rule 34 (push_id_operand -> .)
    EQUAL           reduce using rule 34 (push_id_operand -> .)
    NOTEQUAL        reduce using rule 34 (push_id_operand -> .)
    LESSEROREQUAL   reduce using rule 34 (push_id_operand -> .)
    GREATEROREQUAL  reduce using rule 34 (push_id_operand -> .)
    AND             reduce using rule 34 (push_id_operand -> .)
    OR              reduce using rule 34 (push_id_operand -> .)
    RPAREN          reduce using rule 34 (push_id_operand -> .)

    push_id_operand                shift and go to state 62

state 168

    (21) conditionprima -> condprimaaux .

    RPAREN          reduce using rule 21 (conditionprima -> condprimaaux .)


state 169

    (23) condprimaaux -> functioncall .

    RPAREN          reduce using rule 23 (condprimaaux -> functioncall .)


state 170

    (22) conditionprima -> NOT . condprimaaux
    (41) singularexp2 -> NOT . singularexp
    (23) condprimaaux -> . functioncall
    (24) condprimaaux -> . singularexp2
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (75) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    ID              shift and go to state 167
    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    singularexp2                   shift and go to state 165
    boolean                        shift and go to state 34
    functioncall                   shift and go to state 169
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    constant                       shift and go to state 32
    singularexp                    shift and go to state 183
    expression                     shift and go to state 49
    condprimaaux                   shift and go to state 184

state 171

    (106) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 185


state 172

    (105) drawcurve -> DRAWCURVE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 186


state 173

    (103) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 187
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 174

    (88) cycle -> WHILE LPAREN singularexp2 RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 188

state 175

    (86) write -> PRINT LPAREN singularexp2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 176

    (104) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 190
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 177

    (102) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 191
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 178

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA . singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 192
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 179

    (78) funcparam -> singularexp COMMA . funcparam
    (76) funcparam -> . empty
    (77) funcparam -> . singularexp2
    (78) funcparam -> . singularexp COMMA funcparam
    (107) empty -> .
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    RPAREN          reduce using rule 107 (empty -> .)
    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    funcparam                      shift and go to state 193
    singularexp2                   shift and go to state 160
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    constant                       shift and go to state 32
    singularexp                    shift and go to state 161
    expression                     shift and go to state 49
    empty                          shift and go to state 162

state 180

    (75) functioncall -> ID LPAREN funcparam RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 181

    (33) assignment -> ID push_id_operand ASSIGN push_operator . singularexp2 SEMICOLON
    (87) read -> ID push_id_operand ASSIGN push_operator . INPUT SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    INPUT           shift and go to state 196
    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 195
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 182

    (20) condition -> IF LPAREN conditionprima RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 105

    block                          shift and go to state 197

state 183

    (41) singularexp2 -> NOT singularexp .
    (42) singularexp -> singularexp . AND expression
    (43) singularexp -> singularexp . OR expression
    (40) singularexp2 -> singularexp .

  ! reduce/reduce conflict for RPAREN resolved using rule 40 (singularexp2 -> singularexp .)
    AND             shift and go to state 56
    OR              shift and go to state 57
    RPAREN          reduce using rule 40 (singularexp2 -> singularexp .)

  ! RPAREN          [ reduce using rule 41 (singularexp2 -> NOT singularexp .) ]


state 184

    (22) conditionprima -> NOT condprimaaux .

    RPAREN          reduce using rule 22 (conditionprima -> NOT condprimaaux .)


state 185

    (106) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 198
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 186

    (105) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 199
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 187

    (103) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 200


state 188

    (88) cycle -> WHILE LPAREN singularexp2 RPAREN block .

    ID              reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    IF              reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    PRINT           reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    WHILE           reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    RETURN          reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWLINE        reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWSQUARE      reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWTRIANGLE    reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWCIRCLE      reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWCURVE       reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWPOLYGON     reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    RBRACE          reduce using rule 88 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)


state 189

    (86) write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .

    ID              reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    IF              reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    PRINT           reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    RETURN          reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 86 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)


state 190

    (104) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 201


state 191

    (102) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 202


state 192

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 . COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 203


state 193

    (78) funcparam -> singularexp COMMA funcparam .

    RPAREN          reduce using rule 78 (funcparam -> singularexp COMMA funcparam .)


state 194

    (75) functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .

    RPAREN          reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    ID              reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    IF              reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    PRINT           reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    WHILE           reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RETURN          reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RBRACE          reduce using rule 75 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)


state 195

    (33) assignment -> ID push_id_operand ASSIGN push_operator singularexp2 . SEMICOLON

    SEMICOLON       shift and go to state 204


state 196

    (87) read -> ID push_id_operand ASSIGN push_operator INPUT . SEMICOLON

    SEMICOLON       shift and go to state 205


state 197

    (20) condition -> IF LPAREN conditionprima RPAREN block .

    ID              reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    IF              reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    PRINT           reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    WHILE           reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    RETURN          reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWLINE        reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWSQUARE      reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWTRIANGLE    reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWCIRCLE      reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWCURVE       reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWPOLYGON     reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    RBRACE          reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)


state 198

    (106) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 206


state 199

    (105) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 207


state 200

    (103) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (89) color -> . BLUE
    (90) color -> . GREEN
    (91) color -> . RED
    (92) color -> . YELLOW
    (93) color -> . BROWN
    (94) color -> . BLACK

    BLUE            shift and go to state 208
    GREEN           shift and go to state 212
    RED             shift and go to state 214
    YELLOW          shift and go to state 211
    BROWN           shift and go to state 209
    BLACK           shift and go to state 213

    color                          shift and go to state 210

state 201

    (104) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (89) color -> . BLUE
    (90) color -> . GREEN
    (91) color -> . RED
    (92) color -> . YELLOW
    (93) color -> . BROWN
    (94) color -> . BLACK

    BLUE            shift and go to state 208
    GREEN           shift and go to state 212
    RED             shift and go to state 214
    YELLOW          shift and go to state 211
    BROWN           shift and go to state 209
    BLACK           shift and go to state 213

    color                          shift and go to state 215

state 202

    (102) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (89) color -> . BLUE
    (90) color -> . GREEN
    (91) color -> . RED
    (92) color -> . YELLOW
    (93) color -> . BROWN
    (94) color -> . BLACK

    BLUE            shift and go to state 208
    GREEN           shift and go to state 212
    RED             shift and go to state 214
    YELLOW          shift and go to state 211
    BROWN           shift and go to state 209
    BLACK           shift and go to state 213

    color                          shift and go to state 216

state 203

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 217
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 204

    (33) assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .

    ID              reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    IF              reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    PRINT           reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    WHILE           reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    RETURN          reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWLINE        reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWSQUARE      reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWCIRCLE      reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWCURVE       reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWPOLYGON     reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    RBRACE          reduce using rule 33 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)


state 205

    (87) read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .

    ID              reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    IF              reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    PRINT           reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    WHILE           reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RETURN          reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RBRACE          reduce using rule 87 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)


state 206

    (106) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (89) color -> . BLUE
    (90) color -> . GREEN
    (91) color -> . RED
    (92) color -> . YELLOW
    (93) color -> . BROWN
    (94) color -> . BLACK

    BLUE            shift and go to state 208
    GREEN           shift and go to state 212
    RED             shift and go to state 214
    YELLOW          shift and go to state 211
    BROWN           shift and go to state 209
    BLACK           shift and go to state 213

    color                          shift and go to state 218

state 207

    (105) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (89) color -> . BLUE
    (90) color -> . GREEN
    (91) color -> . RED
    (92) color -> . YELLOW
    (93) color -> . BROWN
    (94) color -> . BLACK

    BLUE            shift and go to state 208
    GREEN           shift and go to state 212
    RED             shift and go to state 214
    YELLOW          shift and go to state 211
    BROWN           shift and go to state 209
    BLACK           shift and go to state 213

    color                          shift and go to state 219

state 208

    (89) color -> BLUE .

    RPAREN          reduce using rule 89 (color -> BLUE .)


state 209

    (93) color -> BROWN .

    RPAREN          reduce using rule 93 (color -> BROWN .)


state 210

    (103) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 220


state 211

    (92) color -> YELLOW .

    RPAREN          reduce using rule 92 (color -> YELLOW .)


state 212

    (90) color -> GREEN .

    RPAREN          reduce using rule 90 (color -> GREEN .)


state 213

    (94) color -> BLACK .

    RPAREN          reduce using rule 94 (color -> BLACK .)


state 214

    (91) color -> RED .

    RPAREN          reduce using rule 91 (color -> RED .)


state 215

    (104) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 221


state 216

    (102) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 222


state 217

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 223


state 218

    (106) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 224


state 219

    (105) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 225


state 220

    (103) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 221

    (104) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 227


state 222

    (102) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 223

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (40) singularexp2 -> . singularexp
    (41) singularexp2 -> . NOT singularexp
    (42) singularexp -> . singularexp AND expression
    (43) singularexp -> . singularexp OR expression
    (44) singularexp -> . expression
    (45) expression -> . expression LESSER exp
    (46) expression -> . expression GREATER exp
    (47) expression -> . expression EQUAL exp
    (48) expression -> . expression NOTEQUAL exp
    (49) expression -> . expression LESSEROREQUAL exp
    (50) expression -> . expression GREATEROREQUAL exp
    (51) expression -> . exp
    (52) exp -> . exp PLUS term
    (53) exp -> . exp MINUS term
    (54) exp -> . term
    (55) term -> . term TIMES factor
    (56) term -> . term DEVIDE factor
    (57) term -> . factor
    (58) factor -> . LPAREN singularexp2 RPAREN
    (59) factor -> . PLUS constant
    (60) factor -> . MINUS constant
    (61) factor -> . constant
    (62) constant -> . ID push_id_operand constantprima
    (63) constant -> . FLOAT push_float_operand
    (64) constant -> . INT push_int_operand
    (65) constant -> . boolean push_boolean_operand
    (66) constant -> . STRING push_string_operand
    (67) boolean -> . TRUE
    (68) boolean -> . FALSE

    NOT             shift and go to state 48
    LPAREN          shift and go to state 41
    PLUS            shift and go to state 38
    MINUS           shift and go to state 37
    ID              shift and go to state 42
    FLOAT           shift and go to state 46
    INT             shift and go to state 45
    STRING          shift and go to state 40
    TRUE            shift and go to state 36
    FALSE           shift and go to state 44

    term                           shift and go to state 43
    constant                       shift and go to state 32
    singularexp2                   shift and go to state 229
    boolean                        shift and go to state 34
    exp                            shift and go to state 47
    factor                         shift and go to state 39
    singularexp                    shift and go to state 35
    expression                     shift and go to state 49

state 224

    (106) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 230


state 225

    (105) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 226

    (103) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 103 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 227

    (104) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 104 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 228

    (102) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 102 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 229

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 232


state 230

    (106) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 106 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 231

    (105) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 105 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 232

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (89) color -> . BLUE
    (90) color -> . GREEN
    (91) color -> . RED
    (92) color -> . YELLOW
    (93) color -> . BROWN
    (94) color -> . BLACK

    BLUE            shift and go to state 208
    GREEN           shift and go to state 212
    RED             shift and go to state 214
    YELLOW          shift and go to state 211
    BROWN           shift and go to state 209
    BLACK           shift and go to state 213

    color                          shift and go to state 233

state 233

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 234


state 234

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 235


state 235

    (101) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 101 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 183 resolved using rule (singularexp2 -> singularexp)
WARNING: rejected rule (singularexp2 -> NOT singularexp) in state 183
