Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    TRUE
    STRING
    BREAK
    ELSE
    FALSE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON programvars programfunction main
Rule 2     program -> assignment
Rule 3     program -> read
Rule 4     main -> INTTYPE MAIN LPAREN RPAREN block
Rule 5     programvars -> vars programvars
Rule 6     programvars -> empty
Rule 7     programfunction -> function programfunction
Rule 8     programfunction -> empty
Rule 9     block -> LBRACE blockprima RBRACE
Rule 10    blockprima -> statute blockprima
Rule 11    blockprima -> empty
Rule 12    statute -> assignment
Rule 13    statute -> condition
Rule 14    statute -> write
Rule 15    statute -> read
Rule 16    statute -> cycle
Rule 17    statute -> functioncall
Rule 18    statute -> predefined
Rule 19    statute -> return
Rule 20    condition -> IF LPAREN conditionprima RPAREN block
Rule 21    conditionprima -> condprimaaux
Rule 22    conditionprima -> NOT condprimaaux
Rule 23    condprimaaux -> functioncall
Rule 24    condprimaaux -> singularexp2
Rule 25    vars -> VAR type varsprima SEMICOLON
Rule 26    varsprima -> ID
Rule 27    varsprima -> ID COMMA varsprima
Rule 28    varsprima -> empty
Rule 29    type -> INTTYPE
Rule 30    type -> FLOATTYPE
Rule 31    type -> STRINGTYPE
Rule 32    type -> BOOLEANTYPE
Rule 33    type -> array
Rule 34    array -> INTTYPE arrayprima
Rule 35    array -> FLOATTYPE arrayprima
Rule 36    array -> STRINGTYPE arrayprima
Rule 37    arrayprima -> LBRACKET INT RBRACKET
Rule 38    assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
Rule 39    push_id_operand -> <empty>
Rule 40    push_operator -> <empty>
Rule 41    assignmentarray -> empty
Rule 42    assignmentarray -> LBRACKET singularexp2 RBRACKET
Rule 43    assignmentprima -> functioncall
Rule 44    assignmentprima -> singularexp2
Rule 45    singularexp2 -> singularexp
Rule 46    singularexp2 -> NOT singularexp
Rule 47    singularexp -> singularexp AND expression
Rule 48    singularexp -> singularexp OR expression
Rule 49    singularexp -> expression
Rule 50    expression -> expression LESSER exp
Rule 51    expression -> expression GREATER exp
Rule 52    expression -> expression EQUAL exp
Rule 53    expression -> expression NOTEQUAL exp
Rule 54    expression -> expression LESSEROREQUAL exp
Rule 55    expression -> expression GREATEROREQUAL exp
Rule 56    expression -> exp
Rule 57    exp -> exp PLUS term
Rule 58    exp -> exp MINUS term
Rule 59    exp -> term
Rule 60    term -> term TIMES factor
Rule 61    term -> term DEVIDE factor
Rule 62    term -> factor
Rule 63    factor -> LPAREN singularexp2 RPAREN
Rule 64    factor -> PLUS constant
Rule 65    factor -> MINUS constant
Rule 66    factor -> constant
Rule 67    constant -> ID constantprima
Rule 68    constant -> FLOAT
Rule 69    constant -> INT
Rule 70    constantprima -> empty
Rule 71    constantprima -> LBRACKET singularexp2 RBRACKET
Rule 72    functioncall -> ID LPAREN funcparam RPAREN SEMICOLON
Rule 73    funcparam -> empty
Rule 74    funcparam -> singularexp2
Rule 75    funcparam -> singularexp COMMA funcparam
Rule 76    function -> FUNCTION VOID ID LPAREN parameter RPAREN block
Rule 77    function -> FUNCTION type ID LPAREN parameter RPAREN block
Rule 78    return -> RETURN singularexp2 SEMICOLON
Rule 79    parameter -> empty
Rule 80    parameter -> parameterprima
Rule 81    parameterprima -> type ID
Rule 82    parameterprima -> type ID COMMA parameterprima
Rule 83    write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON
Rule 84    read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
Rule 85    cycle -> WHILE LPAREN singularexp2 RPAREN block
Rule 86    color -> BLUE
Rule 87    color -> GREEN
Rule 88    color -> RED
Rule 89    color -> YELLOW
Rule 90    color -> BROWN
Rule 91    color -> BLACK
Rule 92    predefined -> drawline
Rule 93    predefined -> drawsquare
Rule 94    predefined -> drawtriangle
Rule 95    predefined -> drawcircle
Rule 96    predefined -> drawcurve
Rule 97    predefined -> drawpolygon
Rule 98    drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 99    drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 100   drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 101   drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 102   drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 103   drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
Rule 104   empty -> <empty>

Terminals, with rules where they appear

AND                  : 47
ASSIGN               : 38 84
BLACK                : 91
BLUE                 : 86
BOOLEANTYPE          : 32
BREAK                : 
BROWN                : 90
COLON                : 
COMMA                : 27 75 82 98 98 98 98 99 99 100 100 101 101 102 102 103 103
DEVIDE               : 61
DRAWCIRCLE           : 101
DRAWCURVE            : 102
DRAWLINE             : 98
DRAWPOLYGON          : 103
DRAWSQUARE           : 99
DRAWTRIANGLE         : 100
ELSE                 : 
EQUAL                : 52
FALSE                : 
FLOAT                : 68
FLOATTYPE            : 30 35
FUNCTION             : 76 77
GREATER              : 51
GREATEROREQUAL       : 55
GREEN                : 87
ID                   : 1 26 27 38 67 72 76 77 81 82 84
IF                   : 20
INPUT                : 84
INT                  : 37 69
INTTYPE              : 4 29 34
LBRACE               : 9
LBRACKET             : 37 42 71
LESSER               : 50
LESSEROREQUAL        : 54
LPAREN               : 4 20 63 72 76 77 83 85 98 99 100 101 102 103
MAIN                 : 4
MINUS                : 58 65
NOT                  : 22 46
NOTEQUAL             : 53
OR                   : 48
PLUS                 : 57 64
PRINT                : 83
PROGRAM              : 1
RBRACE               : 9
RBRACKET             : 37 42 71
RED                  : 88
RETURN               : 78
RPAREN               : 4 20 63 72 76 77 83 85 98 99 100 101 102 103
SEMICOLON            : 1 25 38 72 78 83 84 98 99 100 101 102 103
STRING               : 
STRINGTYPE           : 31 36
TIMES                : 60
TRUE                 : 
VAR                  : 25
VOID                 : 76
WHILE                : 85
YELLOW               : 89
error                : 

Nonterminals, with rules where they appear

array                : 33
arrayprima           : 34 35 36
assignment           : 2 12
assignmentarray      : 
assignmentprima      : 
block                : 4 20 76 77 85
blockprima           : 9 10
color                : 98 99 100 101 102 103
condition            : 13
conditionprima       : 20
condprimaaux         : 21 22
constant             : 64 65 66
constantprima        : 67
cycle                : 16
drawcircle           : 95
drawcurve            : 96
drawline             : 92
drawpolygon          : 97
drawsquare           : 93
drawtriangle         : 94
empty                : 6 8 11 28 41 70 73 79
exp                  : 50 51 52 53 54 55 56 57 58
expression           : 47 48 49 50 51 52 53 54 55
factor               : 60 61 62
funcparam            : 72 75
function             : 7
functioncall         : 17 23 43
main                 : 1
parameter            : 76 77
parameterprima       : 80 82
predefined           : 18
program              : 0
programfunction      : 1 7
programvars          : 1 5
push_id_operand      : 38 84
push_operator        : 38 84
read                 : 3 15
return               : 19
singularexp          : 45 46 47 48 75
singularexp2         : 24 38 42 44 63 71 74 78 83 85 98 98 98 98 99 99 100 100 101 101 102 102 103 103
statute              : 10
term                 : 57 58 59 60 61
type                 : 25 77 81 82
vars                 : 5
varsprima            : 25 27
write                : 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON programvars programfunction main
    (2) program -> . assignment
    (3) program -> . read
    (38) assignment -> . ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
    (84) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON

    PROGRAM         shift and go to state 4
    ID              shift and go to state 5

    program                        shift and go to state 1
    read                           shift and go to state 2
    assignment                     shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (3) program -> read .

    $end            reduce using rule 3 (program -> read .)


state 3

    (2) program -> assignment .

    $end            reduce using rule 2 (program -> assignment .)


state 4

    (1) program -> PROGRAM . ID SEMICOLON programvars programfunction main

    ID              shift and go to state 6


state 5

    (38) assignment -> ID . push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
    (84) read -> ID . push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (39) push_id_operand -> .

    ASSIGN          reduce using rule 39 (push_id_operand -> .)

    push_id_operand                shift and go to state 7

state 6

    (1) program -> PROGRAM ID . SEMICOLON programvars programfunction main

    SEMICOLON       shift and go to state 8


state 7

    (38) assignment -> ID push_id_operand . ASSIGN push_operator singularexp2 SEMICOLON
    (84) read -> ID push_id_operand . ASSIGN push_operator INPUT SEMICOLON

    ASSIGN          shift and go to state 9


state 8

    (1) program -> PROGRAM ID SEMICOLON . programvars programfunction main
    (5) programvars -> . vars programvars
    (6) programvars -> . empty
    (25) vars -> . VAR type varsprima SEMICOLON
    (104) empty -> .

    VAR             shift and go to state 11
    FUNCTION        reduce using rule 104 (empty -> .)
    INTTYPE         reduce using rule 104 (empty -> .)

    vars                           shift and go to state 10
    programvars                    shift and go to state 12
    empty                          shift and go to state 13

state 9

    (38) assignment -> ID push_id_operand ASSIGN . push_operator singularexp2 SEMICOLON
    (84) read -> ID push_id_operand ASSIGN . push_operator INPUT SEMICOLON
    (40) push_operator -> .

    INPUT           reduce using rule 40 (push_operator -> .)
    NOT             reduce using rule 40 (push_operator -> .)
    LPAREN          reduce using rule 40 (push_operator -> .)
    PLUS            reduce using rule 40 (push_operator -> .)
    MINUS           reduce using rule 40 (push_operator -> .)
    ID              reduce using rule 40 (push_operator -> .)
    FLOAT           reduce using rule 40 (push_operator -> .)
    INT             reduce using rule 40 (push_operator -> .)

    push_operator                  shift and go to state 14

state 10

    (5) programvars -> vars . programvars
    (5) programvars -> . vars programvars
    (6) programvars -> . empty
    (25) vars -> . VAR type varsprima SEMICOLON
    (104) empty -> .

    VAR             shift and go to state 11
    FUNCTION        reduce using rule 104 (empty -> .)
    INTTYPE         reduce using rule 104 (empty -> .)

    empty                          shift and go to state 13
    programvars                    shift and go to state 15
    vars                           shift and go to state 10

state 11

    (25) vars -> VAR . type varsprima SEMICOLON
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE
    (33) type -> . array
    (34) array -> . INTTYPE arrayprima
    (35) array -> . FLOATTYPE arrayprima
    (36) array -> . STRINGTYPE arrayprima

    INTTYPE         shift and go to state 17
    FLOATTYPE       shift and go to state 18
    STRINGTYPE      shift and go to state 16
    BOOLEANTYPE     shift and go to state 19

    type                           shift and go to state 20
    array                          shift and go to state 21

state 12

    (1) program -> PROGRAM ID SEMICOLON programvars . programfunction main
    (7) programfunction -> . function programfunction
    (8) programfunction -> . empty
    (76) function -> . FUNCTION VOID ID LPAREN parameter RPAREN block
    (77) function -> . FUNCTION type ID LPAREN parameter RPAREN block
    (104) empty -> .

    FUNCTION        shift and go to state 23
    INTTYPE         reduce using rule 104 (empty -> .)

    function                       shift and go to state 22
    programfunction                shift and go to state 24
    empty                          shift and go to state 25

state 13

    (6) programvars -> empty .

    FUNCTION        reduce using rule 6 (programvars -> empty .)
    INTTYPE         reduce using rule 6 (programvars -> empty .)


state 14

    (38) assignment -> ID push_id_operand ASSIGN push_operator . singularexp2 SEMICOLON
    (84) read -> ID push_id_operand ASSIGN push_operator . INPUT SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    INPUT           shift and go to state 33
    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 27
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 15

    (5) programvars -> vars programvars .

    FUNCTION        reduce using rule 5 (programvars -> vars programvars .)
    INTTYPE         reduce using rule 5 (programvars -> vars programvars .)


state 16

    (31) type -> STRINGTYPE .
    (36) array -> STRINGTYPE . arrayprima
    (37) arrayprima -> . LBRACKET INT RBRACKET

    ID              reduce using rule 31 (type -> STRINGTYPE .)
    SEMICOLON       reduce using rule 31 (type -> STRINGTYPE .)
    LBRACKET        shift and go to state 41

    arrayprima                     shift and go to state 42

state 17

    (29) type -> INTTYPE .
    (34) array -> INTTYPE . arrayprima
    (37) arrayprima -> . LBRACKET INT RBRACKET

    ID              reduce using rule 29 (type -> INTTYPE .)
    SEMICOLON       reduce using rule 29 (type -> INTTYPE .)
    LBRACKET        shift and go to state 41

    arrayprima                     shift and go to state 43

state 18

    (30) type -> FLOATTYPE .
    (35) array -> FLOATTYPE . arrayprima
    (37) arrayprima -> . LBRACKET INT RBRACKET

    ID              reduce using rule 30 (type -> FLOATTYPE .)
    SEMICOLON       reduce using rule 30 (type -> FLOATTYPE .)
    LBRACKET        shift and go to state 41

    arrayprima                     shift and go to state 44

state 19

    (32) type -> BOOLEANTYPE .

    ID              reduce using rule 32 (type -> BOOLEANTYPE .)
    SEMICOLON       reduce using rule 32 (type -> BOOLEANTYPE .)


state 20

    (25) vars -> VAR type . varsprima SEMICOLON
    (26) varsprima -> . ID
    (27) varsprima -> . ID COMMA varsprima
    (28) varsprima -> . empty
    (104) empty -> .

    ID              shift and go to state 46
    SEMICOLON       reduce using rule 104 (empty -> .)

    varsprima                      shift and go to state 45
    empty                          shift and go to state 47

state 21

    (33) type -> array .

    ID              reduce using rule 33 (type -> array .)
    SEMICOLON       reduce using rule 33 (type -> array .)


state 22

    (7) programfunction -> function . programfunction
    (7) programfunction -> . function programfunction
    (8) programfunction -> . empty
    (76) function -> . FUNCTION VOID ID LPAREN parameter RPAREN block
    (77) function -> . FUNCTION type ID LPAREN parameter RPAREN block
    (104) empty -> .

    FUNCTION        shift and go to state 23
    INTTYPE         reduce using rule 104 (empty -> .)

    function                       shift and go to state 22
    programfunction                shift and go to state 48
    empty                          shift and go to state 25

state 23

    (76) function -> FUNCTION . VOID ID LPAREN parameter RPAREN block
    (77) function -> FUNCTION . type ID LPAREN parameter RPAREN block
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE
    (33) type -> . array
    (34) array -> . INTTYPE arrayprima
    (35) array -> . FLOATTYPE arrayprima
    (36) array -> . STRINGTYPE arrayprima

    VOID            shift and go to state 50
    INTTYPE         shift and go to state 17
    FLOATTYPE       shift and go to state 18
    STRINGTYPE      shift and go to state 16
    BOOLEANTYPE     shift and go to state 19

    type                           shift and go to state 49
    array                          shift and go to state 21

state 24

    (1) program -> PROGRAM ID SEMICOLON programvars programfunction . main
    (4) main -> . INTTYPE MAIN LPAREN RPAREN block

    INTTYPE         shift and go to state 51

    main                           shift and go to state 52

state 25

    (8) programfunction -> empty .

    INTTYPE         reduce using rule 8 (programfunction -> empty .)


state 26

    (66) factor -> constant .

    TIMES           reduce using rule 66 (factor -> constant .)
    DEVIDE          reduce using rule 66 (factor -> constant .)
    PLUS            reduce using rule 66 (factor -> constant .)
    MINUS           reduce using rule 66 (factor -> constant .)
    LESSER          reduce using rule 66 (factor -> constant .)
    GREATER         reduce using rule 66 (factor -> constant .)
    EQUAL           reduce using rule 66 (factor -> constant .)
    NOTEQUAL        reduce using rule 66 (factor -> constant .)
    LESSEROREQUAL   reduce using rule 66 (factor -> constant .)
    GREATEROREQUAL  reduce using rule 66 (factor -> constant .)
    AND             reduce using rule 66 (factor -> constant .)
    OR              reduce using rule 66 (factor -> constant .)
    SEMICOLON       reduce using rule 66 (factor -> constant .)
    RPAREN          reduce using rule 66 (factor -> constant .)
    RBRACKET        reduce using rule 66 (factor -> constant .)
    COMMA           reduce using rule 66 (factor -> constant .)


state 27

    (38) assignment -> ID push_id_operand ASSIGN push_operator singularexp2 . SEMICOLON

    SEMICOLON       shift and go to state 53


state 28

    (45) singularexp2 -> singularexp .
    (47) singularexp -> singularexp . AND expression
    (48) singularexp -> singularexp . OR expression

    COMMA           reduce using rule 45 (singularexp2 -> singularexp .)
    SEMICOLON       reduce using rule 45 (singularexp2 -> singularexp .)
    RBRACKET        reduce using rule 45 (singularexp2 -> singularexp .)
    RPAREN          reduce using rule 45 (singularexp2 -> singularexp .)
    AND             shift and go to state 54
    OR              shift and go to state 55


state 29

    (65) factor -> MINUS . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    constant                       shift and go to state 56

state 30

    (64) factor -> PLUS . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    constant                       shift and go to state 57

state 31

    (62) term -> factor .

    TIMES           reduce using rule 62 (term -> factor .)
    DEVIDE          reduce using rule 62 (term -> factor .)
    PLUS            reduce using rule 62 (term -> factor .)
    MINUS           reduce using rule 62 (term -> factor .)
    LESSER          reduce using rule 62 (term -> factor .)
    GREATER         reduce using rule 62 (term -> factor .)
    EQUAL           reduce using rule 62 (term -> factor .)
    NOTEQUAL        reduce using rule 62 (term -> factor .)
    LESSEROREQUAL   reduce using rule 62 (term -> factor .)
    GREATEROREQUAL  reduce using rule 62 (term -> factor .)
    AND             reduce using rule 62 (term -> factor .)
    OR              reduce using rule 62 (term -> factor .)
    COMMA           reduce using rule 62 (term -> factor .)
    SEMICOLON       reduce using rule 62 (term -> factor .)
    RPAREN          reduce using rule 62 (term -> factor .)
    RBRACKET        reduce using rule 62 (term -> factor .)


state 32

    (63) factor -> LPAREN . singularexp2 RPAREN
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 58
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 33

    (84) read -> ID push_id_operand ASSIGN push_operator INPUT . SEMICOLON

    SEMICOLON       shift and go to state 59


state 34

    (67) constant -> ID . constantprima
    (70) constantprima -> . empty
    (71) constantprima -> . LBRACKET singularexp2 RBRACKET
    (104) empty -> .

    LBRACKET        shift and go to state 61
    TIMES           reduce using rule 104 (empty -> .)
    DEVIDE          reduce using rule 104 (empty -> .)
    PLUS            reduce using rule 104 (empty -> .)
    MINUS           reduce using rule 104 (empty -> .)
    LESSER          reduce using rule 104 (empty -> .)
    GREATER         reduce using rule 104 (empty -> .)
    EQUAL           reduce using rule 104 (empty -> .)
    NOTEQUAL        reduce using rule 104 (empty -> .)
    LESSEROREQUAL   reduce using rule 104 (empty -> .)
    GREATEROREQUAL  reduce using rule 104 (empty -> .)
    AND             reduce using rule 104 (empty -> .)
    OR              reduce using rule 104 (empty -> .)
    SEMICOLON       reduce using rule 104 (empty -> .)
    RPAREN          reduce using rule 104 (empty -> .)
    RBRACKET        reduce using rule 104 (empty -> .)
    COMMA           reduce using rule 104 (empty -> .)

    constantprima                  shift and go to state 60
    empty                          shift and go to state 62

state 35

    (59) exp -> term .
    (60) term -> term . TIMES factor
    (61) term -> term . DEVIDE factor

    PLUS            reduce using rule 59 (exp -> term .)
    MINUS           reduce using rule 59 (exp -> term .)
    LESSER          reduce using rule 59 (exp -> term .)
    GREATER         reduce using rule 59 (exp -> term .)
    EQUAL           reduce using rule 59 (exp -> term .)
    NOTEQUAL        reduce using rule 59 (exp -> term .)
    LESSEROREQUAL   reduce using rule 59 (exp -> term .)
    GREATEROREQUAL  reduce using rule 59 (exp -> term .)
    AND             reduce using rule 59 (exp -> term .)
    OR              reduce using rule 59 (exp -> term .)
    SEMICOLON       reduce using rule 59 (exp -> term .)
    RPAREN          reduce using rule 59 (exp -> term .)
    RBRACKET        reduce using rule 59 (exp -> term .)
    COMMA           reduce using rule 59 (exp -> term .)
    TIMES           shift and go to state 64
    DEVIDE          shift and go to state 63


state 36

    (69) constant -> INT .

    TIMES           reduce using rule 69 (constant -> INT .)
    DEVIDE          reduce using rule 69 (constant -> INT .)
    PLUS            reduce using rule 69 (constant -> INT .)
    MINUS           reduce using rule 69 (constant -> INT .)
    LESSER          reduce using rule 69 (constant -> INT .)
    GREATER         reduce using rule 69 (constant -> INT .)
    EQUAL           reduce using rule 69 (constant -> INT .)
    NOTEQUAL        reduce using rule 69 (constant -> INT .)
    LESSEROREQUAL   reduce using rule 69 (constant -> INT .)
    GREATEROREQUAL  reduce using rule 69 (constant -> INT .)
    AND             reduce using rule 69 (constant -> INT .)
    OR              reduce using rule 69 (constant -> INT .)
    SEMICOLON       reduce using rule 69 (constant -> INT .)
    RPAREN          reduce using rule 69 (constant -> INT .)
    RBRACKET        reduce using rule 69 (constant -> INT .)
    COMMA           reduce using rule 69 (constant -> INT .)


state 37

    (68) constant -> FLOAT .

    TIMES           reduce using rule 68 (constant -> FLOAT .)
    DEVIDE          reduce using rule 68 (constant -> FLOAT .)
    PLUS            reduce using rule 68 (constant -> FLOAT .)
    MINUS           reduce using rule 68 (constant -> FLOAT .)
    LESSER          reduce using rule 68 (constant -> FLOAT .)
    GREATER         reduce using rule 68 (constant -> FLOAT .)
    EQUAL           reduce using rule 68 (constant -> FLOAT .)
    NOTEQUAL        reduce using rule 68 (constant -> FLOAT .)
    LESSEROREQUAL   reduce using rule 68 (constant -> FLOAT .)
    GREATEROREQUAL  reduce using rule 68 (constant -> FLOAT .)
    AND             reduce using rule 68 (constant -> FLOAT .)
    OR              reduce using rule 68 (constant -> FLOAT .)
    SEMICOLON       reduce using rule 68 (constant -> FLOAT .)
    RPAREN          reduce using rule 68 (constant -> FLOAT .)
    RBRACKET        reduce using rule 68 (constant -> FLOAT .)
    COMMA           reduce using rule 68 (constant -> FLOAT .)


state 38

    (56) expression -> exp .
    (57) exp -> exp . PLUS term
    (58) exp -> exp . MINUS term

    LESSER          reduce using rule 56 (expression -> exp .)
    GREATER         reduce using rule 56 (expression -> exp .)
    EQUAL           reduce using rule 56 (expression -> exp .)
    NOTEQUAL        reduce using rule 56 (expression -> exp .)
    LESSEROREQUAL   reduce using rule 56 (expression -> exp .)
    GREATEROREQUAL  reduce using rule 56 (expression -> exp .)
    AND             reduce using rule 56 (expression -> exp .)
    OR              reduce using rule 56 (expression -> exp .)
    RBRACKET        reduce using rule 56 (expression -> exp .)
    COMMA           reduce using rule 56 (expression -> exp .)
    RPAREN          reduce using rule 56 (expression -> exp .)
    SEMICOLON       reduce using rule 56 (expression -> exp .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 39

    (46) singularexp2 -> NOT . singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 67
    expression                     shift and go to state 40

state 40

    (49) singularexp -> expression .
    (50) expression -> expression . LESSER exp
    (51) expression -> expression . GREATER exp
    (52) expression -> expression . EQUAL exp
    (53) expression -> expression . NOTEQUAL exp
    (54) expression -> expression . LESSEROREQUAL exp
    (55) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 49 (singularexp -> expression .)
    OR              reduce using rule 49 (singularexp -> expression .)
    RPAREN          reduce using rule 49 (singularexp -> expression .)
    COMMA           reduce using rule 49 (singularexp -> expression .)
    SEMICOLON       reduce using rule 49 (singularexp -> expression .)
    RBRACKET        reduce using rule 49 (singularexp -> expression .)
    LESSER          shift and go to state 72
    GREATER         shift and go to state 69
    EQUAL           shift and go to state 71
    NOTEQUAL        shift and go to state 68
    LESSEROREQUAL   shift and go to state 70
    GREATEROREQUAL  shift and go to state 73


state 41

    (37) arrayprima -> LBRACKET . INT RBRACKET

    INT             shift and go to state 74


state 42

    (36) array -> STRINGTYPE arrayprima .

    ID              reduce using rule 36 (array -> STRINGTYPE arrayprima .)
    SEMICOLON       reduce using rule 36 (array -> STRINGTYPE arrayprima .)


state 43

    (34) array -> INTTYPE arrayprima .

    ID              reduce using rule 34 (array -> INTTYPE arrayprima .)
    SEMICOLON       reduce using rule 34 (array -> INTTYPE arrayprima .)


state 44

    (35) array -> FLOATTYPE arrayprima .

    ID              reduce using rule 35 (array -> FLOATTYPE arrayprima .)
    SEMICOLON       reduce using rule 35 (array -> FLOATTYPE arrayprima .)


state 45

    (25) vars -> VAR type varsprima . SEMICOLON

    SEMICOLON       shift and go to state 75


state 46

    (26) varsprima -> ID .
    (27) varsprima -> ID . COMMA varsprima

    SEMICOLON       reduce using rule 26 (varsprima -> ID .)
    COMMA           shift and go to state 76


state 47

    (28) varsprima -> empty .

    SEMICOLON       reduce using rule 28 (varsprima -> empty .)


state 48

    (7) programfunction -> function programfunction .

    INTTYPE         reduce using rule 7 (programfunction -> function programfunction .)


state 49

    (77) function -> FUNCTION type . ID LPAREN parameter RPAREN block

    ID              shift and go to state 77


state 50

    (76) function -> FUNCTION VOID . ID LPAREN parameter RPAREN block

    ID              shift and go to state 78


state 51

    (4) main -> INTTYPE . MAIN LPAREN RPAREN block

    MAIN            shift and go to state 79


state 52

    (1) program -> PROGRAM ID SEMICOLON programvars programfunction main .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON programvars programfunction main .)


state 53

    (38) assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .

    ID              reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    IF              reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    PRINT           reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    WHILE           reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    RETURN          reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWLINE        reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWSQUARE      reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWCIRCLE      reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWCURVE       reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    DRAWPOLYGON     reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    RBRACE          reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)
    $end            reduce using rule 38 (assignment -> ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON .)


state 54

    (47) singularexp -> singularexp AND . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    expression                     shift and go to state 80

state 55

    (48) singularexp -> singularexp OR . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    expression                     shift and go to state 81

state 56

    (65) factor -> MINUS constant .

    TIMES           reduce using rule 65 (factor -> MINUS constant .)
    DEVIDE          reduce using rule 65 (factor -> MINUS constant .)
    PLUS            reduce using rule 65 (factor -> MINUS constant .)
    MINUS           reduce using rule 65 (factor -> MINUS constant .)
    LESSER          reduce using rule 65 (factor -> MINUS constant .)
    GREATER         reduce using rule 65 (factor -> MINUS constant .)
    EQUAL           reduce using rule 65 (factor -> MINUS constant .)
    NOTEQUAL        reduce using rule 65 (factor -> MINUS constant .)
    LESSEROREQUAL   reduce using rule 65 (factor -> MINUS constant .)
    GREATEROREQUAL  reduce using rule 65 (factor -> MINUS constant .)
    AND             reduce using rule 65 (factor -> MINUS constant .)
    OR              reduce using rule 65 (factor -> MINUS constant .)
    SEMICOLON       reduce using rule 65 (factor -> MINUS constant .)
    RPAREN          reduce using rule 65 (factor -> MINUS constant .)
    RBRACKET        reduce using rule 65 (factor -> MINUS constant .)
    COMMA           reduce using rule 65 (factor -> MINUS constant .)


state 57

    (64) factor -> PLUS constant .

    TIMES           reduce using rule 64 (factor -> PLUS constant .)
    DEVIDE          reduce using rule 64 (factor -> PLUS constant .)
    PLUS            reduce using rule 64 (factor -> PLUS constant .)
    MINUS           reduce using rule 64 (factor -> PLUS constant .)
    LESSER          reduce using rule 64 (factor -> PLUS constant .)
    GREATER         reduce using rule 64 (factor -> PLUS constant .)
    EQUAL           reduce using rule 64 (factor -> PLUS constant .)
    NOTEQUAL        reduce using rule 64 (factor -> PLUS constant .)
    LESSEROREQUAL   reduce using rule 64 (factor -> PLUS constant .)
    GREATEROREQUAL  reduce using rule 64 (factor -> PLUS constant .)
    AND             reduce using rule 64 (factor -> PLUS constant .)
    OR              reduce using rule 64 (factor -> PLUS constant .)
    SEMICOLON       reduce using rule 64 (factor -> PLUS constant .)
    RPAREN          reduce using rule 64 (factor -> PLUS constant .)
    RBRACKET        reduce using rule 64 (factor -> PLUS constant .)
    COMMA           reduce using rule 64 (factor -> PLUS constant .)


state 58

    (63) factor -> LPAREN singularexp2 . RPAREN

    RPAREN          shift and go to state 82


state 59

    (84) read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .

    ID              reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    IF              reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    PRINT           reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    WHILE           reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RETURN          reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWLINE        reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWSQUARE      reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCIRCLE      reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWCURVE       reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    DRAWPOLYGON     reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    RBRACE          reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)
    $end            reduce using rule 84 (read -> ID push_id_operand ASSIGN push_operator INPUT SEMICOLON .)


state 60

    (67) constant -> ID constantprima .

    TIMES           reduce using rule 67 (constant -> ID constantprima .)
    DEVIDE          reduce using rule 67 (constant -> ID constantprima .)
    PLUS            reduce using rule 67 (constant -> ID constantprima .)
    MINUS           reduce using rule 67 (constant -> ID constantprima .)
    LESSER          reduce using rule 67 (constant -> ID constantprima .)
    GREATER         reduce using rule 67 (constant -> ID constantprima .)
    EQUAL           reduce using rule 67 (constant -> ID constantprima .)
    NOTEQUAL        reduce using rule 67 (constant -> ID constantprima .)
    LESSEROREQUAL   reduce using rule 67 (constant -> ID constantprima .)
    GREATEROREQUAL  reduce using rule 67 (constant -> ID constantprima .)
    AND             reduce using rule 67 (constant -> ID constantprima .)
    OR              reduce using rule 67 (constant -> ID constantprima .)
    SEMICOLON       reduce using rule 67 (constant -> ID constantprima .)
    RPAREN          reduce using rule 67 (constant -> ID constantprima .)
    RBRACKET        reduce using rule 67 (constant -> ID constantprima .)
    COMMA           reduce using rule 67 (constant -> ID constantprima .)


state 61

    (71) constantprima -> LBRACKET . singularexp2 RBRACKET
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 83
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 62

    (70) constantprima -> empty .

    TIMES           reduce using rule 70 (constantprima -> empty .)
    DEVIDE          reduce using rule 70 (constantprima -> empty .)
    PLUS            reduce using rule 70 (constantprima -> empty .)
    MINUS           reduce using rule 70 (constantprima -> empty .)
    LESSER          reduce using rule 70 (constantprima -> empty .)
    GREATER         reduce using rule 70 (constantprima -> empty .)
    EQUAL           reduce using rule 70 (constantprima -> empty .)
    NOTEQUAL        reduce using rule 70 (constantprima -> empty .)
    LESSEROREQUAL   reduce using rule 70 (constantprima -> empty .)
    GREATEROREQUAL  reduce using rule 70 (constantprima -> empty .)
    AND             reduce using rule 70 (constantprima -> empty .)
    OR              reduce using rule 70 (constantprima -> empty .)
    RPAREN          reduce using rule 70 (constantprima -> empty .)
    SEMICOLON       reduce using rule 70 (constantprima -> empty .)
    RBRACKET        reduce using rule 70 (constantprima -> empty .)
    COMMA           reduce using rule 70 (constantprima -> empty .)


state 63

    (61) term -> term DEVIDE . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    constant                       shift and go to state 26
    factor                         shift and go to state 84

state 64

    (60) term -> term TIMES . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    constant                       shift and go to state 26
    factor                         shift and go to state 85

state 65

    (57) exp -> exp PLUS . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 86
    constant                       shift and go to state 26
    factor                         shift and go to state 31

state 66

    (58) exp -> exp MINUS . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 87
    constant                       shift and go to state 26
    factor                         shift and go to state 31

state 67

    (46) singularexp2 -> NOT singularexp .
    (47) singularexp -> singularexp . AND expression
    (48) singularexp -> singularexp . OR expression

    COMMA           reduce using rule 46 (singularexp2 -> NOT singularexp .)
    RPAREN          reduce using rule 46 (singularexp2 -> NOT singularexp .)
    SEMICOLON       reduce using rule 46 (singularexp2 -> NOT singularexp .)
    RBRACKET        reduce using rule 46 (singularexp2 -> NOT singularexp .)
    AND             shift and go to state 54
    OR              shift and go to state 55


state 68

    (53) expression -> expression NOTEQUAL . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 88
    factor                         shift and go to state 31

state 69

    (51) expression -> expression GREATER . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 89
    factor                         shift and go to state 31

state 70

    (54) expression -> expression LESSEROREQUAL . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 90
    factor                         shift and go to state 31

state 71

    (52) expression -> expression EQUAL . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 91
    factor                         shift and go to state 31

state 72

    (50) expression -> expression LESSER . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 92
    factor                         shift and go to state 31

state 73

    (55) expression -> expression GREATEROREQUAL . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    exp                            shift and go to state 93
    factor                         shift and go to state 31

state 74

    (37) arrayprima -> LBRACKET INT . RBRACKET

    RBRACKET        shift and go to state 94


state 75

    (25) vars -> VAR type varsprima SEMICOLON .

    VAR             reduce using rule 25 (vars -> VAR type varsprima SEMICOLON .)
    FUNCTION        reduce using rule 25 (vars -> VAR type varsprima SEMICOLON .)
    INTTYPE         reduce using rule 25 (vars -> VAR type varsprima SEMICOLON .)


state 76

    (27) varsprima -> ID COMMA . varsprima
    (26) varsprima -> . ID
    (27) varsprima -> . ID COMMA varsprima
    (28) varsprima -> . empty
    (104) empty -> .

    ID              shift and go to state 46
    SEMICOLON       reduce using rule 104 (empty -> .)

    varsprima                      shift and go to state 95
    empty                          shift and go to state 47

state 77

    (77) function -> FUNCTION type ID . LPAREN parameter RPAREN block

    LPAREN          shift and go to state 96


state 78

    (76) function -> FUNCTION VOID ID . LPAREN parameter RPAREN block

    LPAREN          shift and go to state 97


state 79

    (4) main -> INTTYPE MAIN . LPAREN RPAREN block

    LPAREN          shift and go to state 98


state 80

    (47) singularexp -> singularexp AND expression .
    (50) expression -> expression . LESSER exp
    (51) expression -> expression . GREATER exp
    (52) expression -> expression . EQUAL exp
    (53) expression -> expression . NOTEQUAL exp
    (54) expression -> expression . LESSEROREQUAL exp
    (55) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 47 (singularexp -> singularexp AND expression .)
    OR              reduce using rule 47 (singularexp -> singularexp AND expression .)
    RPAREN          reduce using rule 47 (singularexp -> singularexp AND expression .)
    COMMA           reduce using rule 47 (singularexp -> singularexp AND expression .)
    SEMICOLON       reduce using rule 47 (singularexp -> singularexp AND expression .)
    RBRACKET        reduce using rule 47 (singularexp -> singularexp AND expression .)
    LESSER          shift and go to state 72
    GREATER         shift and go to state 69
    EQUAL           shift and go to state 71
    NOTEQUAL        shift and go to state 68
    LESSEROREQUAL   shift and go to state 70
    GREATEROREQUAL  shift and go to state 73


state 81

    (48) singularexp -> singularexp OR expression .
    (50) expression -> expression . LESSER exp
    (51) expression -> expression . GREATER exp
    (52) expression -> expression . EQUAL exp
    (53) expression -> expression . NOTEQUAL exp
    (54) expression -> expression . LESSEROREQUAL exp
    (55) expression -> expression . GREATEROREQUAL exp

    AND             reduce using rule 48 (singularexp -> singularexp OR expression .)
    OR              reduce using rule 48 (singularexp -> singularexp OR expression .)
    RPAREN          reduce using rule 48 (singularexp -> singularexp OR expression .)
    COMMA           reduce using rule 48 (singularexp -> singularexp OR expression .)
    SEMICOLON       reduce using rule 48 (singularexp -> singularexp OR expression .)
    RBRACKET        reduce using rule 48 (singularexp -> singularexp OR expression .)
    LESSER          shift and go to state 72
    GREATER         shift and go to state 69
    EQUAL           shift and go to state 71
    NOTEQUAL        shift and go to state 68
    LESSEROREQUAL   shift and go to state 70
    GREATEROREQUAL  shift and go to state 73


state 82

    (63) factor -> LPAREN singularexp2 RPAREN .

    TIMES           reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    DEVIDE          reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    PLUS            reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    MINUS           reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    LESSER          reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    GREATER         reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    EQUAL           reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    NOTEQUAL        reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    LESSEROREQUAL   reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    GREATEROREQUAL  reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    AND             reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    OR              reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    SEMICOLON       reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    RPAREN          reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    RBRACKET        reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)
    COMMA           reduce using rule 63 (factor -> LPAREN singularexp2 RPAREN .)


state 83

    (71) constantprima -> LBRACKET singularexp2 . RBRACKET

    RBRACKET        shift and go to state 99


state 84

    (61) term -> term DEVIDE factor .

    TIMES           reduce using rule 61 (term -> term DEVIDE factor .)
    DEVIDE          reduce using rule 61 (term -> term DEVIDE factor .)
    PLUS            reduce using rule 61 (term -> term DEVIDE factor .)
    MINUS           reduce using rule 61 (term -> term DEVIDE factor .)
    LESSER          reduce using rule 61 (term -> term DEVIDE factor .)
    GREATER         reduce using rule 61 (term -> term DEVIDE factor .)
    EQUAL           reduce using rule 61 (term -> term DEVIDE factor .)
    NOTEQUAL        reduce using rule 61 (term -> term DEVIDE factor .)
    LESSEROREQUAL   reduce using rule 61 (term -> term DEVIDE factor .)
    GREATEROREQUAL  reduce using rule 61 (term -> term DEVIDE factor .)
    AND             reduce using rule 61 (term -> term DEVIDE factor .)
    OR              reduce using rule 61 (term -> term DEVIDE factor .)
    COMMA           reduce using rule 61 (term -> term DEVIDE factor .)
    SEMICOLON       reduce using rule 61 (term -> term DEVIDE factor .)
    RPAREN          reduce using rule 61 (term -> term DEVIDE factor .)
    RBRACKET        reduce using rule 61 (term -> term DEVIDE factor .)


state 85

    (60) term -> term TIMES factor .

    TIMES           reduce using rule 60 (term -> term TIMES factor .)
    DEVIDE          reduce using rule 60 (term -> term TIMES factor .)
    PLUS            reduce using rule 60 (term -> term TIMES factor .)
    MINUS           reduce using rule 60 (term -> term TIMES factor .)
    LESSER          reduce using rule 60 (term -> term TIMES factor .)
    GREATER         reduce using rule 60 (term -> term TIMES factor .)
    EQUAL           reduce using rule 60 (term -> term TIMES factor .)
    NOTEQUAL        reduce using rule 60 (term -> term TIMES factor .)
    LESSEROREQUAL   reduce using rule 60 (term -> term TIMES factor .)
    GREATEROREQUAL  reduce using rule 60 (term -> term TIMES factor .)
    AND             reduce using rule 60 (term -> term TIMES factor .)
    OR              reduce using rule 60 (term -> term TIMES factor .)
    COMMA           reduce using rule 60 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 60 (term -> term TIMES factor .)
    RPAREN          reduce using rule 60 (term -> term TIMES factor .)
    RBRACKET        reduce using rule 60 (term -> term TIMES factor .)


state 86

    (57) exp -> exp PLUS term .
    (60) term -> term . TIMES factor
    (61) term -> term . DEVIDE factor

    PLUS            reduce using rule 57 (exp -> exp PLUS term .)
    MINUS           reduce using rule 57 (exp -> exp PLUS term .)
    LESSER          reduce using rule 57 (exp -> exp PLUS term .)
    GREATER         reduce using rule 57 (exp -> exp PLUS term .)
    EQUAL           reduce using rule 57 (exp -> exp PLUS term .)
    NOTEQUAL        reduce using rule 57 (exp -> exp PLUS term .)
    LESSEROREQUAL   reduce using rule 57 (exp -> exp PLUS term .)
    GREATEROREQUAL  reduce using rule 57 (exp -> exp PLUS term .)
    AND             reduce using rule 57 (exp -> exp PLUS term .)
    OR              reduce using rule 57 (exp -> exp PLUS term .)
    SEMICOLON       reduce using rule 57 (exp -> exp PLUS term .)
    RPAREN          reduce using rule 57 (exp -> exp PLUS term .)
    RBRACKET        reduce using rule 57 (exp -> exp PLUS term .)
    COMMA           reduce using rule 57 (exp -> exp PLUS term .)
    TIMES           shift and go to state 64
    DEVIDE          shift and go to state 63


state 87

    (58) exp -> exp MINUS term .
    (60) term -> term . TIMES factor
    (61) term -> term . DEVIDE factor

    PLUS            reduce using rule 58 (exp -> exp MINUS term .)
    MINUS           reduce using rule 58 (exp -> exp MINUS term .)
    LESSER          reduce using rule 58 (exp -> exp MINUS term .)
    GREATER         reduce using rule 58 (exp -> exp MINUS term .)
    EQUAL           reduce using rule 58 (exp -> exp MINUS term .)
    NOTEQUAL        reduce using rule 58 (exp -> exp MINUS term .)
    LESSEROREQUAL   reduce using rule 58 (exp -> exp MINUS term .)
    GREATEROREQUAL  reduce using rule 58 (exp -> exp MINUS term .)
    AND             reduce using rule 58 (exp -> exp MINUS term .)
    OR              reduce using rule 58 (exp -> exp MINUS term .)
    SEMICOLON       reduce using rule 58 (exp -> exp MINUS term .)
    RPAREN          reduce using rule 58 (exp -> exp MINUS term .)
    RBRACKET        reduce using rule 58 (exp -> exp MINUS term .)
    COMMA           reduce using rule 58 (exp -> exp MINUS term .)
    TIMES           shift and go to state 64
    DEVIDE          shift and go to state 63


state 88

    (53) expression -> expression NOTEQUAL exp .
    (57) exp -> exp . PLUS term
    (58) exp -> exp . MINUS term

    LESSER          reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    GREATER         reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    EQUAL           reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    NOTEQUAL        reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    LESSEROREQUAL   reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    GREATEROREQUAL  reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    AND             reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    OR              reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    RBRACKET        reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    COMMA           reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    RPAREN          reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    SEMICOLON       reduce using rule 53 (expression -> expression NOTEQUAL exp .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 89

    (51) expression -> expression GREATER exp .
    (57) exp -> exp . PLUS term
    (58) exp -> exp . MINUS term

    LESSER          reduce using rule 51 (expression -> expression GREATER exp .)
    GREATER         reduce using rule 51 (expression -> expression GREATER exp .)
    EQUAL           reduce using rule 51 (expression -> expression GREATER exp .)
    NOTEQUAL        reduce using rule 51 (expression -> expression GREATER exp .)
    LESSEROREQUAL   reduce using rule 51 (expression -> expression GREATER exp .)
    GREATEROREQUAL  reduce using rule 51 (expression -> expression GREATER exp .)
    AND             reduce using rule 51 (expression -> expression GREATER exp .)
    OR              reduce using rule 51 (expression -> expression GREATER exp .)
    RBRACKET        reduce using rule 51 (expression -> expression GREATER exp .)
    COMMA           reduce using rule 51 (expression -> expression GREATER exp .)
    RPAREN          reduce using rule 51 (expression -> expression GREATER exp .)
    SEMICOLON       reduce using rule 51 (expression -> expression GREATER exp .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 90

    (54) expression -> expression LESSEROREQUAL exp .
    (57) exp -> exp . PLUS term
    (58) exp -> exp . MINUS term

    LESSER          reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    GREATER         reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    EQUAL           reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    NOTEQUAL        reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    LESSEROREQUAL   reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    GREATEROREQUAL  reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    AND             reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    OR              reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    RBRACKET        reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    COMMA           reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    RPAREN          reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    SEMICOLON       reduce using rule 54 (expression -> expression LESSEROREQUAL exp .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 91

    (52) expression -> expression EQUAL exp .
    (57) exp -> exp . PLUS term
    (58) exp -> exp . MINUS term

    LESSER          reduce using rule 52 (expression -> expression EQUAL exp .)
    GREATER         reduce using rule 52 (expression -> expression EQUAL exp .)
    EQUAL           reduce using rule 52 (expression -> expression EQUAL exp .)
    NOTEQUAL        reduce using rule 52 (expression -> expression EQUAL exp .)
    LESSEROREQUAL   reduce using rule 52 (expression -> expression EQUAL exp .)
    GREATEROREQUAL  reduce using rule 52 (expression -> expression EQUAL exp .)
    AND             reduce using rule 52 (expression -> expression EQUAL exp .)
    OR              reduce using rule 52 (expression -> expression EQUAL exp .)
    RBRACKET        reduce using rule 52 (expression -> expression EQUAL exp .)
    COMMA           reduce using rule 52 (expression -> expression EQUAL exp .)
    RPAREN          reduce using rule 52 (expression -> expression EQUAL exp .)
    SEMICOLON       reduce using rule 52 (expression -> expression EQUAL exp .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 92

    (50) expression -> expression LESSER exp .
    (57) exp -> exp . PLUS term
    (58) exp -> exp . MINUS term

    LESSER          reduce using rule 50 (expression -> expression LESSER exp .)
    GREATER         reduce using rule 50 (expression -> expression LESSER exp .)
    EQUAL           reduce using rule 50 (expression -> expression LESSER exp .)
    NOTEQUAL        reduce using rule 50 (expression -> expression LESSER exp .)
    LESSEROREQUAL   reduce using rule 50 (expression -> expression LESSER exp .)
    GREATEROREQUAL  reduce using rule 50 (expression -> expression LESSER exp .)
    AND             reduce using rule 50 (expression -> expression LESSER exp .)
    OR              reduce using rule 50 (expression -> expression LESSER exp .)
    RBRACKET        reduce using rule 50 (expression -> expression LESSER exp .)
    COMMA           reduce using rule 50 (expression -> expression LESSER exp .)
    RPAREN          reduce using rule 50 (expression -> expression LESSER exp .)
    SEMICOLON       reduce using rule 50 (expression -> expression LESSER exp .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 93

    (55) expression -> expression GREATEROREQUAL exp .
    (57) exp -> exp . PLUS term
    (58) exp -> exp . MINUS term

    LESSER          reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    GREATER         reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    EQUAL           reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    NOTEQUAL        reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    LESSEROREQUAL   reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    GREATEROREQUAL  reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    AND             reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    OR              reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    RBRACKET        reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    COMMA           reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    RPAREN          reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    SEMICOLON       reduce using rule 55 (expression -> expression GREATEROREQUAL exp .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66


state 94

    (37) arrayprima -> LBRACKET INT RBRACKET .

    ID              reduce using rule 37 (arrayprima -> LBRACKET INT RBRACKET .)
    SEMICOLON       reduce using rule 37 (arrayprima -> LBRACKET INT RBRACKET .)


state 95

    (27) varsprima -> ID COMMA varsprima .

    SEMICOLON       reduce using rule 27 (varsprima -> ID COMMA varsprima .)


state 96

    (77) function -> FUNCTION type ID LPAREN . parameter RPAREN block
    (79) parameter -> . empty
    (80) parameter -> . parameterprima
    (104) empty -> .
    (81) parameterprima -> . type ID
    (82) parameterprima -> . type ID COMMA parameterprima
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE
    (33) type -> . array
    (34) array -> . INTTYPE arrayprima
    (35) array -> . FLOATTYPE arrayprima
    (36) array -> . STRINGTYPE arrayprima

    RPAREN          reduce using rule 104 (empty -> .)
    INTTYPE         shift and go to state 17
    FLOATTYPE       shift and go to state 18
    STRINGTYPE      shift and go to state 16
    BOOLEANTYPE     shift and go to state 19

    parameter                      shift and go to state 103
    type                           shift and go to state 100
    array                          shift and go to state 21
    parameterprima                 shift and go to state 102
    empty                          shift and go to state 101

state 97

    (76) function -> FUNCTION VOID ID LPAREN . parameter RPAREN block
    (79) parameter -> . empty
    (80) parameter -> . parameterprima
    (104) empty -> .
    (81) parameterprima -> . type ID
    (82) parameterprima -> . type ID COMMA parameterprima
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE
    (33) type -> . array
    (34) array -> . INTTYPE arrayprima
    (35) array -> . FLOATTYPE arrayprima
    (36) array -> . STRINGTYPE arrayprima

    RPAREN          reduce using rule 104 (empty -> .)
    INTTYPE         shift and go to state 17
    FLOATTYPE       shift and go to state 18
    STRINGTYPE      shift and go to state 16
    BOOLEANTYPE     shift and go to state 19

    parameter                      shift and go to state 104
    type                           shift and go to state 100
    array                          shift and go to state 21
    parameterprima                 shift and go to state 102
    empty                          shift and go to state 101

state 98

    (4) main -> INTTYPE MAIN LPAREN . RPAREN block

    RPAREN          shift and go to state 105


state 99

    (71) constantprima -> LBRACKET singularexp2 RBRACKET .

    TIMES           reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    DEVIDE          reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    PLUS            reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    MINUS           reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    LESSER          reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    GREATER         reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    EQUAL           reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    NOTEQUAL        reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    LESSEROREQUAL   reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    GREATEROREQUAL  reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    AND             reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    OR              reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    RPAREN          reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    SEMICOLON       reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    RBRACKET        reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)
    COMMA           reduce using rule 71 (constantprima -> LBRACKET singularexp2 RBRACKET .)


state 100

    (81) parameterprima -> type . ID
    (82) parameterprima -> type . ID COMMA parameterprima

    ID              shift and go to state 106


state 101

    (79) parameter -> empty .

    RPAREN          reduce using rule 79 (parameter -> empty .)


state 102

    (80) parameter -> parameterprima .

    RPAREN          reduce using rule 80 (parameter -> parameterprima .)


state 103

    (77) function -> FUNCTION type ID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 107


state 104

    (76) function -> FUNCTION VOID ID LPAREN parameter . RPAREN block

    RPAREN          shift and go to state 108


state 105

    (4) main -> INTTYPE MAIN LPAREN RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 109

    block                          shift and go to state 110

state 106

    (81) parameterprima -> type ID .
    (82) parameterprima -> type ID . COMMA parameterprima

    RPAREN          reduce using rule 81 (parameterprima -> type ID .)
    COMMA           shift and go to state 111


state 107

    (77) function -> FUNCTION type ID LPAREN parameter RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 109

    block                          shift and go to state 112

state 108

    (76) function -> FUNCTION VOID ID LPAREN parameter RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 109

    block                          shift and go to state 113

state 109

    (9) block -> LBRACE . blockprima RBRACE
    (10) blockprima -> . statute blockprima
    (11) blockprima -> . empty
    (12) statute -> . assignment
    (13) statute -> . condition
    (14) statute -> . write
    (15) statute -> . read
    (16) statute -> . cycle
    (17) statute -> . functioncall
    (18) statute -> . predefined
    (19) statute -> . return
    (104) empty -> .
    (38) assignment -> . ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
    (20) condition -> . IF LPAREN conditionprima RPAREN block
    (83) write -> . PRINT LPAREN singularexp2 RPAREN SEMICOLON
    (84) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (85) cycle -> . WHILE LPAREN singularexp2 RPAREN block
    (72) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (92) predefined -> . drawline
    (93) predefined -> . drawsquare
    (94) predefined -> . drawtriangle
    (95) predefined -> . drawcircle
    (96) predefined -> . drawcurve
    (97) predefined -> . drawpolygon
    (78) return -> . RETURN singularexp2 SEMICOLON
    (98) drawline -> . DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (99) drawsquare -> . DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (100) drawtriangle -> . DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (101) drawcircle -> . DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (102) drawcurve -> . DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (103) drawpolygon -> . DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 104 (empty -> .)
    ID              shift and go to state 134
    IF              shift and go to state 136
    PRINT           shift and go to state 118
    WHILE           shift and go to state 117
    RETURN          shift and go to state 115
    DRAWLINE        shift and go to state 133
    DRAWSQUARE      shift and go to state 124
    DRAWTRIANGLE    shift and go to state 116
    DRAWCIRCLE      shift and go to state 121
    DRAWCURVE       shift and go to state 139
    DRAWPOLYGON     shift and go to state 138

    drawtriangle                   shift and go to state 114
    predefined                     shift and go to state 119
    blockprima                     shift and go to state 120
    drawline                       shift and go to state 122
    write                          shift and go to state 123
    functioncall                   shift and go to state 141
    empty                          shift and go to state 127
    return                         shift and go to state 128
    drawpolygon                    shift and go to state 129
    read                           shift and go to state 130
    assignment                     shift and go to state 131
    drawcurve                      shift and go to state 132
    condition                      shift and go to state 135
    cycle                          shift and go to state 126
    statute                        shift and go to state 137
    drawsquare                     shift and go to state 140
    drawcircle                     shift and go to state 125

state 110

    (4) main -> INTTYPE MAIN LPAREN RPAREN block .

    $end            reduce using rule 4 (main -> INTTYPE MAIN LPAREN RPAREN block .)


state 111

    (82) parameterprima -> type ID COMMA . parameterprima
    (81) parameterprima -> . type ID
    (82) parameterprima -> . type ID COMMA parameterprima
    (29) type -> . INTTYPE
    (30) type -> . FLOATTYPE
    (31) type -> . STRINGTYPE
    (32) type -> . BOOLEANTYPE
    (33) type -> . array
    (34) array -> . INTTYPE arrayprima
    (35) array -> . FLOATTYPE arrayprima
    (36) array -> . STRINGTYPE arrayprima

    INTTYPE         shift and go to state 17
    FLOATTYPE       shift and go to state 18
    STRINGTYPE      shift and go to state 16
    BOOLEANTYPE     shift and go to state 19

    parameterprima                 shift and go to state 142
    array                          shift and go to state 21
    type                           shift and go to state 100

state 112

    (77) function -> FUNCTION type ID LPAREN parameter RPAREN block .

    FUNCTION        reduce using rule 77 (function -> FUNCTION type ID LPAREN parameter RPAREN block .)
    INTTYPE         reduce using rule 77 (function -> FUNCTION type ID LPAREN parameter RPAREN block .)


state 113

    (76) function -> FUNCTION VOID ID LPAREN parameter RPAREN block .

    FUNCTION        reduce using rule 76 (function -> FUNCTION VOID ID LPAREN parameter RPAREN block .)
    INTTYPE         reduce using rule 76 (function -> FUNCTION VOID ID LPAREN parameter RPAREN block .)


state 114

    (94) predefined -> drawtriangle .

    ID              reduce using rule 94 (predefined -> drawtriangle .)
    IF              reduce using rule 94 (predefined -> drawtriangle .)
    PRINT           reduce using rule 94 (predefined -> drawtriangle .)
    WHILE           reduce using rule 94 (predefined -> drawtriangle .)
    RETURN          reduce using rule 94 (predefined -> drawtriangle .)
    DRAWLINE        reduce using rule 94 (predefined -> drawtriangle .)
    DRAWSQUARE      reduce using rule 94 (predefined -> drawtriangle .)
    DRAWTRIANGLE    reduce using rule 94 (predefined -> drawtriangle .)
    DRAWCIRCLE      reduce using rule 94 (predefined -> drawtriangle .)
    DRAWCURVE       reduce using rule 94 (predefined -> drawtriangle .)
    DRAWPOLYGON     reduce using rule 94 (predefined -> drawtriangle .)
    RBRACE          reduce using rule 94 (predefined -> drawtriangle .)


state 115

    (78) return -> RETURN . singularexp2 SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 143
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 116

    (100) drawtriangle -> DRAWTRIANGLE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 144


state 117

    (85) cycle -> WHILE . LPAREN singularexp2 RPAREN block

    LPAREN          shift and go to state 145


state 118

    (83) write -> PRINT . LPAREN singularexp2 RPAREN SEMICOLON

    LPAREN          shift and go to state 146


state 119

    (18) statute -> predefined .

    ID              reduce using rule 18 (statute -> predefined .)
    IF              reduce using rule 18 (statute -> predefined .)
    PRINT           reduce using rule 18 (statute -> predefined .)
    WHILE           reduce using rule 18 (statute -> predefined .)
    RETURN          reduce using rule 18 (statute -> predefined .)
    DRAWLINE        reduce using rule 18 (statute -> predefined .)
    DRAWSQUARE      reduce using rule 18 (statute -> predefined .)
    DRAWTRIANGLE    reduce using rule 18 (statute -> predefined .)
    DRAWCIRCLE      reduce using rule 18 (statute -> predefined .)
    DRAWCURVE       reduce using rule 18 (statute -> predefined .)
    DRAWPOLYGON     reduce using rule 18 (statute -> predefined .)
    RBRACE          reduce using rule 18 (statute -> predefined .)


state 120

    (9) block -> LBRACE blockprima . RBRACE

    RBRACE          shift and go to state 147


state 121

    (101) drawcircle -> DRAWCIRCLE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 148


state 122

    (92) predefined -> drawline .

    ID              reduce using rule 92 (predefined -> drawline .)
    IF              reduce using rule 92 (predefined -> drawline .)
    PRINT           reduce using rule 92 (predefined -> drawline .)
    WHILE           reduce using rule 92 (predefined -> drawline .)
    RETURN          reduce using rule 92 (predefined -> drawline .)
    DRAWLINE        reduce using rule 92 (predefined -> drawline .)
    DRAWSQUARE      reduce using rule 92 (predefined -> drawline .)
    DRAWTRIANGLE    reduce using rule 92 (predefined -> drawline .)
    DRAWCIRCLE      reduce using rule 92 (predefined -> drawline .)
    DRAWCURVE       reduce using rule 92 (predefined -> drawline .)
    DRAWPOLYGON     reduce using rule 92 (predefined -> drawline .)
    RBRACE          reduce using rule 92 (predefined -> drawline .)


state 123

    (14) statute -> write .

    ID              reduce using rule 14 (statute -> write .)
    IF              reduce using rule 14 (statute -> write .)
    PRINT           reduce using rule 14 (statute -> write .)
    WHILE           reduce using rule 14 (statute -> write .)
    RETURN          reduce using rule 14 (statute -> write .)
    DRAWLINE        reduce using rule 14 (statute -> write .)
    DRAWSQUARE      reduce using rule 14 (statute -> write .)
    DRAWTRIANGLE    reduce using rule 14 (statute -> write .)
    DRAWCIRCLE      reduce using rule 14 (statute -> write .)
    DRAWCURVE       reduce using rule 14 (statute -> write .)
    DRAWPOLYGON     reduce using rule 14 (statute -> write .)
    RBRACE          reduce using rule 14 (statute -> write .)


state 124

    (99) drawsquare -> DRAWSQUARE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 149


state 125

    (95) predefined -> drawcircle .

    ID              reduce using rule 95 (predefined -> drawcircle .)
    IF              reduce using rule 95 (predefined -> drawcircle .)
    PRINT           reduce using rule 95 (predefined -> drawcircle .)
    WHILE           reduce using rule 95 (predefined -> drawcircle .)
    RETURN          reduce using rule 95 (predefined -> drawcircle .)
    DRAWLINE        reduce using rule 95 (predefined -> drawcircle .)
    DRAWSQUARE      reduce using rule 95 (predefined -> drawcircle .)
    DRAWTRIANGLE    reduce using rule 95 (predefined -> drawcircle .)
    DRAWCIRCLE      reduce using rule 95 (predefined -> drawcircle .)
    DRAWCURVE       reduce using rule 95 (predefined -> drawcircle .)
    DRAWPOLYGON     reduce using rule 95 (predefined -> drawcircle .)
    RBRACE          reduce using rule 95 (predefined -> drawcircle .)


state 126

    (16) statute -> cycle .

    ID              reduce using rule 16 (statute -> cycle .)
    IF              reduce using rule 16 (statute -> cycle .)
    PRINT           reduce using rule 16 (statute -> cycle .)
    WHILE           reduce using rule 16 (statute -> cycle .)
    RETURN          reduce using rule 16 (statute -> cycle .)
    DRAWLINE        reduce using rule 16 (statute -> cycle .)
    DRAWSQUARE      reduce using rule 16 (statute -> cycle .)
    DRAWTRIANGLE    reduce using rule 16 (statute -> cycle .)
    DRAWCIRCLE      reduce using rule 16 (statute -> cycle .)
    DRAWCURVE       reduce using rule 16 (statute -> cycle .)
    DRAWPOLYGON     reduce using rule 16 (statute -> cycle .)
    RBRACE          reduce using rule 16 (statute -> cycle .)


state 127

    (11) blockprima -> empty .

    RBRACE          reduce using rule 11 (blockprima -> empty .)


state 128

    (19) statute -> return .

    ID              reduce using rule 19 (statute -> return .)
    IF              reduce using rule 19 (statute -> return .)
    PRINT           reduce using rule 19 (statute -> return .)
    WHILE           reduce using rule 19 (statute -> return .)
    RETURN          reduce using rule 19 (statute -> return .)
    DRAWLINE        reduce using rule 19 (statute -> return .)
    DRAWSQUARE      reduce using rule 19 (statute -> return .)
    DRAWTRIANGLE    reduce using rule 19 (statute -> return .)
    DRAWCIRCLE      reduce using rule 19 (statute -> return .)
    DRAWCURVE       reduce using rule 19 (statute -> return .)
    DRAWPOLYGON     reduce using rule 19 (statute -> return .)
    RBRACE          reduce using rule 19 (statute -> return .)


state 129

    (97) predefined -> drawpolygon .

    ID              reduce using rule 97 (predefined -> drawpolygon .)
    IF              reduce using rule 97 (predefined -> drawpolygon .)
    PRINT           reduce using rule 97 (predefined -> drawpolygon .)
    WHILE           reduce using rule 97 (predefined -> drawpolygon .)
    RETURN          reduce using rule 97 (predefined -> drawpolygon .)
    DRAWLINE        reduce using rule 97 (predefined -> drawpolygon .)
    DRAWSQUARE      reduce using rule 97 (predefined -> drawpolygon .)
    DRAWTRIANGLE    reduce using rule 97 (predefined -> drawpolygon .)
    DRAWCIRCLE      reduce using rule 97 (predefined -> drawpolygon .)
    DRAWCURVE       reduce using rule 97 (predefined -> drawpolygon .)
    DRAWPOLYGON     reduce using rule 97 (predefined -> drawpolygon .)
    RBRACE          reduce using rule 97 (predefined -> drawpolygon .)


state 130

    (15) statute -> read .

    ID              reduce using rule 15 (statute -> read .)
    IF              reduce using rule 15 (statute -> read .)
    PRINT           reduce using rule 15 (statute -> read .)
    WHILE           reduce using rule 15 (statute -> read .)
    RETURN          reduce using rule 15 (statute -> read .)
    DRAWLINE        reduce using rule 15 (statute -> read .)
    DRAWSQUARE      reduce using rule 15 (statute -> read .)
    DRAWTRIANGLE    reduce using rule 15 (statute -> read .)
    DRAWCIRCLE      reduce using rule 15 (statute -> read .)
    DRAWCURVE       reduce using rule 15 (statute -> read .)
    DRAWPOLYGON     reduce using rule 15 (statute -> read .)
    RBRACE          reduce using rule 15 (statute -> read .)


state 131

    (12) statute -> assignment .

    ID              reduce using rule 12 (statute -> assignment .)
    IF              reduce using rule 12 (statute -> assignment .)
    PRINT           reduce using rule 12 (statute -> assignment .)
    WHILE           reduce using rule 12 (statute -> assignment .)
    RETURN          reduce using rule 12 (statute -> assignment .)
    DRAWLINE        reduce using rule 12 (statute -> assignment .)
    DRAWSQUARE      reduce using rule 12 (statute -> assignment .)
    DRAWTRIANGLE    reduce using rule 12 (statute -> assignment .)
    DRAWCIRCLE      reduce using rule 12 (statute -> assignment .)
    DRAWCURVE       reduce using rule 12 (statute -> assignment .)
    DRAWPOLYGON     reduce using rule 12 (statute -> assignment .)
    RBRACE          reduce using rule 12 (statute -> assignment .)


state 132

    (96) predefined -> drawcurve .

    ID              reduce using rule 96 (predefined -> drawcurve .)
    IF              reduce using rule 96 (predefined -> drawcurve .)
    PRINT           reduce using rule 96 (predefined -> drawcurve .)
    WHILE           reduce using rule 96 (predefined -> drawcurve .)
    RETURN          reduce using rule 96 (predefined -> drawcurve .)
    DRAWLINE        reduce using rule 96 (predefined -> drawcurve .)
    DRAWSQUARE      reduce using rule 96 (predefined -> drawcurve .)
    DRAWTRIANGLE    reduce using rule 96 (predefined -> drawcurve .)
    DRAWCIRCLE      reduce using rule 96 (predefined -> drawcurve .)
    DRAWCURVE       reduce using rule 96 (predefined -> drawcurve .)
    DRAWPOLYGON     reduce using rule 96 (predefined -> drawcurve .)
    RBRACE          reduce using rule 96 (predefined -> drawcurve .)


state 133

    (98) drawline -> DRAWLINE . LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 150


state 134

    (38) assignment -> ID . push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
    (84) read -> ID . push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (72) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (39) push_id_operand -> .

    LPAREN          shift and go to state 151
    ASSIGN          reduce using rule 39 (push_id_operand -> .)

    push_id_operand                shift and go to state 7

state 135

    (13) statute -> condition .

    ID              reduce using rule 13 (statute -> condition .)
    IF              reduce using rule 13 (statute -> condition .)
    PRINT           reduce using rule 13 (statute -> condition .)
    WHILE           reduce using rule 13 (statute -> condition .)
    RETURN          reduce using rule 13 (statute -> condition .)
    DRAWLINE        reduce using rule 13 (statute -> condition .)
    DRAWSQUARE      reduce using rule 13 (statute -> condition .)
    DRAWTRIANGLE    reduce using rule 13 (statute -> condition .)
    DRAWCIRCLE      reduce using rule 13 (statute -> condition .)
    DRAWCURVE       reduce using rule 13 (statute -> condition .)
    DRAWPOLYGON     reduce using rule 13 (statute -> condition .)
    RBRACE          reduce using rule 13 (statute -> condition .)


state 136

    (20) condition -> IF . LPAREN conditionprima RPAREN block

    LPAREN          shift and go to state 152


state 137

    (10) blockprima -> statute . blockprima
    (10) blockprima -> . statute blockprima
    (11) blockprima -> . empty
    (12) statute -> . assignment
    (13) statute -> . condition
    (14) statute -> . write
    (15) statute -> . read
    (16) statute -> . cycle
    (17) statute -> . functioncall
    (18) statute -> . predefined
    (19) statute -> . return
    (104) empty -> .
    (38) assignment -> . ID push_id_operand ASSIGN push_operator singularexp2 SEMICOLON
    (20) condition -> . IF LPAREN conditionprima RPAREN block
    (83) write -> . PRINT LPAREN singularexp2 RPAREN SEMICOLON
    (84) read -> . ID push_id_operand ASSIGN push_operator INPUT SEMICOLON
    (85) cycle -> . WHILE LPAREN singularexp2 RPAREN block
    (72) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (92) predefined -> . drawline
    (93) predefined -> . drawsquare
    (94) predefined -> . drawtriangle
    (95) predefined -> . drawcircle
    (96) predefined -> . drawcurve
    (97) predefined -> . drawpolygon
    (78) return -> . RETURN singularexp2 SEMICOLON
    (98) drawline -> . DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (99) drawsquare -> . DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (100) drawtriangle -> . DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (101) drawcircle -> . DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (102) drawcurve -> . DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (103) drawpolygon -> . DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    RBRACE          reduce using rule 104 (empty -> .)
    ID              shift and go to state 134
    IF              shift and go to state 136
    PRINT           shift and go to state 118
    WHILE           shift and go to state 117
    RETURN          shift and go to state 115
    DRAWLINE        shift and go to state 133
    DRAWSQUARE      shift and go to state 124
    DRAWTRIANGLE    shift and go to state 116
    DRAWCIRCLE      shift and go to state 121
    DRAWCURVE       shift and go to state 139
    DRAWPOLYGON     shift and go to state 138

    drawtriangle                   shift and go to state 114
    predefined                     shift and go to state 119
    blockprima                     shift and go to state 153
    drawline                       shift and go to state 122
    write                          shift and go to state 123
    functioncall                   shift and go to state 141
    empty                          shift and go to state 127
    return                         shift and go to state 128
    drawpolygon                    shift and go to state 129
    read                           shift and go to state 130
    assignment                     shift and go to state 131
    drawcurve                      shift and go to state 132
    condition                      shift and go to state 135
    cycle                          shift and go to state 126
    statute                        shift and go to state 137
    drawsquare                     shift and go to state 140
    drawcircle                     shift and go to state 125

state 138

    (103) drawpolygon -> DRAWPOLYGON . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 154


state 139

    (102) drawcurve -> DRAWCURVE . LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    LPAREN          shift and go to state 155


state 140

    (93) predefined -> drawsquare .

    ID              reduce using rule 93 (predefined -> drawsquare .)
    IF              reduce using rule 93 (predefined -> drawsquare .)
    PRINT           reduce using rule 93 (predefined -> drawsquare .)
    WHILE           reduce using rule 93 (predefined -> drawsquare .)
    RETURN          reduce using rule 93 (predefined -> drawsquare .)
    DRAWLINE        reduce using rule 93 (predefined -> drawsquare .)
    DRAWSQUARE      reduce using rule 93 (predefined -> drawsquare .)
    DRAWTRIANGLE    reduce using rule 93 (predefined -> drawsquare .)
    DRAWCIRCLE      reduce using rule 93 (predefined -> drawsquare .)
    DRAWCURVE       reduce using rule 93 (predefined -> drawsquare .)
    DRAWPOLYGON     reduce using rule 93 (predefined -> drawsquare .)
    RBRACE          reduce using rule 93 (predefined -> drawsquare .)


state 141

    (17) statute -> functioncall .

    ID              reduce using rule 17 (statute -> functioncall .)
    IF              reduce using rule 17 (statute -> functioncall .)
    PRINT           reduce using rule 17 (statute -> functioncall .)
    WHILE           reduce using rule 17 (statute -> functioncall .)
    RETURN          reduce using rule 17 (statute -> functioncall .)
    DRAWLINE        reduce using rule 17 (statute -> functioncall .)
    DRAWSQUARE      reduce using rule 17 (statute -> functioncall .)
    DRAWTRIANGLE    reduce using rule 17 (statute -> functioncall .)
    DRAWCIRCLE      reduce using rule 17 (statute -> functioncall .)
    DRAWCURVE       reduce using rule 17 (statute -> functioncall .)
    DRAWPOLYGON     reduce using rule 17 (statute -> functioncall .)
    RBRACE          reduce using rule 17 (statute -> functioncall .)


state 142

    (82) parameterprima -> type ID COMMA parameterprima .

    RPAREN          reduce using rule 82 (parameterprima -> type ID COMMA parameterprima .)


state 143

    (78) return -> RETURN singularexp2 . SEMICOLON

    SEMICOLON       shift and go to state 156


state 144

    (100) drawtriangle -> DRAWTRIANGLE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 157
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 145

    (85) cycle -> WHILE LPAREN . singularexp2 RPAREN block
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 158
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 146

    (83) write -> PRINT LPAREN . singularexp2 RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 159
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 147

    (9) block -> LBRACE blockprima RBRACE .

    ID              reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    IF              reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    PRINT           reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    WHILE           reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    RETURN          reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWLINE        reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWSQUARE      reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWTRIANGLE    reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWCIRCLE      reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWCURVE       reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    DRAWPOLYGON     reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    RBRACE          reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    FUNCTION        reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    INTTYPE         reduce using rule 9 (block -> LBRACE blockprima RBRACE .)
    $end            reduce using rule 9 (block -> LBRACE blockprima RBRACE .)


state 148

    (101) drawcircle -> DRAWCIRCLE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 160
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 149

    (99) drawsquare -> DRAWSQUARE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 161
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 150

    (98) drawline -> DRAWLINE LPAREN . singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 162
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 151

    (72) functioncall -> ID LPAREN . funcparam RPAREN SEMICOLON
    (73) funcparam -> . empty
    (74) funcparam -> . singularexp2
    (75) funcparam -> . singularexp COMMA funcparam
    (104) empty -> .
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    RPAREN          reduce using rule 104 (empty -> .)
    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    funcparam                      shift and go to state 166
    singularexp2                   shift and go to state 163
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    constant                       shift and go to state 26
    singularexp                    shift and go to state 164
    expression                     shift and go to state 40
    empty                          shift and go to state 165

state 152

    (20) condition -> IF LPAREN . conditionprima RPAREN block
    (21) conditionprima -> . condprimaaux
    (22) conditionprima -> . NOT condprimaaux
    (23) condprimaaux -> . functioncall
    (24) condprimaaux -> . singularexp2
    (72) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 172
    ID              shift and go to state 169
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    singularexp2                   shift and go to state 167
    functioncall                   shift and go to state 171
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    constant                       shift and go to state 26
    conditionprima                 shift and go to state 168
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40
    condprimaaux                   shift and go to state 170

state 153

    (10) blockprima -> statute blockprima .

    RBRACE          reduce using rule 10 (blockprima -> statute blockprima .)


state 154

    (103) drawpolygon -> DRAWPOLYGON LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 173
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 155

    (102) drawcurve -> DRAWCURVE LPAREN . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 174
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 156

    (78) return -> RETURN singularexp2 SEMICOLON .

    ID              reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    IF              reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    PRINT           reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    WHILE           reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    RETURN          reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWLINE        reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWSQUARE      reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWCIRCLE      reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWCURVE       reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    DRAWPOLYGON     reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)
    RBRACE          reduce using rule 78 (return -> RETURN singularexp2 SEMICOLON .)


state 157

    (100) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 175


state 158

    (85) cycle -> WHILE LPAREN singularexp2 . RPAREN block

    RPAREN          shift and go to state 176


state 159

    (83) write -> PRINT LPAREN singularexp2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 177


state 160

    (101) drawcircle -> DRAWCIRCLE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 178


state 161

    (99) drawsquare -> DRAWSQUARE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 179


state 162

    (98) drawline -> DRAWLINE LPAREN singularexp2 . COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 180


state 163

    (74) funcparam -> singularexp2 .

    RPAREN          reduce using rule 74 (funcparam -> singularexp2 .)


state 164

    (75) funcparam -> singularexp . COMMA funcparam
    (45) singularexp2 -> singularexp .
    (47) singularexp -> singularexp . AND expression
    (48) singularexp -> singularexp . OR expression

    COMMA           shift and go to state 181
    RPAREN          reduce using rule 45 (singularexp2 -> singularexp .)
    AND             shift and go to state 54
    OR              shift and go to state 55


state 165

    (73) funcparam -> empty .

    RPAREN          reduce using rule 73 (funcparam -> empty .)


state 166

    (72) functioncall -> ID LPAREN funcparam . RPAREN SEMICOLON

    RPAREN          shift and go to state 182


state 167

    (24) condprimaaux -> singularexp2 .

    RPAREN          reduce using rule 24 (condprimaaux -> singularexp2 .)


state 168

    (20) condition -> IF LPAREN conditionprima . RPAREN block

    RPAREN          shift and go to state 183


state 169

    (72) functioncall -> ID . LPAREN funcparam RPAREN SEMICOLON
    (67) constant -> ID . constantprima
    (70) constantprima -> . empty
    (71) constantprima -> . LBRACKET singularexp2 RBRACKET
    (104) empty -> .

    LPAREN          shift and go to state 151
    LBRACKET        shift and go to state 61
    TIMES           reduce using rule 104 (empty -> .)
    DEVIDE          reduce using rule 104 (empty -> .)
    PLUS            reduce using rule 104 (empty -> .)
    MINUS           reduce using rule 104 (empty -> .)
    LESSER          reduce using rule 104 (empty -> .)
    GREATER         reduce using rule 104 (empty -> .)
    EQUAL           reduce using rule 104 (empty -> .)
    NOTEQUAL        reduce using rule 104 (empty -> .)
    LESSEROREQUAL   reduce using rule 104 (empty -> .)
    GREATEROREQUAL  reduce using rule 104 (empty -> .)
    AND             reduce using rule 104 (empty -> .)
    OR              reduce using rule 104 (empty -> .)
    RPAREN          reduce using rule 104 (empty -> .)

    constantprima                  shift and go to state 60
    empty                          shift and go to state 62

state 170

    (21) conditionprima -> condprimaaux .

    RPAREN          reduce using rule 21 (conditionprima -> condprimaaux .)


state 171

    (23) condprimaaux -> functioncall .

    RPAREN          reduce using rule 23 (condprimaaux -> functioncall .)


state 172

    (22) conditionprima -> NOT . condprimaaux
    (46) singularexp2 -> NOT . singularexp
    (23) condprimaaux -> . functioncall
    (24) condprimaaux -> . singularexp2
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (72) functioncall -> . ID LPAREN funcparam RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    ID              shift and go to state 169
    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    singularexp2                   shift and go to state 167
    functioncall                   shift and go to state 171
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    constant                       shift and go to state 26
    singularexp                    shift and go to state 184
    expression                     shift and go to state 40
    condprimaaux                   shift and go to state 185

state 173

    (103) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 186


state 174

    (102) drawcurve -> DRAWCURVE LPAREN singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 187


state 175

    (100) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 188
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 176

    (85) cycle -> WHILE LPAREN singularexp2 RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 109

    block                          shift and go to state 189

state 177

    (83) write -> PRINT LPAREN singularexp2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 178

    (101) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 191
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 179

    (99) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 192
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 180

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA . singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 193
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 181

    (75) funcparam -> singularexp COMMA . funcparam
    (73) funcparam -> . empty
    (74) funcparam -> . singularexp2
    (75) funcparam -> . singularexp COMMA funcparam
    (104) empty -> .
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    RPAREN          reduce using rule 104 (empty -> .)
    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    funcparam                      shift and go to state 194
    singularexp2                   shift and go to state 163
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    constant                       shift and go to state 26
    singularexp                    shift and go to state 164
    expression                     shift and go to state 40
    empty                          shift and go to state 165

state 182

    (72) functioncall -> ID LPAREN funcparam RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 195


state 183

    (20) condition -> IF LPAREN conditionprima RPAREN . block
    (9) block -> . LBRACE blockprima RBRACE

    LBRACE          shift and go to state 109

    block                          shift and go to state 196

state 184

    (46) singularexp2 -> NOT singularexp .
    (47) singularexp -> singularexp . AND expression
    (48) singularexp -> singularexp . OR expression
    (45) singularexp2 -> singularexp .

  ! reduce/reduce conflict for RPAREN resolved using rule 45 (singularexp2 -> singularexp .)
    AND             shift and go to state 54
    OR              shift and go to state 55
    RPAREN          reduce using rule 45 (singularexp2 -> singularexp .)

  ! RPAREN          [ reduce using rule 46 (singularexp2 -> NOT singularexp .) ]


state 185

    (22) conditionprima -> NOT condprimaaux .

    RPAREN          reduce using rule 22 (conditionprima -> NOT condprimaaux .)


state 186

    (103) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 197
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 187

    (102) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 198
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 188

    (100) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 199


state 189

    (85) cycle -> WHILE LPAREN singularexp2 RPAREN block .

    ID              reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    IF              reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    PRINT           reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    WHILE           reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    RETURN          reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWLINE        reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWSQUARE      reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWTRIANGLE    reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWCIRCLE      reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWCURVE       reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    DRAWPOLYGON     reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)
    RBRACE          reduce using rule 85 (cycle -> WHILE LPAREN singularexp2 RPAREN block .)


state 190

    (83) write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .

    ID              reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    IF              reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    PRINT           reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 83 (write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON .)


state 191

    (101) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 200


state 192

    (99) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 201


state 193

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 . COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 202


state 194

    (75) funcparam -> singularexp COMMA funcparam .

    RPAREN          reduce using rule 75 (funcparam -> singularexp COMMA funcparam .)


state 195

    (72) functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .

    ID              reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    IF              reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    PRINT           reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)
    RPAREN          reduce using rule 72 (functioncall -> ID LPAREN funcparam RPAREN SEMICOLON .)


state 196

    (20) condition -> IF LPAREN conditionprima RPAREN block .

    ID              reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    IF              reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    PRINT           reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    WHILE           reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    RETURN          reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWLINE        reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWSQUARE      reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWTRIANGLE    reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWCIRCLE      reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWCURVE       reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    DRAWPOLYGON     reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)
    RBRACE          reduce using rule 20 (condition -> IF LPAREN conditionprima RPAREN block .)


state 197

    (103) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 203


state 198

    (102) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 204


state 199

    (100) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 205
    GREEN           shift and go to state 209
    RED             shift and go to state 211
    YELLOW          shift and go to state 208
    BROWN           shift and go to state 206
    BLACK           shift and go to state 210

    color                          shift and go to state 207

state 200

    (101) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 205
    GREEN           shift and go to state 209
    RED             shift and go to state 211
    YELLOW          shift and go to state 208
    BROWN           shift and go to state 206
    BLACK           shift and go to state 210

    color                          shift and go to state 212

state 201

    (99) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 205
    GREEN           shift and go to state 209
    RED             shift and go to state 211
    YELLOW          shift and go to state 208
    BROWN           shift and go to state 206
    BLACK           shift and go to state 210

    color                          shift and go to state 213

state 202

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA . singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 214
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 203

    (103) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 205
    GREEN           shift and go to state 209
    RED             shift and go to state 211
    YELLOW          shift and go to state 208
    BROWN           shift and go to state 206
    BLACK           shift and go to state 210

    color                          shift and go to state 215

state 204

    (102) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 205
    GREEN           shift and go to state 209
    RED             shift and go to state 211
    YELLOW          shift and go to state 208
    BROWN           shift and go to state 206
    BLACK           shift and go to state 210

    color                          shift and go to state 216

state 205

    (86) color -> BLUE .

    RPAREN          reduce using rule 86 (color -> BLUE .)


state 206

    (90) color -> BROWN .

    RPAREN          reduce using rule 90 (color -> BROWN .)


state 207

    (100) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 217


state 208

    (89) color -> YELLOW .

    RPAREN          reduce using rule 89 (color -> YELLOW .)


state 209

    (87) color -> GREEN .

    RPAREN          reduce using rule 87 (color -> GREEN .)


state 210

    (91) color -> BLACK .

    RPAREN          reduce using rule 91 (color -> BLACK .)


state 211

    (88) color -> RED .

    RPAREN          reduce using rule 88 (color -> RED .)


state 212

    (101) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 218


state 213

    (99) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 219


state 214

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 . COMMA singularexp2 COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 220


state 215

    (103) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 221


state 216

    (102) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 222


state 217

    (100) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 223


state 218

    (101) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 219

    (99) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 225


state 220

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA . singularexp2 COMMA color RPAREN SEMICOLON
    (45) singularexp2 -> . singularexp
    (46) singularexp2 -> . NOT singularexp
    (47) singularexp -> . singularexp AND expression
    (48) singularexp -> . singularexp OR expression
    (49) singularexp -> . expression
    (50) expression -> . expression LESSER exp
    (51) expression -> . expression GREATER exp
    (52) expression -> . expression EQUAL exp
    (53) expression -> . expression NOTEQUAL exp
    (54) expression -> . expression LESSEROREQUAL exp
    (55) expression -> . expression GREATEROREQUAL exp
    (56) expression -> . exp
    (57) exp -> . exp PLUS term
    (58) exp -> . exp MINUS term
    (59) exp -> . term
    (60) term -> . term TIMES factor
    (61) term -> . term DEVIDE factor
    (62) term -> . factor
    (63) factor -> . LPAREN singularexp2 RPAREN
    (64) factor -> . PLUS constant
    (65) factor -> . MINUS constant
    (66) factor -> . constant
    (67) constant -> . ID constantprima
    (68) constant -> . FLOAT
    (69) constant -> . INT

    NOT             shift and go to state 39
    LPAREN          shift and go to state 32
    PLUS            shift and go to state 30
    MINUS           shift and go to state 29
    ID              shift and go to state 34
    FLOAT           shift and go to state 37
    INT             shift and go to state 36

    term                           shift and go to state 35
    constant                       shift and go to state 26
    singularexp2                   shift and go to state 226
    exp                            shift and go to state 38
    factor                         shift and go to state 31
    singularexp                    shift and go to state 28
    expression                     shift and go to state 40

state 221

    (103) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 227


state 222

    (102) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 223

    (100) drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 100 (drawtriangle -> DRAWTRIANGLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 224

    (101) drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 101 (drawcircle -> DRAWCIRCLE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 225

    (99) drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 99 (drawsquare -> DRAWSQUARE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 226

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 . COMMA color RPAREN SEMICOLON

    COMMA           shift and go to state 229


state 227

    (103) drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 103 (drawpolygon -> DRAWPOLYGON LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 228

    (102) drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 102 (drawcurve -> DRAWCURVE LPAREN singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)


state 229

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA . color RPAREN SEMICOLON
    (86) color -> . BLUE
    (87) color -> . GREEN
    (88) color -> . RED
    (89) color -> . YELLOW
    (90) color -> . BROWN
    (91) color -> . BLACK

    BLUE            shift and go to state 205
    GREEN           shift and go to state 209
    RED             shift and go to state 211
    YELLOW          shift and go to state 208
    BROWN           shift and go to state 206
    BLACK           shift and go to state 210

    color                          shift and go to state 230

state 230

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color . RPAREN SEMICOLON

    RPAREN          shift and go to state 231


state 231

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 232


state 232

    (98) drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .

    ID              reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    IF              reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    PRINT           reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    WHILE           reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RETURN          reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWLINE        reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWSQUARE      reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWTRIANGLE    reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCIRCLE      reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWCURVE       reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    DRAWPOLYGON     reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)
    RBRACE          reduce using rule 98 (drawline -> DRAWLINE LPAREN singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA singularexp2 COMMA color RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 184 resolved using rule (singularexp2 -> singularexp)
WARNING: rejected rule (singularexp2 -> NOT singularexp) in state 184
