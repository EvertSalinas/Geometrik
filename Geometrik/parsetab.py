
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftEQUALNOTEQUALleftLESSERGREATERLESSEROREQUALGREATEROREQUALleftPLUSMINUSleftTIMESDEVIDEnonassocLPARENRPARENID FUNCTIONID PARAMID NUMBER PLUS MINUS TIMES DEVIDE ASSIGN EQUAL NOTEQUAL GREATER LESSER GREATEROREQUAL LESSEROREQUAL AND OR NOT LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE PERIOD COMMA COLON SEMICOLON INT STRING FLOAT BLUE DRAWTRIANGLE FALSE INTTYPE FLOATTYPE DRAWCURVE BOOLEANTYPE BLACK RED IF BROWN DRAWLINE PROGRAM PRINT INPUT FUNCTION RETURN STRINGTYPE DRAWPOLYGON VOID ELSE BREAK VAR GREEN TRUE YELLOW DRAWSQUARE WHILE DRAWCIRCLE\n    program : PROGRAM ID SEMICOLON programvars programfunction block\n\n    \n    programvars : vars\n                | empty\n    \n    programfunction : function programfunction\n                    | empty\n    \n    block : LBRACE blockprima RBRACE\n    \n    blockprima : statute blockprima\n               | empty\n    \n    statute : assignment\n            | condition\n            | write\n            | read\n            | cycle\n            | functioncall\n            | predefined\n    \n    condition : IF LPAREN singularexp2 RPAREN block\n              | IF LPAREN functioncall RPAREN block\n              | IF LPAREN singularexp2 RPAREN block ELSE block\n              | IF LPAREN functioncall RPAREN block ELSE block\n              | IF LPAREN NOT singularexp2 RPAREN block\n              | IF LPAREN NOT functioncall RPAREN block\n              | IF LPAREN NOT singularexp2 RPAREN block ELSE block\n              | IF LPAREN NOT functioncall RPAREN block ELSE block\n    \n    vars : VAR ID varsprima COLON type SEMICOLON\n    \n    varsprima : COMMA ID varsprima\n              | empty\n    \n    type : INTTYPE\n         | FLOATTYPE\n         | STRINGTYPE\n         | BOOLEANTYPE\n         | array\n    \n    array : INTTYPE LBRACKET ID RBRACKET\n          | INTTYPE LBRACKET NUMBER RBRACKET\n          | FLOATTYPE LBRACKET NUMBER RBRACKET\n          | FLOATTYPE LBRACKET ID RBRACKET\n          | STRING LBRACKET ID RBRACKET\n          | STRING LBRACKET NUMBER RBRACKET\n    \n    assignment : ID ASSIGN singularexp2 SEMICOLON\n               | ID ASSIGN functioncall \n    \n    singularexp2 : singularexp\n    \t\t\t | NOT singularexp\n                \n    \n    singularexp : singularexp AND expression\n                | singularexp OR expression\n                | expression\n    \n    expression : expression LESSER exp \n               | expression GREATER exp\n               | expression EQUAL exp\n               | expression NOTEQUAL exp\n               | expression LESSEROREQUAL exp\n               | expression GREATEROREQUAL exp\n               | exp\n    \n    exp : exp PLUS term\n        | exp MINUS term\n        | term\n    \n    term : term TIMES factor\n         | term DEVIDE factor\n         | factor\n    \n    factor : LPAREN singularexp2 RPAREN\n           | PLUS varcte\n           | MINUS varcte\n           | varcte\n    \n    varcte : INT\n           | FLOAT\n           | STRING\n           | ID\n           | bool\n    \n    bool : TRUE\n         | FALSE\n    \n    functioncall : FUNCTIONID LPAREN RPAREN SEMICOLON\n                 | FUNCTIONID LPAREN funcparam RPAREN SEMICOLON\n    \n    funcparam : singularexp2 funcparamprima\n              | ID funcparamprima\n    \n    funcparamprima : COMMA funcparam\n                   | empty\n    \n    function : FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN block\n             | FUNCTION type FUNCTIONID LPAREN parameter RPAREN block\n             | FUNCTION VOID FUNCTIONID LPAREN RPAREN block\n             | FUNCTION type FUNCTIONID LPAREN RPAREN block\n    \n    parameter : type ID parameterprima\n    \n    parameterprima : COMMA type ID parameterprima\n                   | empty\n    \n    write : PRINT LPAREN singularexp2 RPAREN SEMICOLON\n          | PRINT LPAREN ID RPAREN SEMICOLON\n    \n    read : ID ASSIGN INPUT SEMICOLON\n    \n    cycle : WHILE LPAREN singularexp2 RPAREN block\n    \n    color : BLUE\n          | GREEN\n          | RED\n          | YELLOW\n          | BROWN\n          | BLACK\n    \n    predefined : drawline\n               | drawsquare\n               | drawtriangle\n               | drawcircle\n               | drawcurve\n               | drawpolygon\n    \n    drawline : DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON\n    \n    drawsquare : DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON\n    \n    drawtriangle : DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON\n    \n    drawcircle : DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON\n    \n    drawcurve : DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON\n    \n    drawpolygon : DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON\n    \n    idssexp : PARAMID\n            | singularexp2\n    \n    empty :\n    '
    
_lr_action_items = {'NOTEQUAL':([100,102,103,104,106,108,109,110,111,112,113,116,119,134,143,144,184,185,186,187,188,189,190,191,192,193,194,195,196,],[-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,151,-65,-65,-60,-59,151,151,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,]),'DRAWTRIANGLE':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[36,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,36,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'VOID':([11,],[21,]),'NUMBER':([30,33,34,],[64,69,70,]),'YELLOW':([212,213,214,220,221,254,],[226,226,226,226,226,226,]),'LBRACKET':([19,23,25,],[30,33,34,]),'WHILE':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[37,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,37,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'PROGRAM':([0,],[2,]),'BLACK':([212,213,214,220,221,254,],[228,228,228,228,228,228,]),'INPUT':([79,],[124,]),'PRINT':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[38,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,38,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'TRUE':([72,73,74,76,77,78,79,80,82,83,84,101,105,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'MINUS':([72,73,74,76,77,78,79,80,82,83,84,100,102,103,104,106,107,108,109,110,111,112,113,114,119,128,134,140,141,142,143,144,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,186,187,188,189,190,191,192,193,194,195,196,215,243,],[101,101,101,101,101,101,101,101,101,101,101,-67,-61,-66,-57,-64,101,-65,-54,-68,-62,-63,149,101,-65,101,-65,101,101,101,-60,-59,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-58,-56,-55,-52,-53,149,149,149,149,149,149,101,101,]),'RED':([212,213,214,220,221,254,],[229,229,229,229,229,229,]),'RBRACE':([26,35,39,40,42,43,45,46,47,48,49,50,51,54,56,60,61,75,81,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[-106,-94,-15,75,-92,-11,-95,-13,-8,-97,-12,-9,-96,-10,-106,-93,-14,-6,-7,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'STRINGTYPE':([11,29,66,67,179,],[18,18,18,18,18,]),'RPAREN':([66,67,84,90,92,99,100,102,103,104,106,108,109,110,111,112,113,116,117,118,119,126,127,131,133,134,136,143,144,145,150,167,168,169,173,174,175,177,178,180,184,185,186,187,188,189,190,191,192,193,194,195,196,209,210,222,223,224,225,226,227,228,229,230,231,237,238,239,255,],[88,91,132,137,139,-40,-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,-44,157,158,159,165,166,-106,176,-65,-106,-60,-59,186,-41,205,-40,206,-71,-74,-69,-72,-79,-81,-42,-43,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,-73,-70,-106,-86,-90,240,-89,-87,-91,-88,241,242,246,247,-80,256,]),'SEMICOLON':([3,18,19,22,23,24,63,86,87,93,94,95,96,99,100,102,103,104,106,108,109,110,111,112,113,116,123,124,132,143,144,150,158,159,176,184,185,186,187,188,189,190,191,192,193,194,195,196,240,241,242,246,247,256,],[4,-29,-28,-30,-27,-31,85,-34,-35,-32,-33,-37,-36,-40,-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,-44,163,164,175,-60,-59,-41,198,199,210,-42,-43,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,248,249,250,252,253,257,]),'DRAWLINE':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[52,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,52,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'DEVIDE':([100,102,103,104,106,108,109,110,111,112,119,134,143,144,186,187,188,189,190,],[-67,-61,-66,-57,-64,-65,146,-68,-62,-63,-65,-65,-60,-59,-58,-56,-55,146,146,]),'PLUS':([72,73,74,76,77,78,79,80,82,83,84,100,102,103,104,106,107,108,109,110,111,112,113,114,119,128,134,140,141,142,143,144,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,186,187,188,189,190,191,192,193,194,195,196,215,243,],[105,105,105,105,105,105,105,105,105,105,105,-67,-61,-66,-57,-64,105,-65,-54,-68,-62,-63,148,105,-65,105,-65,105,105,105,-60,-59,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-58,-56,-55,-52,-53,148,148,148,148,148,148,105,105,]),'DRAWSQUARE':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[44,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,44,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'COLON':([9,15,16,28,62,],[-106,29,-26,-106,-25,]),'COMMA':([9,28,97,98,99,100,102,103,104,106,108,109,110,111,112,113,115,116,120,121,122,129,130,131,134,136,143,144,150,183,184,185,186,187,188,189,190,191,192,193,194,195,196,200,201,202,207,208,222,232,251,],[14,14,140,-105,-40,-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,-104,-44,160,161,162,170,171,172,172,179,-60,-59,-41,212,-42,-43,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,213,214,215,220,221,179,243,254,]),'FUNCTIONID':([18,19,20,21,22,23,24,26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,79,80,86,87,93,94,95,96,125,128,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[-29,-28,31,32,-30,-27,-31,59,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,59,-93,-14,-6,59,59,-34,-35,-32,-33,-37,-36,-39,59,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'$end':([1,27,75,],[0,-1,-6,]),'FUNCTION':([4,5,6,8,10,75,85,135,138,181,182,],[-106,-2,-3,11,11,-6,-24,-78,-77,-76,-75,]),'BLUE':([212,213,214,220,221,254,],[223,223,223,223,223,223,]),'STRING':([11,29,66,67,72,73,74,76,77,78,79,80,82,83,84,101,105,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,179,215,243,],[25,25,25,25,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,25,106,106,]),'FLOATTYPE':([11,29,66,67,179,],[19,19,19,19,19,]),'EQUAL':([100,102,103,104,106,108,109,110,111,112,113,116,119,134,143,144,184,185,186,187,188,189,190,191,192,193,194,195,196,],[-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,154,-65,-65,-60,-59,154,154,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,]),'ELSE':([75,203,204,218,219,],[-6,216,217,235,236,]),'LPAREN':([31,32,36,37,38,41,44,52,55,57,58,59,72,73,74,76,77,78,79,80,82,83,84,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[66,67,72,73,74,76,77,78,80,82,83,84,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'VAR':([4,],[7,]),'FALSE':([72,73,74,76,77,78,79,80,82,83,84,101,105,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'TIMES':([100,102,103,104,106,108,109,110,111,112,119,134,143,144,186,187,188,189,190,],[-67,-61,-66,-57,-64,-65,147,-68,-62,-63,-65,-65,-60,-59,-58,-56,-55,147,147,]),'ID':([2,7,14,18,19,22,23,24,26,30,33,34,35,39,42,43,45,46,48,49,50,51,54,56,60,61,72,73,74,75,76,77,78,79,80,82,83,84,86,87,89,93,94,95,96,101,105,107,114,125,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,163,164,170,171,172,175,197,198,199,203,204,210,211,215,218,219,233,234,243,244,245,248,249,250,252,253,257,],[3,9,28,-29,-28,-30,-27,-31,53,65,68,71,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,53,-93,-14,108,108,119,-6,108,108,108,108,108,108,108,134,-34,-35,136,-32,-33,-37,-36,108,108,108,108,-39,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-38,-84,108,108,134,-69,-85,-82,-83,-16,-17,-70,222,108,-20,-21,-18,-19,108,-22,-23,-100,-101,-99,-103,-102,-98,]),'IF':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[55,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,55,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'AND':([99,100,102,103,104,106,108,109,110,111,112,113,116,119,134,143,144,150,168,184,185,186,187,188,189,190,191,192,193,194,195,196,],[141,-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,-44,-65,-65,-60,-59,141,141,-42,-43,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,]),'LBRACE':([4,5,6,8,10,12,13,17,75,85,88,91,135,137,138,139,157,165,166,181,182,205,206,216,217,235,236,],[-106,-2,-3,-106,-106,-5,26,-4,-6,-24,26,26,-78,26,-77,26,26,26,26,-76,-75,26,26,26,26,26,26,]),'INTTYPE':([11,29,66,67,179,],[23,23,23,23,23,]),'GREATER':([100,102,103,104,106,108,109,110,111,112,113,116,119,134,143,144,184,185,186,187,188,189,190,191,192,193,194,195,196,],[-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,152,-65,-65,-60,-59,152,152,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,]),'DRAWPOLYGON':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[57,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,57,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'INT':([72,73,74,76,77,78,79,80,82,83,84,101,105,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'LESSEROREQUAL':([100,102,103,104,106,108,109,110,111,112,113,116,119,134,143,144,184,185,186,187,188,189,190,191,192,193,194,195,196,],[-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,153,-65,-65,-60,-59,153,153,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,]),'FLOAT':([72,73,74,76,77,78,79,80,82,83,84,101,105,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'DRAWCURVE':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[58,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,58,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'ASSIGN':([53,],[79,]),'LESSER':([100,102,103,104,106,108,109,110,111,112,113,116,119,134,143,144,184,185,186,187,188,189,190,191,192,193,194,195,196,],[-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,155,-65,-65,-60,-59,155,155,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,]),'DRAWCIRCLE':([26,35,39,42,43,45,46,48,49,50,51,54,56,60,61,75,125,163,164,175,197,198,199,203,204,210,218,219,233,234,244,245,248,249,250,252,253,257,],[41,-94,-15,-92,-11,-95,-13,-97,-12,-9,-96,-10,41,-93,-14,-6,-39,-38,-84,-69,-85,-82,-83,-16,-17,-70,-20,-21,-18,-19,-22,-23,-100,-101,-99,-103,-102,-98,]),'GREATEROREQUAL':([100,102,103,104,106,108,109,110,111,112,113,116,119,134,143,144,184,185,186,187,188,189,190,191,192,193,194,195,196,],[-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,156,-65,-65,-60,-59,156,156,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,]),'BOOLEANTYPE':([11,29,66,67,179,],[22,22,22,22,22,]),'NOT':([72,73,74,76,77,78,79,80,82,83,84,107,128,140,160,161,162,170,171,172,215,243,],[114,114,114,114,114,114,114,128,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'GREEN':([212,213,214,220,221,254,],[227,227,227,227,227,227,]),'RBRACKET':([64,65,68,69,70,71,],[86,87,93,94,95,96,]),'PARAMID':([72,76,77,78,82,83,140,160,161,162,170,171,215,243,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'OR':([99,100,102,103,104,106,108,109,110,111,112,113,116,119,134,143,144,150,168,184,185,186,187,188,189,190,191,192,193,194,195,196,],[142,-67,-61,-66,-57,-64,-65,-54,-68,-62,-63,-51,-44,-65,-65,-60,-59,142,142,-42,-43,-58,-56,-55,-52,-53,-48,-46,-49,-47,-45,-50,]),'BROWN':([212,213,214,220,221,254,],[224,224,224,224,224,224,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'idssexp':([72,76,77,78,82,83,140,160,161,162,170,171,215,243,],[97,120,121,122,129,130,183,200,201,202,207,208,232,251,]),'drawtriangle':([26,56,],[35,35,]),'vars':([4,],[5,]),'color':([212,213,214,220,221,254,],[225,230,231,237,238,255,]),'drawcurve':([26,56,],[51,51,]),'varsprima':([9,28,],[15,62,]),'singularexp':([72,73,74,76,77,78,79,80,82,83,84,107,114,128,140,160,161,162,170,171,172,215,243,],[99,99,99,99,99,99,99,99,99,99,99,99,150,168,99,99,99,99,99,99,99,99,99,]),'array':([11,29,66,67,179,],[24,24,24,24,24,]),'predefined':([26,56,],[39,39,]),'blockprima':([26,56,],[40,81,]),'varcte':([72,73,74,76,77,78,79,80,82,83,84,101,105,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[102,102,102,102,102,102,102,102,102,102,102,143,144,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'drawline':([26,56,],[42,42,]),'funcparamprima':([131,134,],[173,177,]),'write':([26,56,],[43,43,]),'program':([0,],[1,]),'bool':([72,73,74,76,77,78,79,80,82,83,84,101,105,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'programvars':([4,],[8,]),'factor':([72,73,74,76,77,78,79,80,82,83,84,107,114,128,140,141,142,146,147,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,187,188,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'drawcircle':([26,56,],[45,45,]),'type':([11,29,66,67,179,],[20,63,89,89,211,]),'empty':([4,8,9,10,26,28,56,131,134,136,222,],[6,12,16,12,47,16,47,174,174,180,180,]),'function':([8,10,],[10,10,]),'funcparam':([84,172,],[133,209,]),'drawpolygon':([26,56,],[48,48,]),'read':([26,56,],[49,49,]),'assignment':([26,56,],[50,50,]),'singularexp2':([72,73,74,76,77,78,79,80,82,83,84,107,128,140,160,161,162,170,171,172,215,243,],[98,117,118,98,98,98,123,126,98,98,131,145,167,98,98,98,98,98,98,131,98,98,]),'programfunction':([8,10,],[13,17,]),'parameterprima':([136,222,],[178,239,]),'condition':([26,56,],[54,54,]),'cycle':([26,56,],[46,46,]),'statute':([26,56,],[56,56,]),'term':([72,73,74,76,77,78,79,80,82,83,84,107,114,128,140,141,142,148,149,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,189,190,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'parameter':([66,67,],[90,92,]),'drawsquare':([26,56,],[60,60,]),'functioncall':([26,56,79,80,128,],[61,61,125,127,169,]),'exp':([72,73,74,76,77,78,79,80,82,83,84,107,114,128,140,141,142,151,152,153,154,155,156,160,161,162,170,171,172,215,243,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,191,192,193,194,195,196,113,113,113,113,113,113,113,113,]),'expression':([72,73,74,76,77,78,79,80,82,83,84,107,114,128,140,141,142,160,161,162,170,171,172,215,243,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,184,185,116,116,116,116,116,116,116,116,]),'block':([13,88,91,137,139,157,165,166,205,206,216,217,235,236,],[27,135,138,181,182,197,203,204,218,219,233,234,244,245,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON programvars programfunction block','program',6,'p_PROGRAM','parserCompis.py',15),
  ('programvars -> vars','programvars',1,'p_PROGRAMVARS','parserCompis.py',22),
  ('programvars -> empty','programvars',1,'p_PROGRAMVARS','parserCompis.py',23),
  ('programfunction -> function programfunction','programfunction',2,'p_PROGRAMFUNCTION','parserCompis.py',29),
  ('programfunction -> empty','programfunction',1,'p_PROGRAMFUNCTION','parserCompis.py',30),
  ('block -> LBRACE blockprima RBRACE','block',3,'p_BLOCK','parserCompis.py',39),
  ('blockprima -> statute blockprima','blockprima',2,'p_BLOCKPRIMA','parserCompis.py',45),
  ('blockprima -> empty','blockprima',1,'p_BLOCKPRIMA','parserCompis.py',46),
  ('statute -> assignment','statute',1,'p_STATUTE','parserCompis.py',53),
  ('statute -> condition','statute',1,'p_STATUTE','parserCompis.py',54),
  ('statute -> write','statute',1,'p_STATUTE','parserCompis.py',55),
  ('statute -> read','statute',1,'p_STATUTE','parserCompis.py',56),
  ('statute -> cycle','statute',1,'p_STATUTE','parserCompis.py',57),
  ('statute -> functioncall','statute',1,'p_STATUTE','parserCompis.py',58),
  ('statute -> predefined','statute',1,'p_STATUTE','parserCompis.py',59),
  ('condition -> IF LPAREN singularexp2 RPAREN block','condition',5,'p_CONDITION','parserCompis.py',65),
  ('condition -> IF LPAREN functioncall RPAREN block','condition',5,'p_CONDITION','parserCompis.py',66),
  ('condition -> IF LPAREN singularexp2 RPAREN block ELSE block','condition',7,'p_CONDITION','parserCompis.py',67),
  ('condition -> IF LPAREN functioncall RPAREN block ELSE block','condition',7,'p_CONDITION','parserCompis.py',68),
  ('condition -> IF LPAREN NOT singularexp2 RPAREN block','condition',6,'p_CONDITION','parserCompis.py',69),
  ('condition -> IF LPAREN NOT functioncall RPAREN block','condition',6,'p_CONDITION','parserCompis.py',70),
  ('condition -> IF LPAREN NOT singularexp2 RPAREN block ELSE block','condition',8,'p_CONDITION','parserCompis.py',71),
  ('condition -> IF LPAREN NOT functioncall RPAREN block ELSE block','condition',8,'p_CONDITION','parserCompis.py',72),
  ('vars -> VAR ID varsprima COLON type SEMICOLON','vars',6,'p_VARS','parserCompis.py',85),
  ('varsprima -> COMMA ID varsprima','varsprima',3,'p_VARSPRIMA','parserCompis.py',91),
  ('varsprima -> empty','varsprima',1,'p_VARSPRIMA','parserCompis.py',92),
  ('type -> INTTYPE','type',1,'p_TYPE','parserCompis.py',101),
  ('type -> FLOATTYPE','type',1,'p_TYPE','parserCompis.py',102),
  ('type -> STRINGTYPE','type',1,'p_TYPE','parserCompis.py',103),
  ('type -> BOOLEANTYPE','type',1,'p_TYPE','parserCompis.py',104),
  ('type -> array','type',1,'p_TYPE','parserCompis.py',105),
  ('array -> INTTYPE LBRACKET ID RBRACKET','array',4,'p_ARRAY','parserCompis.py',111),
  ('array -> INTTYPE LBRACKET NUMBER RBRACKET','array',4,'p_ARRAY','parserCompis.py',112),
  ('array -> FLOATTYPE LBRACKET NUMBER RBRACKET','array',4,'p_ARRAY','parserCompis.py',113),
  ('array -> FLOATTYPE LBRACKET ID RBRACKET','array',4,'p_ARRAY','parserCompis.py',114),
  ('array -> STRING LBRACKET ID RBRACKET','array',4,'p_ARRAY','parserCompis.py',115),
  ('array -> STRING LBRACKET NUMBER RBRACKET','array',4,'p_ARRAY','parserCompis.py',116),
  ('assignment -> ID ASSIGN singularexp2 SEMICOLON','assignment',4,'p_ASSIGNMENT','parserCompis.py',122),
  ('assignment -> ID ASSIGN functioncall','assignment',3,'p_ASSIGNMENT','parserCompis.py',123),
  ('singularexp2 -> singularexp','singularexp2',1,'p_SS_EXPRESSION','parserCompis.py',133),
  ('singularexp2 -> NOT singularexp','singularexp2',2,'p_SS_EXPRESSION','parserCompis.py',134),
  ('singularexp -> singularexp AND expression','singularexp',3,'p_S_EXPRESSION','parserCompis.py',144),
  ('singularexp -> singularexp OR expression','singularexp',3,'p_S_EXPRESSION','parserCompis.py',145),
  ('singularexp -> expression','singularexp',1,'p_S_EXPRESSION','parserCompis.py',146),
  ('expression -> expression LESSER exp','expression',3,'p_EXPRESSION','parserCompis.py',155),
  ('expression -> expression GREATER exp','expression',3,'p_EXPRESSION','parserCompis.py',156),
  ('expression -> expression EQUAL exp','expression',3,'p_EXPRESSION','parserCompis.py',157),
  ('expression -> expression NOTEQUAL exp','expression',3,'p_EXPRESSION','parserCompis.py',158),
  ('expression -> expression LESSEROREQUAL exp','expression',3,'p_EXPRESSION','parserCompis.py',159),
  ('expression -> expression GREATEROREQUAL exp','expression',3,'p_EXPRESSION','parserCompis.py',160),
  ('expression -> exp','expression',1,'p_EXPRESSION','parserCompis.py',161),
  ('exp -> exp PLUS term','exp',3,'p_EXP','parserCompis.py',170),
  ('exp -> exp MINUS term','exp',3,'p_EXP','parserCompis.py',171),
  ('exp -> term','exp',1,'p_EXP','parserCompis.py',172),
  ('term -> term TIMES factor','term',3,'p_TERM','parserCompis.py',181),
  ('term -> term DEVIDE factor','term',3,'p_TERM','parserCompis.py',182),
  ('term -> factor','term',1,'p_TERM','parserCompis.py',183),
  ('factor -> LPAREN singularexp2 RPAREN','factor',3,'p_FACTOR','parserCompis.py',192),
  ('factor -> PLUS varcte','factor',2,'p_FACTOR','parserCompis.py',193),
  ('factor -> MINUS varcte','factor',2,'p_FACTOR','parserCompis.py',194),
  ('factor -> varcte','factor',1,'p_FACTOR','parserCompis.py',195),
  ('varcte -> INT','varcte',1,'p_VARCTE','parserCompis.py',206),
  ('varcte -> FLOAT','varcte',1,'p_VARCTE','parserCompis.py',207),
  ('varcte -> STRING','varcte',1,'p_VARCTE','parserCompis.py',208),
  ('varcte -> ID','varcte',1,'p_VARCTE','parserCompis.py',209),
  ('varcte -> bool','varcte',1,'p_VARCTE','parserCompis.py',210),
  ('bool -> TRUE','bool',1,'p_BOOLEAN','parserCompis.py',216),
  ('bool -> FALSE','bool',1,'p_BOOLEAN','parserCompis.py',217),
  ('functioncall -> FUNCTIONID LPAREN RPAREN SEMICOLON','functioncall',4,'p_FUNCTIONCALL','parserCompis.py',224),
  ('functioncall -> FUNCTIONID LPAREN funcparam RPAREN SEMICOLON','functioncall',5,'p_FUNCTIONCALL','parserCompis.py',225),
  ('funcparam -> singularexp2 funcparamprima','funcparam',2,'p_FUNCPARAM','parserCompis.py',234),
  ('funcparam -> ID funcparamprima','funcparam',2,'p_FUNCPARAM','parserCompis.py',235),
  ('funcparamprima -> COMMA funcparam','funcparamprima',2,'p_FUNCPARAMPRIMA','parserCompis.py',241),
  ('funcparamprima -> empty','funcparamprima',1,'p_FUNCPARAMPRIMA','parserCompis.py',242),
  ('function -> FUNCTION VOID FUNCTIONID LPAREN parameter RPAREN block','function',7,'p_FUNCTION','parserCompis.py',252),
  ('function -> FUNCTION type FUNCTIONID LPAREN parameter RPAREN block','function',7,'p_FUNCTION','parserCompis.py',253),
  ('function -> FUNCTION VOID FUNCTIONID LPAREN RPAREN block','function',6,'p_FUNCTION','parserCompis.py',254),
  ('function -> FUNCTION type FUNCTIONID LPAREN RPAREN block','function',6,'p_FUNCTION','parserCompis.py',255),
  ('parameter -> type ID parameterprima','parameter',3,'p_PARAMETER','parserCompis.py',261),
  ('parameterprima -> COMMA type ID parameterprima','parameterprima',4,'p_PARAMETERPRIMA','parserCompis.py',268),
  ('parameterprima -> empty','parameterprima',1,'p_PARAMETERPRIMA','parserCompis.py',269),
  ('write -> PRINT LPAREN singularexp2 RPAREN SEMICOLON','write',5,'p_WRITE','parserCompis.py',276),
  ('write -> PRINT LPAREN ID RPAREN SEMICOLON','write',5,'p_WRITE','parserCompis.py',277),
  ('read -> ID ASSIGN INPUT SEMICOLON','read',4,'p_READ','parserCompis.py',283),
  ('cycle -> WHILE LPAREN singularexp2 RPAREN block','cycle',5,'p_CYCLE','parserCompis.py',289),
  ('color -> BLUE','color',1,'p_COLOR','parserCompis.py',295),
  ('color -> GREEN','color',1,'p_COLOR','parserCompis.py',296),
  ('color -> RED','color',1,'p_COLOR','parserCompis.py',297),
  ('color -> YELLOW','color',1,'p_COLOR','parserCompis.py',298),
  ('color -> BROWN','color',1,'p_COLOR','parserCompis.py',299),
  ('color -> BLACK','color',1,'p_COLOR','parserCompis.py',300),
  ('predefined -> drawline','predefined',1,'p_PREDEFINED','parserCompis.py',306),
  ('predefined -> drawsquare','predefined',1,'p_PREDEFINED','parserCompis.py',307),
  ('predefined -> drawtriangle','predefined',1,'p_PREDEFINED','parserCompis.py',308),
  ('predefined -> drawcircle','predefined',1,'p_PREDEFINED','parserCompis.py',309),
  ('predefined -> drawcurve','predefined',1,'p_PREDEFINED','parserCompis.py',310),
  ('predefined -> drawpolygon','predefined',1,'p_PREDEFINED','parserCompis.py',311),
  ('drawline -> DRAWLINE LPAREN idssexp COMMA idssexp COMMA idssexp COMMA idssexp COMMA color RPAREN SEMICOLON','drawline',13,'p_DRAWLINE','parserCompis.py',317),
  ('drawsquare -> DRAWSQUARE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON','drawsquare',9,'p_DRAWSQUARE','parserCompis.py',323),
  ('drawtriangle -> DRAWTRIANGLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON','drawtriangle',9,'p_DRAWTRIANGLE','parserCompis.py',329),
  ('drawcircle -> DRAWCIRCLE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON','drawcircle',9,'p_DRAWCIRCLE','parserCompis.py',335),
  ('drawcurve -> DRAWCURVE LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON','drawcurve',9,'p_DRAWCURVE','parserCompis.py',341),
  ('drawpolygon -> DRAWPOLYGON LPAREN idssexp COMMA idssexp COMMA color RPAREN SEMICOLON','drawpolygon',9,'p_DRAWPOLYGON','parserCompis.py',347),
  ('idssexp -> PARAMID','idssexp',1,'p_IDSSEXP','parserCompis.py',354),
  ('idssexp -> singularexp2','idssexp',1,'p_IDSSEXP','parserCompis.py',355),
  ('empty -> <empty>','empty',0,'p_EMPTY','parserCompis.py',365),
]
