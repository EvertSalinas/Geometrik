class semantic_Cube:

    # Constructor
    def __init__(self):
        self.semantic_cube = {
            "int": {
              "int": {
                "+":"int",
                "-":"int",
                "*":"int",
                "/":"int",
                ">":"boolean",
                ">=":"boolean",
                "<=":"boolean",
                "<":"boolean",
                "=":"int",
                "==": "boolean",
                "!=":"boolean",
                "&&":"Error",
                "||":"Error",
                },
              "float": {
                "+":"float",
                "-":"float",
                "*":"float",
                "/":"float",
                ">":"boolean",
                ">=":"boolean",
                "<=":"boolean",
                "<":"boolean",
                "=":"int",
                "==": "boolean",
                "!=":"boolean",
                "&&":"Error",
                "||":"Error",
                },
              "string": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              "boolean": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              },
            "float":{
              "int": {
                "+":"float",
                "-":"float",
                "*":"float",
                "/":"float",
                ">":"boolean",
                ">=":"boolean",
                "<=":"boolean",
                "<":"boolean",
                "=":"float",
                "==": "boolean",
                "!=":"boolean",
                "&&":"Error",
                "||":"Error",
                },
              "float": {
                "+":"float",
                "-":"float",
                "*":"float",
                "/":"float",
                ">":"boolean",
                ">=":"boolean",
                "<=":"boolean",
                "<":"boolean",
                "=":"float",
                "==": "boolean",
                "!=":"boolean",
                "&&":"Error",
                "||":"Error",
                },
              "string": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              "bool": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              },
            "string":{
              "int": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              "float": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              "string": {
                "+":"string",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"string",
                "==": "boolean",
                "!=":"boolean",
                "&&":"Error",
                "||":"Error",
                },
              "boolean": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              },
            "boolean":{
              "int": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              "float": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==": "Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              "string": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"Error",
                "==":"Error",
                "!=":"Error",
                "&&":"Error",
                "||":"Error",
                },
              "boolean": {
                "+":"Error",
                "-":"Error",
                "*":"Error",
                "/":"Error",
                ">":"Error",
                ">=":"Error",
                "<=":"Error",
                "<":"Error",
                "=":"boolean",
                "==":"boolean",
                "!=":"boolean",
                "&&":"boolean",
                "||":"boolean",
                },
              },
            }

    def getType(self, type1, type2, operator):
        return self.semantic_cube[type1][type2][operator]
